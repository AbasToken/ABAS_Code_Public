{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalburn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "burnedFor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "TotalDaysBurned",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ZeroXBitcoinAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ForgeAmount",
          "type": "uint256"
        }
      ],
      "name": "Zap",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AddressForgeToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressZeroXBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AuctionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Liquidity_PoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockz",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        }
      ],
      "name": "ONEburn0xBTCForMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtMin",
          "type": "uint256"
        }
      ],
      "name": "ONEburn0xBTCForMemberNOBLOCK",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "OneTeste0",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "OneTeste233",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "OneTeste32",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "OneTeste4233",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        }
      ],
      "name": "OneTeste44233",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "StakingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Total0xBTCToRecieve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TotalForgeToRecieve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountZapped",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "daysPerEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extraGas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "moderators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextDayTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "secondsPerDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timescalled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBurnt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalEmitted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "viewMinFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amtToInput",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/ender.sol"
  },
  "ast": {
    "absolutePath": "contracts/ender.sol",
    "exportedSymbols": {
      "ExtendedMath": [
        1388
      ],
      "ForgeAuctions": [
        1666
      ],
      "ForgeStaking": [
        1681
      ],
      "ForgeZap": [
        2637
      ],
      "GasPump": [
        1514
      ],
      "IERC20": [
        1448
      ],
      "LiquidityPool": [
        1587
      ],
      "OwnableAndMods": [
        1229
      ],
      "SafeMath": [
        1369
      ],
      "SwapRouter": [
        1548
      ]
    },
    "id": 2638,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1152,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "63:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OwnableAndMods",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1229,
        "linearizedBaseContracts": [
          1229
        ],
        "name": "OwnableAndMods",
        "nameLocation": "97:14:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1154,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "132:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1229,
            "src": "117:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1153,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "117:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bd842a11",
            "id": 1157,
            "mutability": "mutable",
            "name": "moderators",
            "nameLocation": "161:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1229,
            "src": "143:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1155,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "143:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1156,
              "nodeType": "ArrayTypeName",
              "src": "143:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1163,
            "name": "OwnershipTransferred",
            "nameLocation": "184:20:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1159,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "221:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "205:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "205:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1161,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "252:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1163,
                  "src": "236:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "204:57:3"
            },
            "src": "178:84:3"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "282:35:3",
              "statements": [
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1166,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1154,
                      "src": "292:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1167,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "300:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "300:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "292:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "292:18:3"
                }
              ]
            },
            "id": 1172,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:2:3"
            },
            "returnParameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:0:3"
            },
            "scope": 1229,
            "src": "268:49:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1184,
              "nodeType": "Block",
              "src": "426:92:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1176,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "444:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "444:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1178,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "458:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "444:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 1180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "465:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 1175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "436:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1182,
                  "nodeType": "ExpressionStatement",
                  "src": "436:64:3"
                },
                {
                  "id": 1183,
                  "nodeType": "PlaceholderStatement",
                  "src": "510:1:3"
                }
              ]
            },
            "documentation": {
              "id": 1173,
              "nodeType": "StructuredDocumentation",
              "src": "323:77:3",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 1185,
            "name": "onlyOwner",
            "nameLocation": "414:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:2:3"
            },
            "src": "405:113:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1227,
              "nodeType": "Block",
              "src": "549:255:3",
              "statements": [
                {
                  "assignments": [
                    1188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1188,
                      "mutability": "mutable",
                      "name": "isModerator",
                      "nameLocation": "560:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1227,
                      "src": "555:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1187,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "555:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1190,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "574:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "555:24:3"
                },
                {
                  "body": {
                    "id": 1214,
                    "nodeType": "Block",
                    "src": "625:69:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1202,
                              "name": "moderators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "635:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1204,
                            "indexExpression": {
                              "id": 1203,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "646:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "635:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1205,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "652:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "652:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "635:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1213,
                        "nodeType": "IfStatement",
                        "src": "632:58:3",
                        "trueBody": {
                          "id": 1212,
                          "nodeType": "Block",
                          "src": "663:27:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1208,
                                  "name": "isModerator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1188,
                                  "src": "667:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 1209,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "681:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "667:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1211,
                              "nodeType": "ExpressionStatement",
                              "src": "667:18:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1195,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1192,
                      "src": "599:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1196,
                        "name": "moderators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "602:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "602:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "599:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1215,
                  "initializationExpression": {
                    "assignments": [
                      1192
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "594:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "589:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "589:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1194,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "596:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "589:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "621:3:3",
                      "subExpression": {
                        "id": 1199,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1192,
                        "src": "621:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1201,
                    "nodeType": "ExpressionStatement",
                    "src": "621:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "585:109:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1217,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "711:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "711:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1219,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "725:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "711:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 1221,
                          "name": "isModerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1188,
                          "src": "734:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "711:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65722f6d6f64",
                        "id": 1223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "747:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb3d12244e7c3ed3be5fe04b58a4705f17447c15f1e33ccaace2aed677476b64",
                          "typeString": "literal_string \"Ownable: caller is not the owner/mod\""
                        },
                        "value": "Ownable: caller is not the owner/mod"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb3d12244e7c3ed3be5fe04b58a4705f17447c15f1e33ccaace2aed677476b64",
                          "typeString": "literal_string \"Ownable: caller is not the owner/mod\""
                        }
                      ],
                      "id": 1216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "703:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "703:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1225,
                  "nodeType": "ExpressionStatement",
                  "src": "703:83:3"
                },
                {
                  "id": 1226,
                  "nodeType": "PlaceholderStatement",
                  "src": "796:1:3"
                }
              ]
            },
            "id": 1228,
            "name": "OnlyModerators",
            "nameLocation": "532:14:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:2:3"
            },
            "src": "523:281:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2638,
        "src": "88:718:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeMath",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1369,
        "linearizedBaseContracts": [
          1369
        ],
        "name": "SafeMath",
        "nameLocation": "817:8:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1253,
              "nodeType": "Block",
              "src": "899:93:3",
              "statements": [
                {
                  "assignments": [
                    1239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "917:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1253,
                      "src": "909:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "909:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1243,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1240,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "921:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 1241,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1233,
                      "src": "925:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "921:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "909:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1245,
                          "name": "z",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1239,
                          "src": "944:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1246,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1231,
                          "src": "949:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "944:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464206f766572666c6f77",
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        },
                        "value": "Add overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        }
                      ],
                      "id": 1244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "936:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1250,
                  "nodeType": "ExpressionStatement",
                  "src": "936:31:3"
                },
                {
                  "expression": {
                    "id": 1251,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1239,
                    "src": "984:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1237,
                  "id": 1252,
                  "nodeType": "Return",
                  "src": "977:8:3"
                }
              ]
            },
            "id": 1254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "841:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "853:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "845:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "845:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1233,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "864:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "856:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "844:22:3"
            },
            "returnParameters": {
              "id": 1237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1254,
                  "src": "890:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:9:3"
            },
            "scope": 1369,
            "src": "832:160:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1274,
              "nodeType": "Block",
              "src": "1065:71:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1264,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1256,
                          "src": "1083:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1265,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1258,
                          "src": "1088:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1083:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53756220756e646572666c6f77",
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1091:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        },
                        "value": "Sub underflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        }
                      ],
                      "id": 1263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1075:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "1075:32:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1270,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1256,
                      "src": "1124:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1271,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1258,
                      "src": "1128:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1124:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1262,
                  "id": 1273,
                  "nodeType": "Return",
                  "src": "1117:12:3"
                }
              ]
            },
            "id": 1275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nameLocation": "1007:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1256,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1019:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "1011:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1258,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1030:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "1022:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1010:22:3"
            },
            "returnParameters": {
              "id": 1262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1275,
                  "src": "1056:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1056:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1055:9:3"
            },
            "scope": 1369,
            "src": "998:138:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1308,
              "nodeType": "Block",
              "src": "1210:153:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1284,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "1224:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1229:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1224:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1290,
                  "nodeType": "IfStatement",
                  "src": "1220:45:3",
                  "trueBody": {
                    "id": 1289,
                    "nodeType": "Block",
                    "src": "1232:33:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1253:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1283,
                        "id": 1288,
                        "nodeType": "Return",
                        "src": "1246:8:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1292
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1292,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "1283:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1308,
                      "src": "1275:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1275:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1293,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "1287:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 1294,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1279,
                      "src": "1291:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1287:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1275:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1298,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "1310:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1299,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "1314:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1310:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1301,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1279,
                          "src": "1319:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1310:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74206f766572666c6f77",
                        "id": 1303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1322:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        },
                        "value": "Mult overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        }
                      ],
                      "id": 1297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1302:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1302:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "1302:36:3"
                },
                {
                  "expression": {
                    "id": 1306,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1292,
                    "src": "1355:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1283,
                  "id": 1307,
                  "nodeType": "Return",
                  "src": "1348:8:3"
                }
              ]
            },
            "id": 1309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mult",
            "nameLocation": "1151:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1164:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1156:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1156:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1279,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1175:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1167:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1155:22:3"
            },
            "returnParameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1309,
                  "src": "1201:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:9:3"
            },
            "scope": 1369,
            "src": "1142:221:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "1436:69:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1319,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1313,
                          "src": "1454:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1459:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1454:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 1322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 1318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1446:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:30:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1325,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1311,
                      "src": "1493:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1326,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1313,
                      "src": "1497:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1493:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1317,
                  "id": 1328,
                  "nodeType": "Return",
                  "src": "1486:12:3"
                }
              ]
            },
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nameLocation": "1378:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1390:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "1382:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1382:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1401:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "1393:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1381:22:3"
            },
            "returnParameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1316,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "1427:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1315,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:9:3"
            },
            "scope": 1369,
            "src": "1369:136:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1367,
              "nodeType": "Block",
              "src": "1583:152:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1340,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "1601:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1606:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1601:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 1343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1609:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 1339,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1593:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1593:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1345,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:30:3"
                },
                {
                  "assignments": [
                    1347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1347,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "1641:1:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1367,
                      "src": "1633:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1346,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1633:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1351,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1348,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1332,
                      "src": "1645:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1349,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1334,
                      "src": "1649:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1645:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1633:17:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1352,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1332,
                        "src": "1664:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 1353,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "1668:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1664:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1673:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1664:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1364,
                  "nodeType": "IfStatement",
                  "src": "1660:50:3",
                  "trueBody": {
                    "id": 1363,
                    "nodeType": "Block",
                    "src": "1676:34:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1357,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "1690:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1358,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "1694:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1698:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "1694:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1690:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1362,
                        "nodeType": "ExpressionStatement",
                        "src": "1690:9:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1365,
                    "name": "r",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1347,
                    "src": "1727:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1338,
                  "id": 1366,
                  "nodeType": "Return",
                  "src": "1720:8:3"
                }
              ]
            },
            "id": 1368,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divRound",
            "nameLocation": "1520:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1332,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "1537:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1368,
                  "src": "1529:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "1548:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1368,
                  "src": "1540:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:22:3"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1368,
                  "src": "1574:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1573:9:3"
            },
            "scope": 1369,
            "src": "1511:224:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2638,
        "src": "809:928:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtendedMath",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1388,
        "linearizedBaseContracts": [
          1388
        ],
        "name": "ExtendedMath",
        "nameLocation": "1747:12:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1386,
              "nodeType": "Block",
              "src": "1890:56:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1378,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1371,
                      "src": "1904:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1379,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "1908:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1904:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1383,
                  "nodeType": "IfStatement",
                  "src": "1901:18:3",
                  "trueBody": {
                    "expression": {
                      "id": 1381,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1373,
                      "src": "1918:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 1377,
                    "id": 1382,
                    "nodeType": "Return",
                    "src": "1911:8:3"
                  }
                },
                {
                  "expression": {
                    "id": 1384,
                    "name": "a",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1371,
                    "src": "1937:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1377,
                  "id": 1385,
                  "nodeType": "Return",
                  "src": "1930:8:3"
                }
              ]
            },
            "id": 1387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "limitLessThan",
            "nameLocation": "1829:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1371,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "1848:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "1843:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1843:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "1856:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "1851:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1842:16:3"
            },
            "returnParameters": {
              "id": 1377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1376,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "1887:1:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "1882:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1881:8:3"
            },
            "scope": 1388,
            "src": "1820:126:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2638,
        "src": "1739:209:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1448,
        "linearizedBaseContracts": [
          1448
        ],
        "name": "IERC20",
        "nameLocation": "1959:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1389,
              "nodeType": "StructuredDocumentation",
              "src": "1973:72:3",
              "text": " @dev Returns the amount of tokens owned by `account`."
            },
            "functionSelector": "70a08231",
            "id": 1396,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2059:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2077:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1396,
                  "src": "2069:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2069:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2068:17:3"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1396,
                  "src": "2109:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2109:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2108:9:3"
            },
            "scope": 1448,
            "src": "2050:68:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1397,
              "nodeType": "StructuredDocumentation",
              "src": "2124:209:3",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "a9059cbb",
            "id": 1406,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2347:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2364:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "2356:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2356:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1401,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2383:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "2375:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2375:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2355:35:3"
            },
            "returnParameters": {
              "id": 1405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1404,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1406,
                  "src": "2409:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1403,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2408:6:3"
            },
            "scope": 1448,
            "src": "2338:77:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1407,
              "nodeType": "StructuredDocumentation",
              "src": "2421:264:3",
              "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
            },
            "functionSelector": "dd62ed3e",
            "id": 1416,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "2699:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1409,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2717:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "2709:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2709:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2732:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "2724:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2724:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2708:32:3"
            },
            "returnParameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "2764:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2763:9:3"
            },
            "scope": 1448,
            "src": "2690:83:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1417,
              "nodeType": "StructuredDocumentation",
              "src": "2779:642:3",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 1426,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3435:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1419,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3451:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "3443:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3468:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "3460:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3460:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3442:33:3"
            },
            "returnParameters": {
              "id": 1425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1424,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1426,
                  "src": "3494:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3494:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3493:6:3"
            },
            "scope": 1448,
            "src": "3426:74:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1427,
              "nodeType": "StructuredDocumentation",
              "src": "3506:296:3",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 1438,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3816:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1429,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3837:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "3829:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3829:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3853:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "3845:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3845:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1433,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3872:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "3864:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3864:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3828:51:3"
            },
            "returnParameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1436,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1438,
                  "src": "3898:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1435,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3898:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3897:6:3"
            },
            "scope": 1448,
            "src": "3807:97:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1439,
              "nodeType": "StructuredDocumentation",
              "src": "4074:148:3",
              "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
            },
            "id": 1447,
            "name": "Approval",
            "nameLocation": "4233:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1441,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4258:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1447,
                  "src": "4242:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4242:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1443,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4281:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1447,
                  "src": "4265:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4265:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1445,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4298:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1447,
                  "src": "4290:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4290:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4241:63:3"
            },
            "src": "4227:78:3"
          }
        ],
        "scope": 2638,
        "src": "1949:2367:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GasPump",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1514,
        "linearizedBaseContracts": [
          1514
        ],
        "name": "GasPump",
        "nameLocation": "4327:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1450,
            "mutability": "mutable",
            "name": "stub",
            "nameLocation": "4357:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 1514,
            "src": "4341:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1449,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4341:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1512,
              "nodeType": "Block",
              "src": "4405:458:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1454,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "4419:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "src": "4419:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4434:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4419:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1458,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "4439:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4439:9:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "id": 1460,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4451:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gaslimit",
                        "nodeType": "MemberAccess",
                        "src": "4451:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4439:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4419:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "4831:26:3",
                    "statements": [
                      {
                        "id": 1509,
                        "nodeType": "PlaceholderStatement",
                        "src": "4845:1:3"
                      }
                    ]
                  },
                  "id": 1511,
                  "nodeType": "IfStatement",
                  "src": "4415:442:3",
                  "trueBody": {
                    "id": 1508,
                    "nodeType": "Block",
                    "src": "4467:358:3",
                    "statements": [
                      {
                        "assignments": [
                          1465
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1465,
                            "mutability": "mutable",
                            "name": "startgas",
                            "nameLocation": "4489:8:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1508,
                            "src": "4481:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1464,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4481:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1468,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1466,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "4500:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4500:9:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4481:28:3"
                      },
                      {
                        "id": 1469,
                        "nodeType": "PlaceholderStatement",
                        "src": "4523:1:3"
                      },
                      {
                        "assignments": [
                          1471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1471,
                            "mutability": "mutable",
                            "name": "delta",
                            "nameLocation": "4546:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1508,
                            "src": "4538:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4538:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1476,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1472,
                            "name": "startgas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "4554:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1473,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "4565:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4565:9:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4554:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4538:36:3"
                      },
                      {
                        "assignments": [
                          1478
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1478,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "4596:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1508,
                            "src": "4588:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1477,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4588:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1485,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1479,
                                  "name": "delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1471,
                                  "src": "4606:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1480,
                                  "name": "_factor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1452,
                                  "src": "4614:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4606:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1482,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4605:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4625:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4605:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4588:40:3"
                      },
                      {
                        "expression": {
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1486,
                            "name": "startgas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1465,
                            "src": "4642:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1487,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "4653:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4653:9:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4642:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1490,
                        "nodeType": "ExpressionStatement",
                        "src": "4642:20:3"
                      },
                      {
                        "body": {
                          "id": 1506,
                          "nodeType": "Block",
                          "src": "4714:101:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 1504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1497,
                                  "name": "stub",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1450,
                                  "src": "4760:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1501,
                                          "name": "stub",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1450,
                                          "src": "4794:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1499,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "4777:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1500,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "4777:16:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1502,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4777:22:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1498,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "4767:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1503,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4767:33:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "4760:40:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1505,
                              "nodeType": "ExpressionStatement",
                              "src": "4760:40:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1491,
                              "name": "startgas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1465,
                              "src": "4683:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1492,
                                "name": "gasleft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -7,
                                "src": "4694:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4694:9:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4683:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1495,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1478,
                            "src": "4706:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4683:29:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1507,
                        "nodeType": "WhileStatement",
                        "src": "4676:139:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 1513,
            "name": "requestGas",
            "nameLocation": "4377:10:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1452,
                  "mutability": "mutable",
                  "name": "_factor",
                  "nameLocation": "4396:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1513,
                  "src": "4388:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4387:17:3"
            },
            "src": "4368:495:3",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2638,
        "src": "4318:547:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SwapRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1548,
        "linearizedBaseContracts": [
          1548
        ],
        "name": "SwapRouter",
        "nameLocation": "4875:10:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1531,
              "nodeType": "Block",
              "src": "5051:2:3",
              "statements": []
            },
            "functionSelector": "38ed1739",
            "id": 1532,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactTokensForTokens",
            "nameLocation": "4900:24:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "4930:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "4925:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4925:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "4945:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "4940:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4940:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1521,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "4978:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "4959:23:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1519,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4959:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1520,
                    "nodeType": "ArrayTypeName",
                    "src": "4959:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1523,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4992:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "4984:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4984:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1525,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "5001:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "4996:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4996:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4924:86:3"
            },
            "returnParameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "5043:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1532,
                  "src": "5029:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1527,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5029:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1528,
                    "nodeType": "ArrayTypeName",
                    "src": "5029:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:23:3"
            },
            "scope": 1548,
            "src": "4891:162:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1546,
              "nodeType": "Block",
              "src": "5187:2:3",
              "statements": []
            },
            "functionSelector": "7ff36ab5",
            "id": 1547,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactETHForTokens",
            "nameLocation": "5067:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "5097:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "5089:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5089:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "5130:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "5111:23:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1535,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5111:7:3",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1536,
                    "nodeType": "ArrayTypeName",
                    "src": "5111:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5144:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "5136:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5136:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "5156:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "5148:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5148:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5088:77:3"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "5182:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5182:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5181:6:3"
            },
            "scope": 1548,
            "src": "5058:131:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2638,
        "src": "4866:329:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LiquidityPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1587,
        "linearizedBaseContracts": [
          1587
        ],
        "name": "LiquidityPool",
        "nameLocation": "5205:13:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1557,
              "nodeType": "Block",
              "src": "5294:2:3",
              "statements": []
            },
            "functionSelector": "0902f1ac",
            "id": 1558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getReserves",
            "nameLocation": "5233:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5244:2:3"
            },
            "returnParameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "5268:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "5268:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "5277:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "5277:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "5286:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5286:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5267:26:3"
            },
            "scope": 1587,
            "src": "5224:72:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1579,
              "nodeType": "Block",
              "src": "5419:2:3",
              "statements": []
            },
            "functionSelector": "e8e33700",
            "id": 1580,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "5310:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1560,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5323:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5323:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1562,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5332:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5332:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1564,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5341:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1563,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5341:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5350:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5350:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1568,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5359:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5359:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1570,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5368:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5368:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5378:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5378:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5387:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5322:74:3"
            },
            "returnParameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1580,
                  "src": "5413:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5413:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5412:6:3"
            },
            "scope": 1587,
            "src": "5301:120:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1585,
              "nodeType": "Block",
              "src": "5480:2:3",
              "statements": []
            },
            "functionSelector": "490203a7",
            "id": 1586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningReward",
            "nameLocation": "5435:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5450:2:3"
            },
            "returnParameters": {
              "id": 1584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1583,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "5474:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1582,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5474:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5473:6:3"
            },
            "scope": 1587,
            "src": "5426:56:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2638,
        "src": "5196:292:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ForgeAuctions",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1666,
        "linearizedBaseContracts": [
          1666
        ],
        "name": "ForgeAuctions",
        "nameLocation": "5498:13:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "60b29259",
            "id": 1593,
            "mutability": "mutable",
            "name": "mapEraDay_Units",
            "nameLocation": "5559:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 1666,
            "src": "5517:57:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 1592,
              "keyType": {
                "id": 1588,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "5525:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5517:34:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => uint256))"
              },
              "valueType": {
                "id": 1591,
                "keyType": {
                  "id": 1589,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "5539:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "5531:19:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueType": {
                  "id": 1590,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "5545:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c9302c9",
            "id": 1595,
            "mutability": "mutable",
            "name": "currentDay",
            "nameLocation": "5594:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1666,
            "src": "5582:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1594,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5582:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "973628f6",
            "id": 1597,
            "mutability": "mutable",
            "name": "currentEra",
            "nameLocation": "5622:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1666,
            "src": "5610:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1596,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5610:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3ac1c863",
            "id": 1599,
            "mutability": "mutable",
            "name": "daysPerEra",
            "nameLocation": "5650:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1666,
            "src": "5638:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1598,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5638:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63809953",
            "id": 1601,
            "mutability": "mutable",
            "name": "secondsPerDay",
            "nameLocation": "5679:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 1666,
            "src": "5667:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1600,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5667:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fee05d62",
            "id": 1603,
            "mutability": "mutable",
            "name": "nextDayTime",
            "nameLocation": "5710:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1666,
            "src": "5698:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1602,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5698:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1608,
              "nodeType": "Block",
              "src": "5781:2:3",
              "statements": []
            },
            "functionSelector": "c0abebe0",
            "id": 1609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningMinted",
            "nameLocation": "5736:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5751:2:3"
            },
            "returnParameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1609,
                  "src": "5775:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1605,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5775:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5774:6:3"
            },
            "scope": 1666,
            "src": "5727:56:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1614,
              "nodeType": "Block",
              "src": "5824:2:3",
              "statements": []
            },
            "functionSelector": "ee1f84c3",
            "id": 1615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WithdrawEz",
            "nameLocation": "5797:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1615,
                  "src": "5808:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5808:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5807:9:3"
            },
            "returnParameters": {
              "id": 1613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5824:0:3"
            },
            "scope": 1666,
            "src": "5788:38:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1630,
              "nodeType": "Block",
              "src": "5940:2:3",
              "statements": []
            },
            "functionSelector": "090eb616",
            "id": 1631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "FutureBurn0xBTCArrays",
            "nameLocation": "5840:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "5862:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5862:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "5869:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1618,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5869:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1619,
                    "nodeType": "ArrayTypeName",
                    "src": "5869:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1622,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "5885:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5885:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "5894:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1623,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "5894:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1624,
                    "nodeType": "ArrayTypeName",
                    "src": "5894:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5861:48:3"
            },
            "returnParameters": {
              "id": 1629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "5934:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5934:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5933:6:3"
            },
            "scope": 1666,
            "src": "5831:111:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1646,
              "nodeType": "Block",
              "src": "6043:2:3",
              "statements": []
            },
            "functionSelector": "a0dab241",
            "id": 1647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "FutureBurn0xBTCEasier",
            "nameLocation": "5956:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "5978:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5978:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1635,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "5984:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1634,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5984:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1637,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "5990:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1636,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5990:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "5996:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5996:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1641,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "6006:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1640,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6006:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5977:35:3"
            },
            "returnParameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1647,
                  "src": "6037:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6036:6:3"
            },
            "scope": 1666,
            "src": "5947:98:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1656,
              "nodeType": "Block",
              "src": "6133:2:3",
              "statements": []
            },
            "functionSelector": "7400457f",
            "id": 1657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "WholeEraBurn0xBTCForMember",
            "nameLocation": "6059:26:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "6086:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6086:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1651,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "6095:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6095:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6085:18:3"
            },
            "returnParameters": {
              "id": 1655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1657,
                  "src": "6128:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6128:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6127:6:3"
            },
            "scope": 1666,
            "src": "6050:85:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1664,
              "nodeType": "Block",
              "src": "6202:2:3",
              "statements": []
            },
            "functionSelector": "6de63e26",
            "id": 1665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn0xBTCForMember",
            "nameLocation": "6149:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "6168:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6168:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1661,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1665,
                  "src": "6177:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6177:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6167:18:3"
            },
            "returnParameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6202:0:3"
            },
            "scope": 1666,
            "src": "6140:64:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2638,
        "src": "5489:721:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ForgeStaking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1681,
        "linearizedBaseContracts": [
          1681
        ],
        "name": "ForgeStaking",
        "nameLocation": "6220:12:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1673,
              "nodeType": "Block",
              "src": "6297:2:3",
              "statements": []
            },
            "functionSelector": "70458d85",
            "id": 1674,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeFor",
            "nameLocation": "6247:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "6256:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6256:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1674,
                  "src": "6265:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 1669,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6265:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6255:18:3"
            },
            "returnParameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6297:0:3"
            },
            "scope": 1681,
            "src": "6238:61:3",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1679,
              "nodeType": "Block",
              "src": "6363:2:3",
              "statements": []
            },
            "functionSelector": "490203a7",
            "id": 1680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningReward",
            "nameLocation": "6318:15:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6333:2:3"
            },
            "returnParameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1677,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1680,
                  "src": "6357:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6357:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6356:6:3"
            },
            "scope": 1681,
            "src": "6309:56:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2638,
        "src": "6211:160:3",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1682,
              "name": "GasPump",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1514,
              "src": "6397:7:3"
            },
            "id": 1683,
            "nodeType": "InheritanceSpecifier",
            "src": "6397:7:3"
          },
          {
            "baseName": {
              "id": 1684,
              "name": "OwnableAndMods",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1229,
              "src": "6406:14:3"
            },
            "id": 1685,
            "nodeType": "InheritanceSpecifier",
            "src": "6406:14:3"
          }
        ],
        "canonicalName": "ForgeZap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2637,
        "linearizedBaseContracts": [
          2637,
          1229,
          1514
        ],
        "name": "ForgeZap",
        "nameLocation": "6384:8:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1688,
            "libraryName": {
              "id": 1686,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1369,
              "src": "6438:8:3"
            },
            "nodeType": "UsingForDirective",
            "src": "6432:24:3",
            "typeName": {
              "id": 1687,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6451:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1691,
            "libraryName": {
              "id": 1689,
              "name": "ExtendedMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1388,
              "src": "6467:12:3"
            },
            "nodeType": "UsingForDirective",
            "src": "6461:28:3",
            "typeName": {
              "id": 1690,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6484:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "510de094",
            "id": 1693,
            "mutability": "mutable",
            "name": "AddressZeroXBTC",
            "nameLocation": "6509:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6494:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1692,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6494:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1261e92",
            "id": 1695,
            "mutability": "mutable",
            "name": "AddressForgeToken",
            "nameLocation": "6545:17:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6530:32:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1694,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6530:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3767e339",
            "id": 1697,
            "mutability": "mutable",
            "name": "extraGas",
            "nameLocation": "6608:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6593:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1696,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6593:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1700,
            "mutability": "mutable",
            "name": "runonce",
            "nameLocation": "6627:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6622:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1698,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "6622:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1699,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6637:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1703,
            "mutability": "mutable",
            "name": "oneEthUnit",
            "nameLocation": "6656:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6648:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1701,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6648:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 1702,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6669:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1706,
            "mutability": "mutable",
            "name": "one0xBTCUnit",
            "nameLocation": "6703:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6695:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1704,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6695:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 1705,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6726:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1708,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "6755:4:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6741:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1707,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "6741:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 1710,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "6777:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6765:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1709,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6765:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1714,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "6848:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6815:42:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1713,
              "keyType": {
                "id": 1711,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6823:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6815:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1712,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "6834:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1720,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "6916:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6863:64:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1719,
              "keyType": {
                "id": 1715,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6871:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6863:44:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1718,
                "keyType": {
                  "id": 1716,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "6890:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "6882:24:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1717,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "6901:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "8560a2f4",
            "id": 1722,
            "mutability": "mutable",
            "name": "Liquidity_PoolAddress",
            "nameLocation": "6948:21:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6933:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1721,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6933:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "953fb4fb",
            "id": 1724,
            "mutability": "mutable",
            "name": "StakingAddress",
            "nameLocation": "6990:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "6975:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1723,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6975:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08e7154a",
            "id": 1726,
            "mutability": "mutable",
            "name": "AuctionAddress",
            "nameLocation": "7025:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7010:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1725,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7010:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7303e8cd",
            "id": 1729,
            "mutability": "mutable",
            "name": "Total0xBTCToRecieve",
            "nameLocation": "7060:19:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7045:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1727,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7045:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1728,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7082:1:3",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d39614f4",
            "id": 1731,
            "mutability": "mutable",
            "name": "timescalled",
            "nameLocation": "7127:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7115:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1730,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7115:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e3e0e3ee",
            "id": 1733,
            "mutability": "mutable",
            "name": "amountZapped",
            "nameLocation": "7159:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7144:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1732,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7144:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c9302c9",
            "id": 1735,
            "mutability": "mutable",
            "name": "currentDay",
            "nameLocation": "7185:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7173:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1734,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7173:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3ac1c863",
            "id": 1737,
            "mutability": "mutable",
            "name": "daysPerEra",
            "nameLocation": "7213:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7201:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1736,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7201:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "63809953",
            "id": 1739,
            "mutability": "mutable",
            "name": "secondsPerDay",
            "nameLocation": "7237:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7225:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1738,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7225:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fee05d62",
            "id": 1741,
            "mutability": "mutable",
            "name": "nextDayTime",
            "nameLocation": "7268:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7256:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1740,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7256:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "966ff650",
            "id": 1743,
            "mutability": "mutable",
            "name": "totalBurnt",
            "nameLocation": "7297:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7285:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1742,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7285:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "df0244b1",
            "id": 1745,
            "mutability": "mutable",
            "name": "totalEmitted",
            "nameLocation": "7321:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7309:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1744,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7309:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8c817d1",
            "id": 1747,
            "mutability": "mutable",
            "name": "TotalForgeToRecieve",
            "nameLocation": "7347:19:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7335:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1746,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7335:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1749,
            "mutability": "mutable",
            "name": "LPPool0xBTCForge",
            "nameLocation": "7403:16:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7395:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1748,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7395:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1751,
            "mutability": "mutable",
            "name": "AddressUSDC",
            "nameLocation": "7433:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7425:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1750,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7425:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1753,
            "mutability": "mutable",
            "name": "AddressMatic",
            "nameLocation": "7458:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7450:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1752,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7450:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1755,
            "mutability": "mutable",
            "name": "AddressLP3",
            "nameLocation": "7484:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7476:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1754,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7476:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1757,
            "mutability": "mutable",
            "name": "AddressStake",
            "nameLocation": "7508:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7500:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1756,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "7500:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1760,
            "mutability": "mutable",
            "name": "Quickswap",
            "nameLocation": "7538:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7527:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SwapRouter_$1548",
              "typeString": "contract SwapRouter"
            },
            "typeName": {
              "id": 1759,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1758,
                "name": "SwapRouter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1548,
                "src": "7527:10:3"
              },
              "referencedDeclaration": 1548,
              "src": "7527:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapRouter_$1548",
                "typeString": "contract SwapRouter"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1763,
            "mutability": "mutable",
            "name": "Forge_Auction",
            "nameLocation": "7567:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7553:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
              "typeString": "contract ForgeAuctions"
            },
            "typeName": {
              "id": 1762,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1761,
                "name": "ForgeAuctions",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1666,
                "src": "7553:13:3"
              },
              "referencedDeclaration": 1666,
              "src": "7553:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                "typeString": "contract ForgeAuctions"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1766,
            "mutability": "mutable",
            "name": "Forge_Staking",
            "nameLocation": "7599:13:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7586:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ForgeStaking_$1681",
              "typeString": "contract ForgeStaking"
            },
            "typeName": {
              "id": 1765,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1764,
                "name": "ForgeStaking",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1681,
                "src": "7586:12:3"
              },
              "referencedDeclaration": 1681,
              "src": "7586:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ForgeStaking_$1681",
                "typeString": "contract ForgeStaking"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1769,
            "mutability": "mutable",
            "name": "LP3",
            "nameLocation": "7632:3:3",
            "nodeType": "VariableDeclaration",
            "scope": 2637,
            "src": "7618:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LiquidityPool_$1587",
              "typeString": "contract LiquidityPool"
            },
            "typeName": {
              "id": 1768,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1767,
                "name": "LiquidityPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1587,
                "src": "7618:13:3"
              },
              "referencedDeclaration": 1587,
              "src": "7618:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                "typeString": "contract LiquidityPool"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 1775,
            "name": "Zap",
            "nameLocation": "7687:3:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ZeroXBitcoinAmount",
                  "nameLocation": "7699:18:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1775,
                  "src": "7691:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7691:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1773,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ForgeAmount",
                  "nameLocation": "7727:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1775,
                  "src": "7719:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7719:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7690:49:3"
            },
            "src": "7681:59:3"
          },
          {
            "anonymous": false,
            "id": 1783,
            "name": "Burn",
            "nameLocation": "7755:4:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalburn",
                  "nameLocation": "7768:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1783,
                  "src": "7760:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7760:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1779,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burnedFor",
                  "nameLocation": "7787:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1783,
                  "src": "7779:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7779:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1781,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "TotalDaysBurned",
                  "nameLocation": "7803:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1783,
                  "src": "7798:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7798:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7759:60:3"
            },
            "src": "7749:71:3"
          },
          {
            "body": {
              "id": 1852,
              "nodeType": "Block",
              "src": "7979:798:3",
              "statements": [
                {
                  "expression": {
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1786,
                      "name": "AddressForgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "7996:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307846343466423433303636463745434339313035384533413631344662384131354132373335323736",
                          "id": 1789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8024:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xF44fB43066F7ECC91058E3A614Fb8A15A2735276"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8016:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8016:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8016:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7996:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1792,
                  "nodeType": "ExpressionStatement",
                  "src": "7996:71:3"
                },
                {
                  "expression": {
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1793,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1693,
                      "src": "8077:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837314238323161613532613439463332454564353335664341364562356161313330303835393738",
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8103:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x71B821aa52a49F32EEd535fCA6Eb5aa130085978"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8095:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1794,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8095:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8095:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8077:69:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1799,
                  "nodeType": "ExpressionStatement",
                  "src": "8077:69:3"
                },
                {
                  "expression": {
                    "id": 1804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1800,
                      "name": "Forge_Auction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1763,
                      "src": "8156:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                        "typeString": "contract ForgeAuctions"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307842623166413837413437333842323246376432443545433334624133343933373542344438364630",
                          "id": 1802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8186:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xBb1fA87A4738B22F7d2D5EC34bA349375B4D86F0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1801,
                        "name": "ForgeAuctions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "8172:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ForgeAuctions_$1666_$",
                          "typeString": "type(contract ForgeAuctions)"
                        }
                      },
                      "id": 1803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8172:57:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                        "typeString": "contract ForgeAuctions"
                      }
                    },
                    "src": "8156:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                      "typeString": "contract ForgeAuctions"
                    }
                  },
                  "id": 1805,
                  "nodeType": "ExpressionStatement",
                  "src": "8156:73:3"
                },
                {
                  "expression": {
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1806,
                      "name": "Quickswap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1760,
                      "src": "8239:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapRouter_$1548",
                        "typeString": "contract SwapRouter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307861354530383239436143456438664644443444653363343336393663353746374437413637386666",
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8262:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1807,
                        "name": "SwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "8251:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapRouter_$1548_$",
                          "typeString": "type(contract SwapRouter)"
                        }
                      },
                      "id": 1809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8251:54:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapRouter_$1548",
                        "typeString": "contract SwapRouter"
                      }
                    },
                    "src": "8239:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapRouter_$1548",
                      "typeString": "contract SwapRouter"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "8239:66:3"
                },
                {
                  "expression": {
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1812,
                      "name": "LP3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1769,
                      "src": "8315:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307835363233323246384537313331443062423966343837414535363639333564336265393634303642",
                          "id": 1814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8335:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x562322F8E7131D0bB9f487AE566935d3be96406B"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1813,
                        "name": "LiquidityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1587,
                        "src": "8321:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LiquidityPool_$1587_$",
                          "typeString": "type(contract LiquidityPool)"
                        }
                      },
                      "id": 1815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8321:57:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                        "typeString": "contract LiquidityPool"
                      }
                    },
                    "src": "8315:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                      "typeString": "contract LiquidityPool"
                    }
                  },
                  "id": 1817,
                  "nodeType": "ExpressionStatement",
                  "src": "8315:63:3"
                },
                {
                  "expression": {
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1818,
                      "name": "AddressUSDC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1751,
                      "src": "8388:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307832373931426361316632646534363631454438384133304339394137613934343941613834313734",
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8410:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8402:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8402:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8402:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8388:65:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "8388:65:3"
                },
                {
                  "expression": {
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1825,
                      "name": "AddressMatic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1753,
                      "src": "8463:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307830643530304231643845386546333145323143393964314462394136343434643341446631323730",
                          "id": 1828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8486:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8478:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8478:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8478:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8463:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1831,
                  "nodeType": "ExpressionStatement",
                  "src": "8463:66:3"
                },
                {
                  "expression": {
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1832,
                      "name": "AddressLP3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1755,
                      "src": "8539:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307835363233323246384537313331443062423966343837414535363639333564336265393634303642",
                          "id": 1835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8560:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x562322F8E7131D0bB9f487AE566935d3be96406B"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8552:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8552:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8552:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8539:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "8539:64:3"
                },
                {
                  "expression": {
                    "id": 1844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1839,
                      "name": "AddressStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1757,
                      "src": "8613:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837643238666135373661346530383932324230316538393743453466353531374144333531353738",
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8636:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7d28fa576a4e08922B01e897CE4f5517AD351578"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8628:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1840,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8628:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8628:51:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8613:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1845,
                  "nodeType": "ExpressionStatement",
                  "src": "8613:66:3"
                },
                {
                  "expression": {
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1846,
                      "name": "Forge_Staking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1766,
                      "src": "8689:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForgeStaking_$1681",
                        "typeString": "contract ForgeStaking"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837643238666135373661346530383932324230316538393743453466353531374144333531353738",
                          "id": 1848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8718:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7d28fa576a4e08922B01e897CE4f5517AD351578"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1847,
                        "name": "ForgeStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "8705:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ForgeStaking_$1681_$",
                          "typeString": "type(contract ForgeStaking)"
                        }
                      },
                      "id": 1849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8705:56:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ForgeStaking_$1681",
                        "typeString": "contract ForgeStaking"
                      }
                    },
                    "src": "8689:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ForgeStaking_$1681",
                      "typeString": "contract ForgeStaking"
                    }
                  },
                  "id": 1851,
                  "nodeType": "ExpressionStatement",
                  "src": "8689:72:3"
                }
              ]
            },
            "id": 1853,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7975:2:3"
            },
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7979:0:3"
            },
            "scope": 2637,
            "src": "7964:813:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1880,
              "nodeType": "Block",
              "src": "8829:153:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1863,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8878:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1867,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8898:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              ],
                              "id": 1866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8890:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1865,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8890:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8890:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1873,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8941:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8941:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1870,
                                    "name": "AddressForgeToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1695,
                                    "src": "8912:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1869,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1448,
                                  "src": "8905:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8905:25:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1448",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1396,
                              "src": "8905:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8905:47:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1860,
                                "name": "AddressForgeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1695,
                                "src": "8846:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1859,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "8839:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8839:25:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1438,
                          "src": "8839:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8839:114:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657246726f6d32206661696c65642e",
                        "id": 1877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8955:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        },
                        "value": "transferFrom2 failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        }
                      ],
                      "id": 1858,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8831:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8831:148:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "8831:148:3"
                }
              ]
            },
            "functionSelector": "b6edd06f",
            "id": 1881,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "OneTeste0",
            "nameLocation": "8789:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "8807:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1881,
                  "src": "8799:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8799:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8798:22:3"
            },
            "returnParameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8829:0:3"
            },
            "scope": 2637,
            "src": "8780:202:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1958,
              "nodeType": "Block",
              "src": "9035:444:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1891,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9084:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1895,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9104:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              ],
                              "id": 1894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9096:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1893,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9096:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9096:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3130303030303030303030303030303030",
                            "id": 1897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9111:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            },
                            "value": "10000000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1888,
                                "name": "AddressForgeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1695,
                                "src": "9052:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1887,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "9045:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9045:25:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1438,
                          "src": "9045:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9045:84:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657246726f6d32206661696c65642e",
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9131:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        },
                        "value": "transferFrom2 failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        }
                      ],
                      "id": 1886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9037:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9037:118:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1901,
                  "nodeType": "ExpressionStatement",
                  "src": "9037:118:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1909,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "9212:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 1908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9204:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1907,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9204:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9204:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 1915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 1911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9224:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9230:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 1913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9236:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "9230:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "9224:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1904,
                                "name": "AddressForgeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1695,
                                "src": "9177:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1903,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "9170:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9170:25:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1426,
                          "src": "9170:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9170:69:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f7665206661696c65642e",
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9241:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        },
                        "value": "approve failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        }
                      ],
                      "id": 1902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9162:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9162:97:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "9162:97:3"
                },
                {
                  "assignments": [
                    1924
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1924,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "9278:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1958,
                      "src": "9261:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1922,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9261:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1923,
                        "nodeType": "ArrayTypeName",
                        "src": "9261:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1930,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9299:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 1927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9285:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9289:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1926,
                        "nodeType": "ArrayTypeName",
                        "src": "9289:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9285:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9261:40:3"
                },
                {
                  "expression": {
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1931,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "9303:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1933,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9308:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9303:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1934,
                      "name": "AddressForgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "9313:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9303:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1936,
                  "nodeType": "ExpressionStatement",
                  "src": "9303:27:3"
                },
                {
                  "expression": {
                    "id": 1941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1937,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "9332:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1939,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 1938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9337:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9332:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1940,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1693,
                      "src": "9342:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9332:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1942,
                  "nodeType": "ExpressionStatement",
                  "src": "9332:25:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030303030303030303030303030",
                        "id": 1950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9415:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000_by_1",
                          "typeString": "int_const 10000000000000000"
                        },
                        "value": "10000000000000000"
                      },
                      {
                        "hexValue": "31",
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9434:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 1952,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "9437:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 1953,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9443:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9443:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939",
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9455:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        },
                        "value": "99999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000_by_1",
                          "typeString": "int_const 10000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1946,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "9378:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 1945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9370:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1944,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9370:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9370:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1943,
                          "name": "SwapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1548,
                          "src": "9359:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapRouter_$1548_$",
                            "typeString": "type(contract SwapRouter)"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9359:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapRouter_$1548",
                          "typeString": "contract SwapRouter"
                        }
                      },
                      "id": 1949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1532,
                      "src": "9359:55:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9359:117:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 1957,
                  "nodeType": "ExpressionStatement",
                  "src": "9359:117:3"
                }
              ]
            },
            "functionSelector": "c78e9148",
            "id": 1959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "OneTeste32",
            "nameLocation": "8994:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "9013:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1959,
                  "src": "9005:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9005:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9004:22:3"
            },
            "returnParameters": {
              "id": 1885,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9035:0:3"
            },
            "scope": 2637,
            "src": "8985:494:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2035,
              "nodeType": "Block",
              "src": "9539:448:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1969,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9586:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9586:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1973,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9606:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              ],
                              "id": 1972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9598:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1971,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9598:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9598:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3130303030",
                            "id": 1975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9613:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1966,
                                "name": "AddressZeroXBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1693,
                                "src": "9556:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1965,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "9549:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9549:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1438,
                          "src": "9549:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9549:70:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657246726f6d32206661696c65642e",
                        "id": 1977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9621:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        },
                        "value": "transferFrom2 failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        }
                      ],
                      "id": 1964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9541:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9541:104:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1979,
                  "nodeType": "ExpressionStatement",
                  "src": "9541:104:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1987,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "9700:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 1986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9692:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1985,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9692:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9692:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 1993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 1989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9712:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9718:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 1991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9724:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "9718:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "9712:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1982,
                                "name": "AddressZeroXBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1693,
                                "src": "9667:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1981,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "9660:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9660:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1426,
                          "src": "9660:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9660:67:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f7665206661696c65642e",
                        "id": 1995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9729:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        },
                        "value": "approve failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        }
                      ],
                      "id": 1980,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9652:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9652:95:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1997,
                  "nodeType": "ExpressionStatement",
                  "src": "9652:95:3"
                },
                {
                  "assignments": [
                    2002
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2002,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "9766:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2035,
                      "src": "9749:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2000,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9749:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2001,
                        "nodeType": "ArrayTypeName",
                        "src": "9749:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2008,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9787:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9773:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2003,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9777:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2004,
                        "nodeType": "ArrayTypeName",
                        "src": "9777:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9773:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9749:40:3"
                },
                {
                  "expression": {
                    "id": 2013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2009,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "9791:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2011,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9796:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9791:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2012,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1693,
                      "src": "9801:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9791:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2014,
                  "nodeType": "ExpressionStatement",
                  "src": "9791:25:3"
                },
                {
                  "expression": {
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2015,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "9818:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2017,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9823:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9818:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2018,
                      "name": "AddressForgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "9828:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9818:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2020,
                  "nodeType": "ExpressionStatement",
                  "src": "9818:27:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130303030",
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9903:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "31",
                        "id": 2029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9910:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 2030,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "9913:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "307862623361334434413636354162344539443535393430373731363343303034346431323930363939",
                        "id": 2031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9919:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xbb3a3D4A665Ab4E9D5594077163C0044d1290699"
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939",
                        "id": 2032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9963:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        },
                        "value": "99999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2024,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "9866:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9858:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2022,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9858:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9858:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2021,
                          "name": "SwapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1548,
                          "src": "9847:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapRouter_$1548_$",
                            "typeString": "type(contract SwapRouter)"
                          }
                        },
                        "id": 2026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9847:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapRouter_$1548",
                          "typeString": "contract SwapRouter"
                        }
                      },
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1532,
                      "src": "9847:55:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9847:137:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "9847:137:3"
                }
              ]
            },
            "functionSelector": "b71cf78a",
            "id": 2036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "OneTeste44233",
            "nameLocation": "9495:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "9517:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "9509:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9509:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9508:22:3"
            },
            "returnParameters": {
              "id": 1963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9539:0:3"
            },
            "scope": 2637,
            "src": "9486:501:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2075,
              "nodeType": "Block",
              "src": "10040:223:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2046,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10087:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10087:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 2050,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10107:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                  "typeString": "contract ForgeZap"
                                }
                              ],
                              "id": 2049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10099:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2048,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10099:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10099:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "3130303030303030303030303030303030",
                            "id": 2052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10114:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            },
                            "value": "10000000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_10000000000000000_by_1",
                              "typeString": "int_const 10000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2043,
                                "name": "AddressZeroXBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1693,
                                "src": "10057:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2042,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "10050:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10050:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1438,
                          "src": "10050:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10050:82:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e7366657246726f6d32206661696c65642e",
                        "id": 2054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10134:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        },
                        "value": "transferFrom2 failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9c7765e03bd6d235b4e0fc7f096fc5e518abac8ba30ca03e7e4c9b2bbd9c42a",
                          "typeString": "literal_string \"transferFrom2 failed.\""
                        }
                      ],
                      "id": 2041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10042:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10042:116:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2056,
                  "nodeType": "ExpressionStatement",
                  "src": "10042:116:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2064,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "10213:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 2063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10205:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2062,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10205:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10205:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            },
                            "id": 2070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 2066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10225:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 2069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 2067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10231:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 2068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10237:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "10231:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "10225:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_100000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2059,
                                "name": "AddressZeroXBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1693,
                                "src": "10180:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2058,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "10173:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10173:23:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1426,
                          "src": "10173:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10173:67:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f7665206661696c65642e",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10242:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        },
                        "value": "approve failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        }
                      ],
                      "id": 2057,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10165:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10165:95:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "10165:95:3"
                }
              ]
            },
            "functionSelector": "afd70eb5",
            "id": 2076,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "OneTeste233",
            "nameLocation": "9998:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "10018:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2076,
                  "src": "10010:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10010:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10009:22:3"
            },
            "returnParameters": {
              "id": 2040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10040:0:3"
            },
            "scope": 2637,
            "src": "9989:274:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2118,
              "nodeType": "Block",
              "src": "10316:243:3",
              "statements": [
                {
                  "assignments": [
                    2085
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2085,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "10336:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2118,
                      "src": "10319:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2083,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10319:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2084,
                        "nodeType": "ArrayTypeName",
                        "src": "10319:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2091,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10357:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10343:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2086,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10347:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2087,
                        "nodeType": "ArrayTypeName",
                        "src": "10347:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10343:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10319:40:3"
                },
                {
                  "expression": {
                    "id": 2096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2092,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "10361:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2094,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10366:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10361:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2095,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1693,
                      "src": "10371:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10361:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2097,
                  "nodeType": "ExpressionStatement",
                  "src": "10361:25:3"
                },
                {
                  "expression": {
                    "id": 2102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2098,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "10388:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2100,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10393:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10388:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2101,
                      "name": "AddressForgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "10398:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10388:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2103,
                  "nodeType": "ExpressionStatement",
                  "src": "10388:27:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030",
                        "id": 2111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10473:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      {
                        "hexValue": "31",
                        "id": 2112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10482:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 2113,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "10485:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "307862623361334434413636354162344539443535393430373731363343303034346431323930363939",
                        "id": 2114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10491:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xbb3a3D4A665Ab4E9D5594077163C0044d1290699"
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939",
                        "id": 2115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10535:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        },
                        "value": "99999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2107,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "10436:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 2106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10428:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2105,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10428:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10428:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2104,
                          "name": "SwapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1548,
                          "src": "10417:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapRouter_$1548_$",
                            "typeString": "type(contract SwapRouter)"
                          }
                        },
                        "id": 2109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10417:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapRouter_$1548",
                          "typeString": "contract SwapRouter"
                        }
                      },
                      "id": 2110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1532,
                      "src": "10417:55:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10417:139:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2117,
                  "nodeType": "ExpressionStatement",
                  "src": "10417:139:3"
                }
              ]
            },
            "functionSelector": "6297597b",
            "id": 2119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "OneTeste4233",
            "nameLocation": "10273:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "10294:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2119,
                  "src": "10286:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10286:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10285:22:3"
            },
            "returnParameters": {
              "id": 2080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10316:0:3"
            },
            "scope": 2637,
            "src": "10264:295:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2195,
              "nodeType": "Block",
              "src": "10623:744:3",
              "statements": [
                {
                  "assignments": [
                    2125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2125,
                      "mutability": "mutable",
                      "name": "_reserve0",
                      "nameLocation": "10647:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "10639:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 2124,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "10639:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2126,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10639:17:3"
                },
                {
                  "assignments": [
                    2128
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2128,
                      "mutability": "mutable",
                      "name": "_reserve1",
                      "nameLocation": "10707:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "10699:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 2127,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "10699:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2129,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10699:17:3"
                },
                {
                  "assignments": [
                    2131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2131,
                      "mutability": "mutable",
                      "name": "_blockTimestampLast",
                      "nameLocation": "10746:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "10739:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2130,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10739:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2132,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10739:26:3"
                },
                {
                  "expression": {
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2133,
                          "name": "_reserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2125,
                          "src": "10780:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        {
                          "id": 2134,
                          "name": "_reserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "10791:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        {
                          "id": 2135,
                          "name": "_blockTimestampLast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2131,
                          "src": "10802:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 2136,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "10779:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2137,
                          "name": "LP3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "10825:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                            "typeString": "contract LiquidityPool"
                          }
                        },
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1558,
                        "src": "10825:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                        }
                      },
                      "id": 2139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10825:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "src": "10779:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2141,
                  "nodeType": "ExpressionStatement",
                  "src": "10779:63:3"
                },
                {
                  "assignments": [
                    2143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2143,
                      "mutability": "mutable",
                      "name": "maxAuc",
                      "nameLocation": "10879:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "10871:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2142,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10871:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2149,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                      "typeString": "int_const 8192000000000000000000"
                    },
                    "id": 2148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "38313932",
                      "id": 2144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10888:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8192_by_1",
                        "typeString": "int_const 8192"
                      },
                      "value": "8192"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 2147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 2145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10895:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 2146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10901:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "10895:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "10888:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                      "typeString": "int_const 8192000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10871:32:3"
                },
                {
                  "assignments": [
                    2151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2151,
                      "mutability": "mutable",
                      "name": "Total0xBTCToSend",
                      "nameLocation": "10925:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "10917:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10917:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2161,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2152,
                            "name": "maxAuc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "10945:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2153,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2125,
                            "src": "10954:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "10945:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2155,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10944:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2156,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2128,
                            "src": "10969:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2157,
                            "name": "maxAuc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2143,
                            "src": "10981:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10969:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2159,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10967:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10944:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10917:71:3"
                },
                {
                  "assignments": [
                    2163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2163,
                      "mutability": "mutable",
                      "name": "Total0xBTCToRec",
                      "nameLocation": "11010:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "11002:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11002:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2169,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2164,
                        "name": "Total0xBTCToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2151,
                        "src": "11028:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3935",
                        "id": 2165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11047:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_95_by_1",
                          "typeString": "int_const 95"
                        },
                        "value": "95"
                      },
                      "src": "11028:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11052:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "11028:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11002:53:3"
                },
                {
                  "assignments": [
                    2171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2171,
                      "mutability": "mutable",
                      "name": "expectedProfit",
                      "nameLocation": "11156:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "11148:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2170,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11148:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2183,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2172,
                      "name": "Total0xBTCToRec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2163,
                      "src": "11173:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2175,
                              "name": "Forge_Auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "11221:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                "typeString": "contract ForgeAuctions"
                              }
                            },
                            "id": 2176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentEra",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1597,
                            "src": "11221:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11221:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2178,
                              "name": "Forge_Auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "11249:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                "typeString": "contract ForgeAuctions"
                              }
                            },
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentDay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1595,
                            "src": "11249:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11249:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2173,
                          "name": "Forge_Auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "11191:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                            "typeString": "contract ForgeAuctions"
                          }
                        },
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mapEraDay_Units",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1593,
                        "src": "11191:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 2181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11191:85:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11173:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11148:128:3"
                },
                {
                  "assignments": [
                    2185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2185,
                      "mutability": "mutable",
                      "name": "sixsevenths",
                      "nameLocation": "11299:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2195,
                      "src": "11291:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2184,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11291:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2192,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2186,
                            "name": "expectedProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2171,
                            "src": "11314:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 2187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11331:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "11314:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2189,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11313:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "37",
                      "id": 2190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11336:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "src": "11313:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11291:46:3"
                },
                {
                  "expression": {
                    "id": 2193,
                    "name": "sixsevenths",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2185,
                    "src": "11352:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2123,
                  "id": 2194,
                  "nodeType": "Return",
                  "src": "11345:18:3"
                }
              ]
            },
            "functionSelector": "e55e1972",
            "id": 2196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "viewMinFee",
            "nameLocation": "10570:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10580:2:3"
            },
            "returnParameters": {
              "id": 2123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2122,
                  "mutability": "mutable",
                  "name": "amtToInput",
                  "nameLocation": "10611:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2196,
                  "src": "10603:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10602:20:3"
            },
            "scope": 2637,
            "src": "10561:806:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "11411:198:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2207,
                            "name": "Forge_Auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "11457:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                              "typeString": "contract ForgeAuctions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                              "typeString": "contract ForgeAuctions"
                            }
                          ],
                          "id": 2206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11449:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11449:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11449:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939393939",
                        "id": 2209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11473:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        },
                        "value": "99999999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2202,
                            "name": "AddressZeroXBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1693,
                            "src": "11424:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2201,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "11417:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11417:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1448",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1426,
                      "src": "11417:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11417:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2211,
                  "nodeType": "ExpressionStatement",
                  "src": "11417:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2218,
                            "name": "Quickswap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1760,
                            "src": "11550:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$1548",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$1548",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 2217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11542:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11542:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11542:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "393939393939393939393939393939393939393939393939393939393939393939393939393939393939",
                        "id": 2220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11562:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(34 digits omitted)...9999"
                        },
                        "value": "999999999999999999999999999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(34 digits omitted)...9999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2213,
                            "name": "AddressForgeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1695,
                            "src": "11515:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2212,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "11508:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11508:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1448",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1426,
                      "src": "11508:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11508:97:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2222,
                  "nodeType": "ExpressionStatement",
                  "src": "11508:97:3"
                }
              ]
            },
            "functionSelector": "ed8ba5ed",
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2198,
                  "name": "OnlyModerators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1228,
                  "src": "11396:14:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "11396:14:3"
              }
            ],
            "name": "approes",
            "nameLocation": "11378:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2197,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11386:2:3"
            },
            "returnParameters": {
              "id": 2200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11411:0:3"
            },
            "scope": 2637,
            "src": "11369:240:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2434,
              "nodeType": "Block",
              "src": "11717:1823:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2236,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11744:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11744:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2238,
                                "name": "Forge_Auction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1763,
                                "src": "11762:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                  "typeString": "contract ForgeAuctions"
                                }
                              },
                              "id": 2239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nextDayTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1603,
                              "src": "11762:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11762:27:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2241,
                            "name": "blockz",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2226,
                            "src": "11792:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11762:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11744:54:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206e65617220656e64206f662061756374696f6e",
                        "id": 2244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11800:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02b49e0facd4ad530209b4731a712f0969660a96894ed201cd49ca1073d0fb4c",
                          "typeString": "literal_string \"Must be near end of auction\""
                        },
                        "value": "Must be near end of auction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02b49e0facd4ad530209b4731a712f0969660a96894ed201cd49ca1073d0fb4c",
                          "typeString": "literal_string \"Must be near end of auction\""
                        }
                      ],
                      "id": 2235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11736:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11736:94:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2246,
                  "nodeType": "ExpressionStatement",
                  "src": "11736:94:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 2247,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11843:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11843:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2249,
                          "name": "Forge_Auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "11861:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                            "typeString": "contract ForgeAuctions"
                          }
                        },
                        "id": 2250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nextDayTime",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1603,
                        "src": "11861:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 2251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11861:27:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11843:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2430,
                    "nodeType": "Block",
                    "src": "13492:13:3",
                    "statements": []
                  },
                  "id": 2431,
                  "nodeType": "IfStatement",
                  "src": "11840:1665:3",
                  "trueBody": {
                    "id": 2429,
                    "nodeType": "Block",
                    "src": "11889:1599:3",
                    "statements": [
                      {
                        "assignments": [
                          2254
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2254,
                            "mutability": "mutable",
                            "name": "_reserve0",
                            "nameLocation": "11912:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "11904:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2253,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "11904:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2255,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11904:17:3"
                      },
                      {
                        "assignments": [
                          2257
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2257,
                            "mutability": "mutable",
                            "name": "_reserve1",
                            "nameLocation": "11972:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "11964:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 2256,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "11964:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2258,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11964:17:3"
                      },
                      {
                        "assignments": [
                          2260
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2260,
                            "mutability": "mutable",
                            "name": "_blockTimestampLast",
                            "nameLocation": "12011:19:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12004:26:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 2259,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "12004:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2261,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12004:26:3"
                      },
                      {
                        "expression": {
                          "id": 2269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 2262,
                                "name": "_reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2254,
                                "src": "12045:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              {
                                "id": 2263,
                                "name": "_reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2257,
                                "src": "12056:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              {
                                "id": 2264,
                                "name": "_blockTimestampLast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2260,
                                "src": "12067:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "id": 2265,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "12044:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "tuple(uint112,uint112,uint32)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2266,
                                "name": "LP3",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1769,
                                "src": "12090:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                                  "typeString": "contract LiquidityPool"
                                }
                              },
                              "id": 2267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getReserves",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1558,
                              "src": "12090:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                "typeString": "function () view external returns (uint112,uint112,uint32)"
                              }
                            },
                            "id": 2268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12090:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "tuple(uint112,uint112,uint32)"
                            }
                          },
                          "src": "12044:63:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2270,
                        "nodeType": "ExpressionStatement",
                        "src": "12044:63:3"
                      },
                      {
                        "assignments": [
                          2272
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2272,
                            "mutability": "mutable",
                            "name": "maxAuc",
                            "nameLocation": "12144:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12136:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2271,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12136:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2278,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                            "typeString": "int_const 8192000000000000000000"
                          },
                          "id": 2277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "38313932",
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12153:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8192_by_1",
                              "typeString": "int_const 8192"
                            },
                            "value": "8192"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 2276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12160:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 2275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12166:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "12160:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "12153:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                            "typeString": "int_const 8192000000000000000000"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12136:32:3"
                      },
                      {
                        "assignments": [
                          2280
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2280,
                            "mutability": "mutable",
                            "name": "Total0xBTCToSend",
                            "nameLocation": "12190:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12182:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2279,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12182:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2290,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2281,
                                  "name": "maxAuc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2272,
                                  "src": "12210:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2282,
                                  "name": "_reserve0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2254,
                                  "src": "12219:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "12210:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2284,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12209:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2285,
                                  "name": "_reserve1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2257,
                                  "src": "12234:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2286,
                                  "name": "maxAuc",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2272,
                                  "src": "12246:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12234:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2288,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12232:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12209:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12182:71:3"
                      },
                      {
                        "assignments": [
                          2292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2292,
                            "mutability": "mutable",
                            "name": "Total0xBTCToRec",
                            "nameLocation": "12275:15:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12267:23:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2291,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12267:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2298,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2293,
                              "name": "Total0xBTCToSend",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2280,
                              "src": "12293:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3935",
                              "id": 2294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12312:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95_by_1",
                                "typeString": "int_const 95"
                              },
                              "value": "95"
                            },
                            "src": "12293:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 2296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12317:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "12293:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12267:53:3"
                      },
                      {
                        "assignments": [
                          2300
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2300,
                            "mutability": "mutable",
                            "name": "expectedProfit",
                            "nameLocation": "12421:14:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12413:22:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2299,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12413:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2312,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2301,
                            "name": "Total0xBTCToRec",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2292,
                            "src": "12438:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2304,
                                    "name": "Forge_Auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1763,
                                    "src": "12486:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                      "typeString": "contract ForgeAuctions"
                                    }
                                  },
                                  "id": 2305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currentEra",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1597,
                                  "src": "12486:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 2306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12486:26:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2307,
                                    "name": "Forge_Auction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1763,
                                    "src": "12514:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                      "typeString": "contract ForgeAuctions"
                                    }
                                  },
                                  "id": 2308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currentDay",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1595,
                                  "src": "12514:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 2309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12514:26:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2302,
                                "name": "Forge_Auction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1763,
                                "src": "12456:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                  "typeString": "contract ForgeAuctions"
                                }
                              },
                              "id": 2303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mapEraDay_Units",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1593,
                              "src": "12456:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 2310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12456:85:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12438:103:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12413:128:3"
                      },
                      {
                        "assignments": [
                          2314
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2314,
                            "mutability": "mutable",
                            "name": "sixsevenths",
                            "nameLocation": "12563:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12555:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2313,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12555:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2321,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2315,
                                  "name": "expectedProfit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2300,
                                  "src": "12578:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 2316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12595:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "12578:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2318,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12577:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 2319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12600:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          },
                          "src": "12577:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12555:46:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2326,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12653:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12653:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2330,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12673:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                ],
                                "id": 2329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12665:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2328,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12665:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12665:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2332,
                              "name": "sixsevenths",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2314,
                              "src": "12680:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2323,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1693,
                                  "src": "12623:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2322,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1448,
                                "src": "12616:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12616:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1448",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1438,
                            "src": "12616:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12616:76:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2334,
                        "nodeType": "ExpressionStatement",
                        "src": "12616:76:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2341,
                                  "name": "Forge_Auction",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1763,
                                  "src": "12746:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                    "typeString": "contract ForgeAuctions"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                    "typeString": "contract ForgeAuctions"
                                  }
                                ],
                                "id": 2340,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12738:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2339,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12738:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2342,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12738:22:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "3939393939393939393939393939393939393939393939",
                              "id": 2343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12762:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                                "typeString": "int_const 99999999999999999999999"
                              },
                              "value": "99999999999999999999999"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                                "typeString": "int_const 99999999999999999999999"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2336,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1693,
                                  "src": "12713:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2335,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1448,
                                "src": "12706:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12706:23:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1448",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1426,
                            "src": "12706:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12706:80:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2345,
                        "nodeType": "ExpressionStatement",
                        "src": "12706:80:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2351,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12841:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                ],
                                "id": 2350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12833:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2349,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12833:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12833:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2353,
                              "name": "sixsevenths",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2314,
                              "src": "12848:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2346,
                              "name": "Forge_Auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "12800:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                "typeString": "contract ForgeAuctions"
                              }
                            },
                            "id": 2348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn0xBTCForMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1665,
                            "src": "12800:32:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) payable external"
                            }
                          },
                          "id": 2354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12800:60:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2355,
                        "nodeType": "ExpressionStatement",
                        "src": "12800:60:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2361,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12907:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                ],
                                "id": 2360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12899:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2359,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12899:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12899:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2356,
                              "name": "Forge_Auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "12874:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                "typeString": "contract ForgeAuctions"
                              }
                            },
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "WithdrawEz",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1615,
                            "src": "12874:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 2363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12874:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2364,
                        "nodeType": "ExpressionStatement",
                        "src": "12874:39:3"
                      },
                      {
                        "assignments": [
                          2366
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2366,
                            "mutability": "mutable",
                            "name": "sentF",
                            "nameLocation": "12935:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "12927:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2365,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12927:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2376,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2373,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12987:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ForgeZap_$2637",
                                    "typeString": "contract ForgeZap"
                                  }
                                ],
                                "id": 2372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12979:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2371,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12979:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12979:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2368,
                                  "name": "AddressForgeToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1695,
                                  "src": "12950:17:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2367,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1448,
                                "src": "12943:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12943:25:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1448",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1396,
                            "src": "12943:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12943:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12927:66:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2384,
                                      "name": "Quickswap",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1760,
                                      "src": "13078:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 2383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13070:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2382,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13070:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13070:18:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "hexValue": "39393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939",
                                  "id": 2386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13090:49:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_9999999999999999999999999999999999999999999999999_by_1",
                                    "typeString": "int_const 9999...(41 digits omitted)...9999"
                                  },
                                  "value": "9999999999999999999999999999999999999999999999999"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_9999999999999999999999999999999999999999999999999_by_1",
                                    "typeString": "int_const 9999...(41 digits omitted)...9999"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2379,
                                      "name": "AddressForgeToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1695,
                                      "src": "13043:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 2378,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1448,
                                    "src": "13036:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 2380,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13036:25:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1448",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 2381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1426,
                                "src": "13036:33:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 2387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13036:104:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "617070726f7665206661696c65642e",
                              "id": 2388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13142:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                                "typeString": "literal_string \"approve failed.\""
                              },
                              "value": "approve failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                                "typeString": "literal_string \"approve failed.\""
                              }
                            ],
                            "id": 2377,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13028:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13028:132:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2390,
                        "nodeType": "ExpressionStatement",
                        "src": "13028:132:3"
                      },
                      {
                        "assignments": [
                          2395
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2395,
                            "mutability": "mutable",
                            "name": "path",
                            "nameLocation": "13195:4:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 2429,
                            "src": "13178:21:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2393,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13178:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2394,
                              "nodeType": "ArrayTypeName",
                              "src": "13178:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2401,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 2399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13216:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 2398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "13202:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (address[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 2396,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13206:7:3",
                                "stateMutability": "nonpayable",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2397,
                              "nodeType": "ArrayTypeName",
                              "src": "13206:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            }
                          },
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13202:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13178:40:3"
                      },
                      {
                        "expression": {
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2402,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "13236:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2404,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 2403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13241:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13236:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2405,
                            "name": "AddressForgeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1695,
                            "src": "13246:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13236:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2407,
                        "nodeType": "ExpressionStatement",
                        "src": "13236:27:3"
                      },
                      {
                        "expression": {
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2408,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "13281:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 2410,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13286:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13281:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2411,
                            "name": "AddressZeroXBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1693,
                            "src": "13291:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13281:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2413,
                        "nodeType": "ExpressionStatement",
                        "src": "13281:25:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2421,
                              "name": "sentF",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2366,
                              "src": "13380:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2422,
                              "name": "min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "13387:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2423,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "13392:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 2424,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13398:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13398:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "3939393939393939393939393939393939393939",
                              "id": 2426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13410:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_99999999999999999999_by_1",
                                "typeString": "int_const 99999999999999999999"
                              },
                              "value": "99999999999999999999"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_99999999999999999999_by_1",
                                "typeString": "int_const 99999999999999999999"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 2417,
                                      "name": "Quickswap",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1760,
                                      "src": "13343:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 2416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13335:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 2415,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13335:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 2418,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13335:18:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2414,
                                "name": "SwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1548,
                                "src": "13324:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_SwapRouter_$1548_$",
                                  "typeString": "type(contract SwapRouter)"
                                }
                              },
                              "id": 2419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13324:30:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                "typeString": "contract SwapRouter"
                              }
                            },
                            "id": 2420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "swapExactTokensForTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1532,
                            "src": "13324:55:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                            }
                          },
                          "id": 2427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13324:107:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 2428,
                        "nodeType": "ExpressionStatement",
                        "src": "13324:107:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13521:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2234,
                  "id": 2433,
                  "nodeType": "Return",
                  "src": "13514:11:3"
                }
              ]
            },
            "functionSelector": "61d5be29",
            "id": 2435,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2231,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2230,
                  "name": "OnlyModerators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1228,
                  "src": "11678:14:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "11678:14:3"
              }
            ],
            "name": "ONEburn0xBTCForMember",
            "nameLocation": "11620:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2226,
                  "mutability": "mutable",
                  "name": "blockz",
                  "nameLocation": "11650:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "11642:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11642:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2228,
                  "mutability": "mutable",
                  "name": "min",
                  "nameLocation": "11666:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "11658:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2227,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11658:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11641:29:3"
            },
            "returnParameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2233,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11707:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2435,
                  "src": "11702:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11702:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11701:14:3"
            },
            "scope": 2637,
            "src": "11611:1929:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2635,
              "nodeType": "Block",
              "src": "13654:1801:3",
              "statements": [
                {
                  "assignments": [
                    2445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2445,
                      "mutability": "mutable",
                      "name": "_reserve0",
                      "nameLocation": "13685:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "13677:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 2444,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "13677:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2446,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13677:17:3"
                },
                {
                  "assignments": [
                    2448
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2448,
                      "mutability": "mutable",
                      "name": "_reserve1",
                      "nameLocation": "13745:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "13737:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 2447,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "13737:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2449,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13737:17:3"
                },
                {
                  "assignments": [
                    2451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2451,
                      "mutability": "mutable",
                      "name": "_blockTimestampLast",
                      "nameLocation": "13784:19:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "13777:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2450,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13777:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2452,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13777:26:3"
                },
                {
                  "expression": {
                    "id": 2460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 2453,
                          "name": "_reserve0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2445,
                          "src": "13818:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        {
                          "id": 2454,
                          "name": "_reserve1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2448,
                          "src": "13829:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        {
                          "id": 2455,
                          "name": "_blockTimestampLast",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2451,
                          "src": "13840:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "id": 2456,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13817:43:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2457,
                          "name": "LP3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1769,
                          "src": "13863:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityPool_$1587",
                            "typeString": "contract LiquidityPool"
                          }
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1558,
                        "src": "13863:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                          "typeString": "function () view external returns (uint112,uint112,uint32)"
                        }
                      },
                      "id": 2459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13863:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "tuple(uint112,uint112,uint32)"
                      }
                    },
                    "src": "13817:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2461,
                  "nodeType": "ExpressionStatement",
                  "src": "13817:63:3"
                },
                {
                  "assignments": [
                    2463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2463,
                      "mutability": "mutable",
                      "name": "maxAuc",
                      "nameLocation": "13917:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "13909:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13909:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2469,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                      "typeString": "int_const 8192000000000000000000"
                    },
                    "id": 2468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "38313932",
                      "id": 2464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13926:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8192_by_1",
                        "typeString": "int_const 8192"
                      },
                      "value": "8192"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 2467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 2465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13933:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 2466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13939:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "13933:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "13926:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8192000000000000000000_by_1",
                      "typeString": "int_const 8192000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13909:32:3"
                },
                {
                  "assignments": [
                    2471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2471,
                      "mutability": "mutable",
                      "name": "Total0xBTCToSend",
                      "nameLocation": "13963:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "13955:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13955:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2481,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2472,
                            "name": "maxAuc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2463,
                            "src": "13983:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2473,
                            "name": "_reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2445,
                            "src": "13992:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "13983:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2475,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13982:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2476,
                            "name": "_reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2448,
                            "src": "14007:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2477,
                            "name": "maxAuc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2463,
                            "src": "14019:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14007:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2479,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14005:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13982:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13955:71:3"
                },
                {
                  "assignments": [
                    2483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2483,
                      "mutability": "mutable",
                      "name": "Total0xBTCToRec",
                      "nameLocation": "14048:15:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "14040:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2482,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14040:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2489,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2484,
                        "name": "Total0xBTCToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2471,
                        "src": "14066:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3935",
                        "id": 2485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14085:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_95_by_1",
                          "typeString": "int_const 95"
                        },
                        "value": "95"
                      },
                      "src": "14066:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14090:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "14066:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14040:53:3"
                },
                {
                  "assignments": [
                    2491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2491,
                      "mutability": "mutable",
                      "name": "expectedProfit",
                      "nameLocation": "14194:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "14186:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14186:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2503,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2492,
                      "name": "Total0xBTCToRec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2483,
                      "src": "14211:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2495,
                              "name": "Forge_Auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "14259:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                "typeString": "contract ForgeAuctions"
                              }
                            },
                            "id": 2496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentEra",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1597,
                            "src": "14259:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14259:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2498,
                              "name": "Forge_Auction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1763,
                              "src": "14287:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                                "typeString": "contract ForgeAuctions"
                              }
                            },
                            "id": 2499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "currentDay",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1595,
                            "src": "14287:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14287:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2493,
                          "name": "Forge_Auction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1763,
                          "src": "14229:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                            "typeString": "contract ForgeAuctions"
                          }
                        },
                        "id": 2494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mapEraDay_Units",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1593,
                        "src": "14229:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 2501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14229:85:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14211:103:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14186:128:3"
                },
                {
                  "assignments": [
                    2505
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2505,
                      "mutability": "mutable",
                      "name": "sixsevenths",
                      "nameLocation": "14336:11:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "14328:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2504,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14328:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2512,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2506,
                            "name": "expectedProfit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2491,
                            "src": "14351:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "36",
                            "id": 2507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14368:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          "src": "14351:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2509,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14350:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3730",
                      "id": 2510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14373:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_70_by_1",
                        "typeString": "int_const 70"
                      },
                      "value": "70"
                    },
                    "src": "14350:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14328:47:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2517,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14452:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14452:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2521,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14472:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          ],
                          "id": 2520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14464:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2519,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14464:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14464:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2523,
                        "name": "sixsevenths",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "14479:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2514,
                            "name": "AddressZeroXBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1693,
                            "src": "14422:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2513,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "14415:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14415:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1448",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1438,
                      "src": "14415:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14415:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "14415:76:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2532,
                            "name": "Forge_Auction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1763,
                            "src": "14545:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                              "typeString": "contract ForgeAuctions"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                              "typeString": "contract ForgeAuctions"
                            }
                          ],
                          "id": 2531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14537:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14537:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14537:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939393939",
                        "id": 2534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14561:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        },
                        "value": "99999999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2527,
                            "name": "AddressZeroXBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1693,
                            "src": "14512:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2526,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "14505:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14505:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1448",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1426,
                      "src": "14505:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14505:80:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2536,
                  "nodeType": "ExpressionStatement",
                  "src": "14505:80:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2542,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14640:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          ],
                          "id": 2541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14632:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2540,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14632:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14632:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2544,
                        "name": "sixsevenths",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2505,
                        "src": "14647:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2537,
                        "name": "Forge_Auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "14599:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                          "typeString": "contract ForgeAuctions"
                        }
                      },
                      "id": 2539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn0xBTCForMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1665,
                      "src": "14599:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 2545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14599:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2546,
                  "nodeType": "ExpressionStatement",
                  "src": "14599:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2552,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14706:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          ],
                          "id": 2551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14698:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14698:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14698:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2547,
                        "name": "Forge_Auction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "14673:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeAuctions_$1666",
                          "typeString": "contract ForgeAuctions"
                        }
                      },
                      "id": 2549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "WithdrawEz",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1615,
                      "src": "14673:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14673:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2555,
                  "nodeType": "ExpressionStatement",
                  "src": "14673:39:3"
                },
                {
                  "assignments": [
                    2557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2557,
                      "mutability": "mutable",
                      "name": "sentF",
                      "nameLocation": "14734:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "14726:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14726:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2567,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2564,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14786:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          ],
                          "id": 2563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14778:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2562,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14778:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14778:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2559,
                            "name": "AddressForgeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1695,
                            "src": "14749:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2558,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "14742:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14742:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1448",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1396,
                      "src": "14742:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14742:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14726:66:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2575,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "14877:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 2574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14869:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2573,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14869:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14869:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "39393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939",
                            "id": 2577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14889:49:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9999999999999999999999999999999999999999999999999_by_1",
                              "typeString": "int_const 9999...(41 digits omitted)...9999"
                            },
                            "value": "9999999999999999999999999999999999999999999999999"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_rational_9999999999999999999999999999999999999999999999999_by_1",
                              "typeString": "int_const 9999...(41 digits omitted)...9999"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2570,
                                "name": "AddressForgeToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1695,
                                "src": "14842:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2569,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1448,
                              "src": "14835:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14835:25:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1448",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approve",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1426,
                          "src": "14835:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14835:104:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617070726f7665206661696c65642e",
                        "id": 2579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14941:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        },
                        "value": "approve failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c99ef8db945c85b45182f784294c858758e144221c25446f7a62556f24dc58ba",
                          "typeString": "literal_string \"approve failed.\""
                        }
                      ],
                      "id": 2568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14827:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14827:132:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2581,
                  "nodeType": "ExpressionStatement",
                  "src": "14827:132:3"
                },
                {
                  "assignments": [
                    2586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2586,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "14994:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2635,
                      "src": "14977:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2584,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14977:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2585,
                        "nodeType": "ArrayTypeName",
                        "src": "14977:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2592,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15015:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15001:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2587,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15005:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2588,
                        "nodeType": "ArrayTypeName",
                        "src": "15005:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 2591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15001:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14977:40:3"
                },
                {
                  "expression": {
                    "id": 2597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2593,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "15035:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2595,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15040:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15035:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2596,
                      "name": "AddressForgeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1695,
                      "src": "15045:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15035:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2598,
                  "nodeType": "ExpressionStatement",
                  "src": "15035:27:3"
                },
                {
                  "expression": {
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2599,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "15080:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2601,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15085:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15080:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2602,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1693,
                      "src": "15090:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15080:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2604,
                  "nodeType": "ExpressionStatement",
                  "src": "15080:25:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2609,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15188:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15188:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2613,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "15208:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ForgeZap_$2637",
                              "typeString": "contract ForgeZap"
                            }
                          ],
                          "id": 2612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15200:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2611,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15200:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15200:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030",
                        "id": 2615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15215:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "value": "1000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2606,
                            "name": "AddressForgeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1695,
                            "src": "15156:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2605,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "15149:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1448_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15149:25:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1448",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1438,
                      "src": "15149:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15149:83:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2617,
                  "nodeType": "ExpressionStatement",
                  "src": "15149:83:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030303030",
                        "id": 2625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15314:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "value": "1000000000000000"
                      },
                      {
                        "id": 2626,
                        "name": "amtMin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "15333:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2627,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "15341:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2628,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15347:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15347:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939393939393939393939393939393939393939",
                        "id": 2630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15359:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        },
                        "value": "99999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2621,
                                "name": "Quickswap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1760,
                                "src": "15277:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapRouter_$1548",
                                  "typeString": "contract SwapRouter"
                                }
                              ],
                              "id": 2620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15269:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2619,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15269:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15269:18:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2618,
                          "name": "SwapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1548,
                          "src": "15258:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SwapRouter_$1548_$",
                            "typeString": "type(contract SwapRouter)"
                          }
                        },
                        "id": 2623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15258:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SwapRouter_$1548",
                          "typeString": "contract SwapRouter"
                        }
                      },
                      "id": 2624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1532,
                      "src": "15258:55:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 2631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15258:122:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 2632,
                  "nodeType": "ExpressionStatement",
                  "src": "15258:122:3"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15436:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2443,
                  "id": 2634,
                  "nodeType": "Return",
                  "src": "15429:11:3"
                }
              ]
            },
            "functionSelector": "97b7086b",
            "id": 2636,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2440,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2439,
                  "name": "OnlyModerators",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1228,
                  "src": "13615:14:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "13615:14:3"
              }
            ],
            "name": "ONEburn0xBTCForMemberNOBLOCK",
            "nameLocation": "13555:28:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2437,
                  "mutability": "mutable",
                  "name": "amtMin",
                  "nameLocation": "13592:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2636,
                  "src": "13584:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13584:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13583:16:3"
            },
            "returnParameters": {
              "id": 2443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2442,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "13644:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2636,
                  "src": "13639:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2441,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13639:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13638:14:3"
            },
            "scope": 2637,
            "src": "13546:1909:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2638,
        "src": "6375:9102:3",
        "usedErrors": []
      }
    ],
    "src": "63:15415:3"
  },
  "bytecode": "60806040526006805460ff19169055670de0b6b3a76400006007556305f5e100600855600060105534801561003357600080fd5b50600180546001600160a01b0319908116331790915560048054821673f44fb43066f7ecc91058e3a614fb8a15a27352761790556003805482167371b821aa52a49f32eed535fca6eb5aa13008597817905560208054821673bb1fa87a4738b22f7d2d5ec34ba349375b4d86f0179055601f8054821673a5e0829caced8ffdd4de3c43696c57f7d7a678ff17905560228054821673562322f8e7131d0bb9f487ae566935d3be96406b908117909155601b80548316732791bca1f2de4661ed88a30c99a7a9449aa84174179055601c80548316730d500b1d8e8ef31e21c99d1db9a6444d3adf1270179055601d805483169091179055601e80548216737d28fa576a4e08922b01e897ce4f5517ad3515789081179091556021805490921617905561253c806101636000396000f3fe6080604052600436106101c25760003560e01c8063966ff650116100f7578063c78e914811610095578063e55e197211610064578063e55e1972146104af578063ed8ba5ed146104c4578063f1261e92146104d9578063fee05d62146104f957600080fd5b8063c78e91481461044d578063d39614f41461046d578063df0244b114610483578063e3e0e3ee1461049957600080fd5b8063afd70eb5116100d1578063afd70eb5146103cd578063b6edd06f146103ed578063b71cf78a1461040d578063bd842a111461042d57600080fd5b8063966ff6501461038e57806397b7086b146103a4578063a8c817d1146103b757600080fd5b806361d5be29116101645780637303e8cd1161013e5780637303e8cd146103185780638560a2f41461032e5780638da5cb5b1461034e578063953fb4fb1461036e57600080fd5b806361d5be29146102b05780636297597b146102e0578063638099531461030257600080fd5b80633767e339116101a05780633767e3391461024e5780633ac1c86314610264578063510de0941461027a5780635c9302c91461029a57600080fd5b806306fdde03146101c757806308e7154a146101f2578063313ce5671461022a575b600080fd5b3480156101d357600080fd5b506101dc61050f565b6040516101e991906120af565b60405180910390f35b3480156101fe57600080fd5b50600f54610212906001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b34801561023657600080fd5b50610240600a5481565b6040519081526020016101e9565b34801561025a57600080fd5b5061024060055481565b34801561027057600080fd5b5061024060145481565b34801561028657600080fd5b50600354610212906001600160a01b031681565b3480156102a657600080fd5b5061024060135481565b3480156102bc57600080fd5b506102d06102cb366004612104565b61059d565b60405190151581526020016101e9565b3480156102ec57600080fd5b506103006102fb366004612126565b610dce565b005b34801561030e57600080fd5b5061024060155481565b34801561032457600080fd5b5061024060105481565b34801561033a57600080fd5b50600d54610212906001600160a01b031681565b34801561035a57600080fd5b50600154610212906001600160a01b031681565b34801561037a57600080fd5b50600e54610212906001600160a01b031681565b34801561039a57600080fd5b5061024060175481565b6102d06103b2366004612126565b610ef2565b3480156103c357600080fd5b5061024060195481565b3480156103d957600080fd5b506103006103e8366004612126565b611658565b3480156103f957600080fd5b50610300610408366004612126565b611793565b34801561041957600080fd5b50610300610428366004612126565b611888565b34801561043957600080fd5b50610212610448366004612126565b611a92565b34801561045957600080fd5b50610300610468366004612126565b611abc565b34801561047957600080fd5b5061024060115481565b34801561048f57600080fd5b5061024060185481565b3480156104a557600080fd5b5061024060125481565b3480156104bb57600080fd5b50610240611cb9565b3480156104d057600080fd5b50610300611f0e565b3480156104e557600080fd5b50600454610212906001600160a01b031681565b34801561050557600080fd5b5061024060165481565b6009805461051c9061213f565b80601f01602080910402602001604051908101604052809291908181526020018280546105489061213f565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b505050505081565b600080805b6002548110156105fb57336001600160a01b0316600282815481106105c9576105c9612174565b6000918252602090912001546001600160a01b031614156105e957600191505b806105f3816121a0565b9150506105a2565b506001546001600160a01b03163314806106125750805b6106375760405162461bcd60e51b815260040161062e906121bb565b60405180910390fd5b6020805460408051637f702eb160e11b8152905187936001600160a01b039093169263fee05d6292600480820193918290030181865afa15801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a391906121ff565b6106ad9190612218565b42116106fb5760405162461bcd60e51b815260206004820152601b60248201527f4d757374206265206e65617220656e64206f662061756374696f6e0000000000604482015260640161062e565b6020805460408051637f702eb160e11b815290516001600160a01b039092169263fee05d62926004808401938290030181865afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076491906121ff565b421115610dc4576000806000602260009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e7919061224b565b919450925090506901bc16d674ec80000000600061080e826001600160701b03861661229b565b6108216001600160701b038716846122b3565b61082b91906122d2565b90506000606461083c83605f6122b3565b61084691906122d2565b6020805460408051634b9b147b60e11b815290519394506000936001600160a01b03909216926360b2925992849263973628f69260048083019391928290030181865afa15801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf91906121ff565b6020805460408051635c9302c960e01b815290516001600160a01b0390921692635c9302c9926004808401938290030181865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092891906121ff565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d91906121ff565b6109979083612218565b9050600060076109a88360066122b3565b6109b291906122d2565b6003546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906109e7903390309086906004016122f4565b6020604051808303816000875af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190612318565b5060035460205460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610a6b9291169069152d02c7e14af67fffff90600401612341565b6020604051808303816000875af1158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190612318565b506020546040516336f31f1360e11b81526001600160a01b0390911690636de63e2690610ae19030908590600401612341565b600060405180830381600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b505060205460405163ee1f84c360e01b81523060048201526001600160a01b03909116925063ee1f84c39150602401600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252600093506001600160a01b031691506370a0823190602401602060405180830381865afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be091906121ff565b60048054601f5460405163095ea7b360e01b81529394506001600160a01b039182169363095ea7b393610c2e93909216917406d79f82328ea3da61e066ebb2f889ffffffffffff9101612341565b6020604051808303816000875af1158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190612318565b610c8d5760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090610cce57610cce612174565b6001600160a01b039283166020918202929092010152600354825191169082906001908110610cff57610cff612174565b60200260200101906001600160a01b031690816001600160a01b031681525050601f60009054906101000a90046001600160a01b03166001600160a01b03166338ed1739838f843368056bc75e2d630fffff6040518663ffffffff1660e01b8152600401610d719594939291906123dd565b6000604051808303816000875af1158015610d90573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610db89190810190612419565b50505050505050505050505b5060019392505050565b604080516002808252606082018352600092602083019080368337505060035482519293506001600160a01b031691839150600090610e0f57610e0f612174565b6001600160a01b039283166020918202929092010152600454825191169082906001908110610e4057610e40612174565b6001600160a01b039283166020918202929092010152601f546040516338ed173960e01b81529116906338ed173990610ea690620f424090600190869073bb3a3d4a665ab4e9d5594077163c0044d12906999068056bc75e2d630fffff906004016123dd565b6000604051808303816000875af1158015610ec5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eed9190810190612419565b505050565b600080805b600254811015610f5057336001600160a01b031660028281548110610f1e57610f1e612174565b6000918252602090912001546001600160a01b03161415610f3e57600191505b80610f48816121a0565b915050610ef7565b506001546001600160a01b0316331480610f675750805b610f835760405162461bcd60e51b815260040161062e906121bb565b6000806000602260009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff919061224b565b919450925090506901bc16d674ec800000006000611026826001600160701b03861661229b565b6110396001600160701b038716846122b3565b61104391906122d2565b90506000606461105483605f6122b3565b61105e91906122d2565b6020805460408051634b9b147b60e11b815290519394506000936001600160a01b03909216926360b2925992849263973628f69260048083019391928290030181865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d791906121ff565b6020805460408051635c9302c960e01b815290516001600160a01b0390921692635c9302c9926004808401938290030181865afa15801561111c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114091906121ff565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a591906121ff565b6111af9083612218565b9050600060466111c08360066122b3565b6111ca91906122d2565b6003546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906111ff903390309086906004016122f4565b6020604051808303816000875af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112429190612318565b5060035460205460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926112839291169069152d02c7e14af67fffff90600401612341565b6020604051808303816000875af11580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c69190612318565b506020546040516336f31f1360e11b81526001600160a01b0390911690636de63e26906112f99030908590600401612341565b600060405180830381600087803b15801561131357600080fd5b505af1158015611327573d6000803e3d6000fd5b505060205460405163ee1f84c360e01b81523060048201526001600160a01b03909116925063ee1f84c39150602401600060405180830381600087803b15801561137057600080fd5b505af1158015611384573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252600093506001600160a01b031691506370a0823190602401602060405180830381865afa1580156113d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f891906121ff565b60048054601f5460405163095ea7b360e01b81529394506001600160a01b039182169363095ea7b39361144693909216917406d79f82328ea3da61e066ebb2f889ffffffffffff9101612341565b6020604051808303816000875af1158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190612318565b6114a55760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b0316918391506000906114e6576114e6612174565b6001600160a01b03928316602091820292909201015260035482519116908290600190811061151757611517612174565b6001600160a01b039283166020918202929092010152600480546040516323b872dd60e01b81529216916323b872dd9161155e913391309166038d7ea4c6800091016122f4565b6020604051808303816000875af115801561157d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a19190612318565b50601f60009054906101000a90046001600160a01b03166001600160a01b03166338ed173966038d7ea4c680008f843368056bc75e2d630fffff6040518663ffffffff1660e01b81526004016115fb9594939291906123dd565b6000604051808303816000875af115801561161a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116429190810190612419565b5060019b50505050505050505050505b50919050565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906116939033903090662386f26fc10000906004016122f4565b6020604051808303816000875af11580156116b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d69190612318565b6116f25760405162461bcd60e51b815260040161062e906124d7565b600354601f5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926117319291169068056bc75e2d6310000090600401612341565b6020604051808303816000875af1158015611750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117749190612318565b6117905760405162461bcd60e51b815260040161062e9061235a565b50565b600480546040516370a0823160e01b8152339281018390526001600160a01b03909116916323b872dd91309084906370a0823190602401602060405180830381865afa1580156117e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180b91906121ff565b6040518463ffffffff1660e01b8152600401611829939291906122f4565b6020604051808303816000875af1158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c9190612318565b6117905760405162461bcd60e51b815260040161062e906124d7565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906118be9033903090612710906004016122f4565b6020604051808303816000875af11580156118dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119019190612318565b61191d5760405162461bcd60e51b815260040161062e906124d7565b600354601f5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261195c9291169068056bc75e2d6310000090600401612341565b6020604051808303816000875af115801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f9190612318565b6119bb5760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060035482519293506001600160a01b0316918391506000906119fc576119fc612174565b6001600160a01b039283166020918202929092010152600454825191169082906001908110611a2d57611a2d612174565b6001600160a01b039283166020918202929092010152601f546040516338ed173960e01b81529116906338ed173990610ea69061271090600190869073bb3a3d4a665ab4e9d5594077163c0044d12906999068056bc75e2d630fffff906004016123dd565b60028181548110611aa257600080fd5b6000918252602090912001546001600160a01b0316905081565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91611af69133913091662386f26fc1000091016122f4565b6020604051808303816000875af1158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b399190612318565b611b555760405162461bcd60e51b815260040161062e906124d7565b60048054601f5460405163095ea7b360e01b81526001600160a01b039283169363095ea7b393611b9293169168056bc75e2d631000009101612341565b6020604051808303816000875af1158015611bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd59190612318565b611bf15760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090611c3257611c32612174565b6001600160a01b039283166020918202929092010152600354825191169082906001908110611c6357611c63612174565b6001600160a01b039283166020918202929092010152601f546040516338ed173960e01b81529116906338ed173990610ea690662386f26fc10000906001908690339068056bc75e2d630fffff906004016123dd565b600080600080602260009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d36919061224b565b919450925090506901bc16d674ec800000006000611d5d826001600160701b03861661229b565b611d706001600160701b038716846122b3565b611d7a91906122d2565b905060006064611d8b83605f6122b3565b611d9591906122d2565b6020805460408051634b9b147b60e11b815290519394506000936001600160a01b03909216926360b2925992849263973628f69260048083019391928290030181865afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e91906121ff565b6020805460408051635c9302c960e01b815290516001600160a01b0390921692635c9302c9926004808401938290030181865afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7791906121ff565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edc91906121ff565b611ee69083612218565b905060006007611ef78360066122b3565b611f0191906122d2565b9998505050505050505050565b6000805b600254811015611f6b57336001600160a01b031660028281548110611f3957611f39612174565b6000918252602090912001546001600160a01b03161415611f5957600191505b80611f63816121a0565b915050611f12565b506001546001600160a01b0316331480611f825750805b611f9e5760405162461bcd60e51b815260040161062e906121bb565b60035460205460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392611fde9291169069152d02c7e14af67fffff90600401612341565b6020604051808303816000875af1158015611ffd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120219190612318565b5060048054601f5460405163095ea7b360e01b81526001600160a01b039283169363095ea7b393612068931691710b7abc627050305adf14a3d9e3ffffffffff9101612341565b6020604051808303816000875af1158015612087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ab9190612318565b5050565b600060208083528351808285015260005b818110156120dc578581018301518582016040015282016120c0565b818111156120ee576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561211757600080fd5b50508035926020909101359150565b60006020828403121561213857600080fd5b5035919050565b600181811c9082168061215357607f821691505b6020821081141561165257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156121b4576121b461218a565b5060010190565b60208082526024908201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040820152630bdb5bd960e21b606082015260800190565b60006020828403121561221157600080fd5b5051919050565b60008282101561222a5761222a61218a565b500390565b80516001600160701b038116811461224657600080fd5b919050565b60008060006060848603121561226057600080fd5b6122698461222f565b92506122776020850161222f565b9150604084015163ffffffff8116811461229057600080fd5b809150509250925092565b600082198211156122ae576122ae61218a565b500190565b60008160001904831182151516156122cd576122cd61218a565b500290565b6000826122ef57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561232a57600080fd5b8151801515811461233a57600080fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b6020808252600f908201526e30b8383937bb32903330b4b632b21760891b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600081518084526020808501945080840160005b838110156123d25781516001600160a01b0316875295820195908201906001016123ad565b509495945050505050565b85815284602082015260a0604082015260006123fc60a0830186612399565b6001600160a01b0394909416606083015250608001529392505050565b6000602080838503121561242c57600080fd5b825167ffffffffffffffff8082111561244457600080fd5b818501915085601f83011261245857600080fd5b81518181111561246a5761246a612383565b8060051b604051601f19603f8301168101818110858211171561248f5761248f612383565b6040529182528482019250838101850191888311156124ad57600080fd5b938501935b828510156124cb578451845293850193928501926124b2565b98975050505050505050565b6020808252601590820152743a3930b739b332b9233937b699103330b4b632b21760591b60408201526060019056fea264697066735822122088d12a3dabfb854ec8018044f680ebda99318e79718089e4de9e5ac2f5822ffa64736f6c634300080b0033",
  "bytecodeSha1": "15c6cb526b270476e3ce76bd1eab940fc2feb5eb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ForgeZap",
  "coverageMap": {
    "branches": {
      "3": {
        "ForgeZap.ONEburn0xBTCForMember": {
          "41": [
            11744,
            11798,
            true
          ],
          "42": [
            11843,
            11888,
            false
          ],
          "43": [
            13036,
            13140,
            true
          ]
        },
        "ForgeZap.ONEburn0xBTCForMemberNOBLOCK": {
          "44": [
            14835,
            14939,
            true
          ]
        },
        "ForgeZap.OneTeste0": {
          "47": [
            8839,
            8953,
            true
          ]
        },
        "ForgeZap.OneTeste233": {
          "45": [
            10050,
            10132,
            true
          ],
          "46": [
            10173,
            10240,
            true
          ]
        },
        "ForgeZap.OneTeste32": {
          "50": [
            9045,
            9129,
            true
          ],
          "51": [
            9170,
            9239,
            true
          ]
        },
        "ForgeZap.OneTeste44233": {
          "48": [
            9549,
            9619,
            true
          ],
          "49": [
            9660,
            9727,
            true
          ]
        },
        "ForgeZap.approes": {
          "52": [
            711,
            730,
            true
          ]
        }
      }
    },
    "statements": {
      "3": {
        "ForgeZap.ONEburn0xBTCForMember": {
          "0": [
            11736,
            11830
          ],
          "1": [
            12044,
            12107
          ],
          "2": [
            12616,
            12692
          ],
          "3": [
            12706,
            12786
          ],
          "4": [
            12800,
            12860
          ],
          "5": [
            12874,
            12913
          ],
          "6": [
            13028,
            13160
          ],
          "7": [
            13236,
            13263
          ],
          "8": [
            13281,
            13306
          ],
          "9": [
            13324,
            13431
          ],
          "10": [
            13514,
            13525
          ]
        },
        "ForgeZap.ONEburn0xBTCForMemberNOBLOCK": {
          "14": [
            13817,
            13880
          ],
          "15": [
            14415,
            14491
          ],
          "16": [
            14505,
            14585
          ],
          "17": [
            14599,
            14659
          ],
          "18": [
            14673,
            14712
          ],
          "19": [
            14827,
            14959
          ],
          "20": [
            15035,
            15062
          ],
          "21": [
            15080,
            15105
          ],
          "22": [
            15149,
            15232
          ],
          "23": [
            15258,
            15380
          ],
          "24": [
            15429,
            15440
          ]
        },
        "ForgeZap.OneTeste0": {
          "27": [
            8831,
            8979
          ]
        },
        "ForgeZap.OneTeste233": {
          "25": [
            10042,
            10158
          ],
          "26": [
            10165,
            10260
          ]
        },
        "ForgeZap.OneTeste32": {
          "33": [
            9037,
            9155
          ],
          "34": [
            9162,
            9259
          ],
          "35": [
            9303,
            9330
          ],
          "36": [
            9332,
            9357
          ],
          "37": [
            9359,
            9476
          ]
        },
        "ForgeZap.OneTeste4233": {
          "11": [
            10361,
            10386
          ],
          "12": [
            10388,
            10415
          ],
          "13": [
            10417,
            10556
          ]
        },
        "ForgeZap.OneTeste44233": {
          "28": [
            9541,
            9645
          ],
          "29": [
            9652,
            9747
          ],
          "30": [
            9791,
            9816
          ],
          "31": [
            9818,
            9845
          ],
          "32": [
            9847,
            9984
          ]
        },
        "ForgeZap.approes": {
          "39": [
            11417,
            11497
          ],
          "40": [
            11508,
            11605
          ]
        },
        "ForgeZap.viewMinFee": {
          "38": [
            10779,
            10842
          ]
        }
      }
    }
  },
  "dependencies": [
    "ExtendedMath",
    "ForgeAuctions",
    "ForgeStaking",
    "GasPump",
    "IERC20",
    "LiquidityPool",
    "OwnableAndMods",
    "SafeMath",
    "SwapRouter"
  ],
  "deployedBytecode": "6080604052600436106101c25760003560e01c8063966ff650116100f7578063c78e914811610095578063e55e197211610064578063e55e1972146104af578063ed8ba5ed146104c4578063f1261e92146104d9578063fee05d62146104f957600080fd5b8063c78e91481461044d578063d39614f41461046d578063df0244b114610483578063e3e0e3ee1461049957600080fd5b8063afd70eb5116100d1578063afd70eb5146103cd578063b6edd06f146103ed578063b71cf78a1461040d578063bd842a111461042d57600080fd5b8063966ff6501461038e57806397b7086b146103a4578063a8c817d1146103b757600080fd5b806361d5be29116101645780637303e8cd1161013e5780637303e8cd146103185780638560a2f41461032e5780638da5cb5b1461034e578063953fb4fb1461036e57600080fd5b806361d5be29146102b05780636297597b146102e0578063638099531461030257600080fd5b80633767e339116101a05780633767e3391461024e5780633ac1c86314610264578063510de0941461027a5780635c9302c91461029a57600080fd5b806306fdde03146101c757806308e7154a146101f2578063313ce5671461022a575b600080fd5b3480156101d357600080fd5b506101dc61050f565b6040516101e991906120af565b60405180910390f35b3480156101fe57600080fd5b50600f54610212906001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b34801561023657600080fd5b50610240600a5481565b6040519081526020016101e9565b34801561025a57600080fd5b5061024060055481565b34801561027057600080fd5b5061024060145481565b34801561028657600080fd5b50600354610212906001600160a01b031681565b3480156102a657600080fd5b5061024060135481565b3480156102bc57600080fd5b506102d06102cb366004612104565b61059d565b60405190151581526020016101e9565b3480156102ec57600080fd5b506103006102fb366004612126565b610dce565b005b34801561030e57600080fd5b5061024060155481565b34801561032457600080fd5b5061024060105481565b34801561033a57600080fd5b50600d54610212906001600160a01b031681565b34801561035a57600080fd5b50600154610212906001600160a01b031681565b34801561037a57600080fd5b50600e54610212906001600160a01b031681565b34801561039a57600080fd5b5061024060175481565b6102d06103b2366004612126565b610ef2565b3480156103c357600080fd5b5061024060195481565b3480156103d957600080fd5b506103006103e8366004612126565b611658565b3480156103f957600080fd5b50610300610408366004612126565b611793565b34801561041957600080fd5b50610300610428366004612126565b611888565b34801561043957600080fd5b50610212610448366004612126565b611a92565b34801561045957600080fd5b50610300610468366004612126565b611abc565b34801561047957600080fd5b5061024060115481565b34801561048f57600080fd5b5061024060185481565b3480156104a557600080fd5b5061024060125481565b3480156104bb57600080fd5b50610240611cb9565b3480156104d057600080fd5b50610300611f0e565b3480156104e557600080fd5b50600454610212906001600160a01b031681565b34801561050557600080fd5b5061024060165481565b6009805461051c9061213f565b80601f01602080910402602001604051908101604052809291908181526020018280546105489061213f565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b505050505081565b600080805b6002548110156105fb57336001600160a01b0316600282815481106105c9576105c9612174565b6000918252602090912001546001600160a01b031614156105e957600191505b806105f3816121a0565b9150506105a2565b506001546001600160a01b03163314806106125750805b6106375760405162461bcd60e51b815260040161062e906121bb565b60405180910390fd5b6020805460408051637f702eb160e11b8152905187936001600160a01b039093169263fee05d6292600480820193918290030181865afa15801561067f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a391906121ff565b6106ad9190612218565b42116106fb5760405162461bcd60e51b815260206004820152601b60248201527f4d757374206265206e65617220656e64206f662061756374696f6e0000000000604482015260640161062e565b6020805460408051637f702eb160e11b815290516001600160a01b039092169263fee05d62926004808401938290030181865afa158015610740573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076491906121ff565b421115610dc4576000806000602260009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156107c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e7919061224b565b919450925090506901bc16d674ec80000000600061080e826001600160701b03861661229b565b6108216001600160701b038716846122b3565b61082b91906122d2565b90506000606461083c83605f6122b3565b61084691906122d2565b6020805460408051634b9b147b60e11b815290519394506000936001600160a01b03909216926360b2925992849263973628f69260048083019391928290030181865afa15801561089b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bf91906121ff565b6020805460408051635c9302c960e01b815290516001600160a01b0390921692635c9302c9926004808401938290030181865afa158015610904573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092891906121ff565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d91906121ff565b6109979083612218565b9050600060076109a88360066122b3565b6109b291906122d2565b6003546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906109e7903390309086906004016122f4565b6020604051808303816000875af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190612318565b5060035460205460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392610a6b9291169069152d02c7e14af67fffff90600401612341565b6020604051808303816000875af1158015610a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aae9190612318565b506020546040516336f31f1360e11b81526001600160a01b0390911690636de63e2690610ae19030908590600401612341565b600060405180830381600087803b158015610afb57600080fd5b505af1158015610b0f573d6000803e3d6000fd5b505060205460405163ee1f84c360e01b81523060048201526001600160a01b03909116925063ee1f84c39150602401600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252600093506001600160a01b031691506370a0823190602401602060405180830381865afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be091906121ff565b60048054601f5460405163095ea7b360e01b81529394506001600160a01b039182169363095ea7b393610c2e93909216917406d79f82328ea3da61e066ebb2f889ffffffffffff9101612341565b6020604051808303816000875af1158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190612318565b610c8d5760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090610cce57610cce612174565b6001600160a01b039283166020918202929092010152600354825191169082906001908110610cff57610cff612174565b60200260200101906001600160a01b031690816001600160a01b031681525050601f60009054906101000a90046001600160a01b03166001600160a01b03166338ed1739838f843368056bc75e2d630fffff6040518663ffffffff1660e01b8152600401610d719594939291906123dd565b6000604051808303816000875af1158015610d90573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610db89190810190612419565b50505050505050505050505b5060019392505050565b604080516002808252606082018352600092602083019080368337505060035482519293506001600160a01b031691839150600090610e0f57610e0f612174565b6001600160a01b039283166020918202929092010152600454825191169082906001908110610e4057610e40612174565b6001600160a01b039283166020918202929092010152601f546040516338ed173960e01b81529116906338ed173990610ea690620f424090600190869073bb3a3d4a665ab4e9d5594077163c0044d12906999068056bc75e2d630fffff906004016123dd565b6000604051808303816000875af1158015610ec5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eed9190810190612419565b505050565b600080805b600254811015610f5057336001600160a01b031660028281548110610f1e57610f1e612174565b6000918252602090912001546001600160a01b03161415610f3e57600191505b80610f48816121a0565b915050610ef7565b506001546001600160a01b0316331480610f675750805b610f835760405162461bcd60e51b815260040161062e906121bb565b6000806000602260009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff919061224b565b919450925090506901bc16d674ec800000006000611026826001600160701b03861661229b565b6110396001600160701b038716846122b3565b61104391906122d2565b90506000606461105483605f6122b3565b61105e91906122d2565b6020805460408051634b9b147b60e11b815290519394506000936001600160a01b03909216926360b2925992849263973628f69260048083019391928290030181865afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d791906121ff565b6020805460408051635c9302c960e01b815290516001600160a01b0390921692635c9302c9926004808401938290030181865afa15801561111c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114091906121ff565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a591906121ff565b6111af9083612218565b9050600060466111c08360066122b3565b6111ca91906122d2565b6003546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906111ff903390309086906004016122f4565b6020604051808303816000875af115801561121e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112429190612318565b5060035460205460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926112839291169069152d02c7e14af67fffff90600401612341565b6020604051808303816000875af11580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c69190612318565b506020546040516336f31f1360e11b81526001600160a01b0390911690636de63e26906112f99030908590600401612341565b600060405180830381600087803b15801561131357600080fd5b505af1158015611327573d6000803e3d6000fd5b505060205460405163ee1f84c360e01b81523060048201526001600160a01b03909116925063ee1f84c39150602401600060405180830381600087803b15801561137057600080fd5b505af1158015611384573d6000803e3d6000fd5b5050600480546040516370a0823160e01b81523092810192909252600093506001600160a01b031691506370a0823190602401602060405180830381865afa1580156113d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f891906121ff565b60048054601f5460405163095ea7b360e01b81529394506001600160a01b039182169363095ea7b39361144693909216917406d79f82328ea3da61e066ebb2f889ffffffffffff9101612341565b6020604051808303816000875af1158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190612318565b6114a55760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b0316918391506000906114e6576114e6612174565b6001600160a01b03928316602091820292909201015260035482519116908290600190811061151757611517612174565b6001600160a01b039283166020918202929092010152600480546040516323b872dd60e01b81529216916323b872dd9161155e913391309166038d7ea4c6800091016122f4565b6020604051808303816000875af115801561157d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a19190612318565b50601f60009054906101000a90046001600160a01b03166001600160a01b03166338ed173966038d7ea4c680008f843368056bc75e2d630fffff6040518663ffffffff1660e01b81526004016115fb9594939291906123dd565b6000604051808303816000875af115801561161a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116429190810190612419565b5060019b50505050505050505050505b50919050565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906116939033903090662386f26fc10000906004016122f4565b6020604051808303816000875af11580156116b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d69190612318565b6116f25760405162461bcd60e51b815260040161062e906124d7565b600354601f5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b3926117319291169068056bc75e2d6310000090600401612341565b6020604051808303816000875af1158015611750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117749190612318565b6117905760405162461bcd60e51b815260040161062e9061235a565b50565b600480546040516370a0823160e01b8152339281018390526001600160a01b03909116916323b872dd91309084906370a0823190602401602060405180830381865afa1580156117e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180b91906121ff565b6040518463ffffffff1660e01b8152600401611829939291906122f4565b6020604051808303816000875af1158015611848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061186c9190612318565b6117905760405162461bcd60e51b815260040161062e906124d7565b6003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906118be9033903090612710906004016122f4565b6020604051808303816000875af11580156118dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119019190612318565b61191d5760405162461bcd60e51b815260040161062e906124d7565b600354601f5460405163095ea7b360e01b81526001600160a01b039283169263095ea7b39261195c9291169068056bc75e2d6310000090600401612341565b6020604051808303816000875af115801561197b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199f9190612318565b6119bb5760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060035482519293506001600160a01b0316918391506000906119fc576119fc612174565b6001600160a01b039283166020918202929092010152600454825191169082906001908110611a2d57611a2d612174565b6001600160a01b039283166020918202929092010152601f546040516338ed173960e01b81529116906338ed173990610ea69061271090600190869073bb3a3d4a665ab4e9d5594077163c0044d12906999068056bc75e2d630fffff906004016123dd565b60028181548110611aa257600080fd5b6000918252602090912001546001600160a01b0316905081565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91611af69133913091662386f26fc1000091016122f4565b6020604051808303816000875af1158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b399190612318565b611b555760405162461bcd60e51b815260040161062e906124d7565b60048054601f5460405163095ea7b360e01b81526001600160a01b039283169363095ea7b393611b9293169168056bc75e2d631000009101612341565b6020604051808303816000875af1158015611bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd59190612318565b611bf15760405162461bcd60e51b815260040161062e9061235a565b604080516002808252606082018352600092602083019080368337505060045482519293506001600160a01b031691839150600090611c3257611c32612174565b6001600160a01b039283166020918202929092010152600354825191169082906001908110611c6357611c63612174565b6001600160a01b039283166020918202929092010152601f546040516338ed173960e01b81529116906338ed173990610ea690662386f26fc10000906001908690339068056bc75e2d630fffff906004016123dd565b600080600080602260009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d36919061224b565b919450925090506901bc16d674ec800000006000611d5d826001600160701b03861661229b565b611d706001600160701b038716846122b3565b611d7a91906122d2565b905060006064611d8b83605f6122b3565b611d9591906122d2565b6020805460408051634b9b147b60e11b815290519394506000936001600160a01b03909216926360b2925992849263973628f69260048083019391928290030181865afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e91906121ff565b6020805460408051635c9302c960e01b815290516001600160a01b0390921692635c9302c9926004808401938290030181865afa158015611e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7791906121ff565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611eb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611edc91906121ff565b611ee69083612218565b905060006007611ef78360066122b3565b611f0191906122d2565b9998505050505050505050565b6000805b600254811015611f6b57336001600160a01b031660028281548110611f3957611f39612174565b6000918252602090912001546001600160a01b03161415611f5957600191505b80611f63816121a0565b915050611f12565b506001546001600160a01b0316331480611f825750805b611f9e5760405162461bcd60e51b815260040161062e906121bb565b60035460205460405163095ea7b360e01b81526001600160a01b039283169263095ea7b392611fde9291169069152d02c7e14af67fffff90600401612341565b6020604051808303816000875af1158015611ffd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120219190612318565b5060048054601f5460405163095ea7b360e01b81526001600160a01b039283169363095ea7b393612068931691710b7abc627050305adf14a3d9e3ffffffffff9101612341565b6020604051808303816000875af1158015612087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ab9190612318565b5050565b600060208083528351808285015260005b818110156120dc578581018301518582016040015282016120c0565b818111156120ee576000604083870101525b50601f01601f1916929092016040019392505050565b6000806040838503121561211757600080fd5b50508035926020909101359150565b60006020828403121561213857600080fd5b5035919050565b600181811c9082168061215357607f821691505b6020821081141561165257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156121b4576121b461218a565b5060010190565b60208082526024908201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040820152630bdb5bd960e21b606082015260800190565b60006020828403121561221157600080fd5b5051919050565b60008282101561222a5761222a61218a565b500390565b80516001600160701b038116811461224657600080fd5b919050565b60008060006060848603121561226057600080fd5b6122698461222f565b92506122776020850161222f565b9150604084015163ffffffff8116811461229057600080fd5b809150509250925092565b600082198211156122ae576122ae61218a565b500190565b60008160001904831182151516156122cd576122cd61218a565b500290565b6000826122ef57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561232a57600080fd5b8151801515811461233a57600080fd5b9392505050565b6001600160a01b03929092168252602082015260400190565b6020808252600f908201526e30b8383937bb32903330b4b632b21760891b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b600081518084526020808501945080840160005b838110156123d25781516001600160a01b0316875295820195908201906001016123ad565b509495945050505050565b85815284602082015260a0604082015260006123fc60a0830186612399565b6001600160a01b0394909416606083015250608001529392505050565b6000602080838503121561242c57600080fd5b825167ffffffffffffffff8082111561244457600080fd5b818501915085601f83011261245857600080fd5b81518181111561246a5761246a612383565b8060051b604051601f19603f8301168101818110858211171561248f5761248f612383565b6040529182528482019250838101850191888311156124ad57600080fd5b938501935b828510156124cb578451845293850193928501926124b2565b98975050505050505050565b6020808252601590820152743a3930b739b332b9233937b699103330b4b632b21760591b60408201526060019056fea264697066735822122088d12a3dabfb854ec8018044f680ebda99318e79718089e4de9e5ac2f5822ffa64736f6c634300080b0033",
  "deployedSourceMap": "6375:9102:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6741:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7010:29;;;;;;;;;;-1:-1:-1;7010:29:3;;;;-1:-1:-1;;;;;7010:29:3;;;;;;-1:-1:-1;;;;;780:32:5;;;762:51;;750:2;735:18;7010:29:3;616:203:5;6765:20:3;;;;;;;;;;;;;;;;;;;970:25:5;;;958:2;943:18;6765:20:3;824:177:5;6593:23:3;;;;;;;;;;;;;;;;7201:22;;;;;;;;;;;;;;;;6494:30;;;;;;;;;;-1:-1:-1;6494:30:3;;;;-1:-1:-1;;;;;6494:30:3;;;7173:22;;;;;;;;;;;;;;;;11611:1929;;;;;;;;;;-1:-1:-1;11611:1929:3;;;;;:::i;:::-;;:::i;:::-;;;1424:14:5;;1417:22;1399:41;;1387:2;1372:18;11611:1929:3;1259:187:5;10264:295:3;;;;;;;;;;-1:-1:-1;10264:295:3;;;;;:::i;:::-;;:::i;:::-;;7225:25;;;;;;;;;;;;;;;;7045:38;;;;;;;;;;;;;;;;6933:36;;;;;;;;;;-1:-1:-1;6933:36:3;;;;-1:-1:-1;;;;;6933:36:3;;;117:20;;;;;;;;;;-1:-1:-1;117:20:3;;;;-1:-1:-1;;;;;117:20:3;;;6975:29;;;;;;;;;;-1:-1:-1;6975:29:3;;;;-1:-1:-1;;;;;6975:29:3;;;7285:22;;;;;;;;;;;;;;;;13546:1909;;;;;;:::i;:::-;;:::i;7335:31::-;;;;;;;;;;;;;;;;9989:274;;;;;;;;;;-1:-1:-1;9989:274:3;;;;;:::i;:::-;;:::i;8780:202::-;;;;;;;;;;-1:-1:-1;8780:202:3;;;;;:::i;:::-;;:::i;9486:501::-;;;;;;;;;;-1:-1:-1;9486:501:3;;;;;:::i;:::-;;:::i;143:28::-;;;;;;;;;;-1:-1:-1;143:28:3;;;;;:::i;:::-;;:::i;8985:494::-;;;;;;;;;;-1:-1:-1;8985:494:3;;;;;:::i;:::-;;:::i;7115:23::-;;;;;;;;;;;;;;;;7309:24;;;;;;;;;;;;;;;;7144:27;;;;;;;;;;;;;;;;10561:806;;;;;;;;;;;;;:::i;11369:240::-;;;;;;;;;;;;;:::i;6530:32::-;;;;;;;;;;-1:-1:-1;6530:32:3;;;;-1:-1:-1;;;;;6530:32:3;;;7256:23;;;;;;;;;;;;;;;;6741:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11611:1929::-;11702:12;;;585:109;602:10;:17;599:20;;585:109;;;652:10;-1:-1:-1;;;;;635:27:3;:10;646:1;635:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;635:13:3;:27;632:58;;;681:4;667:18;;632:58;621:3;;;;:::i;:::-;;;;585:109;;;-1:-1:-1;725:5:3;;-1:-1:-1;;;;;725:5:3;711:10;:19;;:34;;;734:11;711:34;703:83;;;;-1:-1:-1;;;703:83:3;;;;;;;:::i;:::-;;;;;;;;;11762:13:::1;::::0;;:27:::1;::::0;;-1:-1:-1;;;11762:27:3;;;;11792:6;;-1:-1:-1;;;;;11762:13:3;;::::1;::::0;:25:::1;::::0;:27:::1;::::0;;::::1;::::0;;;;;;;:13;:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;;:::i;:::-;11744:15;:54;11736:94;;;::::0;-1:-1:-1;;;11736:94:3;;3351:2:5;11736:94:3::1;::::0;::::1;3333:21:5::0;3390:2;3370:18;;;3363:30;3429:29;3409:18;;;3402:57;3476:18;;11736:94:3::1;3149:351:5::0;11736:94:3::1;11861:13;::::0;;:27:::1;::::0;;-1:-1:-1;;;11861:27:3;;;;-1:-1:-1;;;;;11861:13:3;;::::1;::::0;:25:::1;::::0;:27:::1;::::0;;::::1;::::0;;;;;;:13;:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11843:15;:45;11840:1665;;;11904:17;11964::::0;12004:26:::1;12090:3;;;;;;;;;-1:-1:-1::0;;;;;12090:3:3::1;-1:-1:-1::0;;;;;12090:15:3::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12044:63:::0;;-1:-1:-1;12044:63:3;-1:-1:-1;12044:63:3;-1:-1:-1;12153:15:3::1;12136:14;12234:18;12153:15:::0;-1:-1:-1;;;;;12234:18:3;::::1;;:::i;:::-;12210;-1:-1:-1::0;;;;;12210:18:3;::::1;:6:::0;:18:::1;:::i;:::-;12209:44;;;;:::i;:::-;12182:71:::0;-1:-1:-1;12267:23:3::1;12317:3;12293:21;12182:71:::0;12312:2:::1;12293:21;:::i;:::-;:27;;;;:::i;:::-;12456:13;::::0;;12486:26:::1;::::0;;-1:-1:-1;;;12486:26:3;;;;12267:53;;-1:-1:-1;12413:22:3::1;::::0;-1:-1:-1;;;;;12456:13:3;;::::1;::::0;:29:::1;::::0;:13;;12486:24:::1;::::0;:26:::1;::::0;;::::1;::::0;12456:13;;12486:26;;;;;12456:13;12486:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12514:13;::::0;;:26:::1;::::0;;-1:-1:-1;;;12514:26:3;;;;-1:-1:-1;;;;;12514:13:3;;::::1;::::0;:24:::1;::::0;:26:::1;::::0;;::::1;::::0;;;;;;:13;:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12456:85;::::0;-1:-1:-1;;;;;;12456:85:3::1;::::0;;;;;;::::1;::::0;::::1;4855:25:5::0;;;;4896:18;;;4889:34;4828:18;;12456:85:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12438:103;::::0;:15;:103:::1;:::i;:::-;12413:128:::0;-1:-1:-1;12555:19:3::1;12600:1;12578:18;12413:128:::0;12595:1:::1;12578:18;:::i;:::-;12577:24;;;;:::i;:::-;12623:15;::::0;12616:76:::1;::::0;-1:-1:-1;;;12616:76:3;;12555:46;;-1:-1:-1;;;;;;12623:15:3::1;::::0;12616:36:::1;::::0;:76:::1;::::0;12653:10:::1;::::0;12673:4:::1;::::0;12555:46;;12616:76:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12713:15:3::1;::::0;12746:13:::1;::::0;12706:80:::1;::::0;-1:-1:-1;;;12706:80:3;;-1:-1:-1;;;;;12713:15:3;;::::1;::::0;12706:31:::1;::::0;:80:::1;::::0;12746:13;::::1;::::0;12762:23:::1;::::0;12706:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12800:13:3::1;::::0;:60:::1;::::0;-1:-1:-1;;;12800:60:3;;-1:-1:-1;;;;;12800:13:3;;::::1;::::0;:32:::1;::::0;:60:::1;::::0;12841:4:::1;::::0;12848:11;;12800:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12874:13:3::1;::::0;:39:::1;::::0;-1:-1:-1;;;12874:39:3;;12907:4:::1;12874:39;::::0;::::1;762:51:5::0;-1:-1:-1;;;;;12874:13:3;;::::1;::::0;-1:-1:-1;12874:24:3::1;::::0;-1:-1:-1;735:18:5;;12874:39:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;12950:17:3::1;::::0;;12943:50:::1;::::0;-1:-1:-1;;;12943:50:3;;12987:4:::1;12943:50:::0;;::::1;762:51:5::0;;;;12927:13:3::1;::::0;-1:-1:-1;;;;;;12950:17:3::1;::::0;-1:-1:-1;12943:35:3::1;::::0;735:18:5;;12943:50:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13043:17;::::0;;13078:9:::1;::::0;13036:104:::1;::::0;-1:-1:-1;;;13036:104:3;;12927:66;;-1:-1:-1;;;;;;13043:17:3;;::::1;::::0;13036:33:::1;::::0;:104:::1;::::0;13078:9;;::::1;::::0;13090:49:::1;::::0;13036:104:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13028:132;;;;-1:-1:-1::0;;;13028:132:3::1;;;;;;;:::i;:::-;13202:16;::::0;;13216:1:::1;13202:16:::0;;;;;::::1;::::0;;13178:21:::1;::::0;13202:16:::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;13246:17:3::1;::::0;13236:7;;;;-1:-1:-1;;;;;;13246:17:3::1;::::0;13236:7;;-1:-1:-1;13246:17:3::1;::::0;13236:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;13236:27:3;;::::1;:7;::::0;;::::1;::::0;;;;;:27;13291:15:::1;::::0;13281:7;;13291:15;::::1;::::0;13281:4;;13291:15;;13281:7;::::1;;;;;:::i;:::-;;;;;;:25;-1:-1:-1::0;;;;;13281:25:3::1;;;-1:-1:-1::0;;;;;13281:25:3::1;;;::::0;::::1;13343:9;;;;;;;;;-1:-1:-1::0;;;;;13343:9:3::1;-1:-1:-1::0;;;;;13324:55:3::1;;13380:5;13387:3;13392:4;13398:10;13410:20;13324:107;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;13324:107:3::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;11889:1599;;;;;;;;;;11840:1665;-1:-1:-1::0;13521:4:3::1;::::0;11611:1929;-1:-1:-1;;;11611:1929:3:o;10264:295::-;10343:16;;;10357:1;10343:16;;;;;;;;10319:21;;10343:16;;;;;;;;-1:-1:-1;;10371:15:3;;10361:7;;;;-1:-1:-1;;;;;;10371:15:3;;10361:7;;-1:-1:-1;10371:15:3;;10361:7;;;;:::i;:::-;-1:-1:-1;;;;;10361:25:3;;;:7;;;;;;;;;:25;10398:17;;10388:7;;10398:17;;;10388:4;;10398:17;;10388:7;;;;;;:::i;:::-;-1:-1:-1;;;;;10388:27:3;;;:7;;;;;;;;;:27;10436:9;;10417:139;;-1:-1:-1;;;10417:139:3;;10436:9;;;10417:55;;:139;;10473:7;;10436:9;;10485:4;;10491:42;;10535:20;;10417:139;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10417:139:3;;;;;;;;;;;;:::i;:::-;;10316:243;10264:295;:::o;13546:1909::-;13639:12;;;585:109;602:10;:17;599:20;;585:109;;;652:10;-1:-1:-1;;;;;635:27:3;:10;646:1;635:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;635:13:3;:27;632:58;;;681:4;667:18;;632:58;621:3;;;;:::i;:::-;;;;585:109;;;-1:-1:-1;725:5:3;;-1:-1:-1;;;;;725:5:3;711:10;:19;;:34;;;734:11;711:34;703:83;;;;-1:-1:-1;;;703:83:3;;;;;;;:::i;:::-;13677:17:::1;13737::::0;13777:26:::1;13863:3;;;;;;;;;-1:-1:-1::0;;;;;13863:3:3::1;-1:-1:-1::0;;;;;13863:15:3::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13817:63:::0;;-1:-1:-1;13817:63:3;-1:-1:-1;13817:63:3;-1:-1:-1;13926:15:3::1;13909:14;14007:18;13926:15:::0;-1:-1:-1;;;;;14007:18:3;::::1;;:::i;:::-;13983;-1:-1:-1::0;;;;;13983:18:3;::::1;:6:::0;:18:::1;:::i;:::-;13982:44;;;;:::i;:::-;13955:71:::0;-1:-1:-1;14040:23:3::1;14090:3;14066:21;13955:71:::0;14085:2:::1;14066:21;:::i;:::-;:27;;;;:::i;:::-;14229:13;::::0;;14259:26:::1;::::0;;-1:-1:-1;;;14259:26:3;;;;14040:53;;-1:-1:-1;14186:22:3::1;::::0;-1:-1:-1;;;;;14229:13:3;;::::1;::::0;:29:::1;::::0;:13;;14259:24:::1;::::0;:26:::1;::::0;;::::1;::::0;14229:13;;14259:26;;;;;14229:13;14259:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14287:13;::::0;;:26:::1;::::0;;-1:-1:-1;;;14287:26:3;;;;-1:-1:-1;;;;;14287:13:3;;::::1;::::0;:24:::1;::::0;:26:::1;::::0;;::::1;::::0;;;;;;:13;:26:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14229:85;::::0;-1:-1:-1;;;;;;14229:85:3::1;::::0;;;;;;::::1;::::0;::::1;4855:25:5::0;;;;4896:18;;;4889:34;4828:18;;14229:85:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14211:103;::::0;:15;:103:::1;:::i;:::-;14186:128:::0;-1:-1:-1;14328:19:3::1;14373:2;14351:18;14186:128:::0;14368:1:::1;14351:18;:::i;:::-;14350:25;;;;:::i;:::-;14422:15;::::0;14415:76:::1;::::0;-1:-1:-1;;;14415:76:3;;14328:47;;-1:-1:-1;;;;;;14422:15:3::1;::::0;14415:36:::1;::::0;:76:::1;::::0;14452:10:::1;::::0;14472:4:::1;::::0;14328:47;;14415:76:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;14512:15:3::1;::::0;14545:13:::1;::::0;14505:80:::1;::::0;-1:-1:-1;;;14505:80:3;;-1:-1:-1;;;;;14512:15:3;;::::1;::::0;14505:31:::1;::::0;:80:::1;::::0;14545:13;::::1;::::0;14561:23:::1;::::0;14505:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;14599:13:3::1;::::0;:60:::1;::::0;-1:-1:-1;;;14599:60:3;;-1:-1:-1;;;;;14599:13:3;;::::1;::::0;:32:::1;::::0;:60:::1;::::0;14640:4:::1;::::0;14647:11;;14599:60:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;14673:13:3::1;::::0;:39:::1;::::0;-1:-1:-1;;;14673:39:3;;14706:4:::1;14673:39;::::0;::::1;762:51:5::0;-1:-1:-1;;;;;14673:13:3;;::::1;::::0;-1:-1:-1;14673:24:3::1;::::0;-1:-1:-1;735:18:5;;14673:39:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;14749:17:3::1;::::0;;14742:50:::1;::::0;-1:-1:-1;;;14742:50:3;;14786:4:::1;14742:50:::0;;::::1;762:51:5::0;;;;14726:13:3::1;::::0;-1:-1:-1;;;;;;14749:17:3::1;::::0;-1:-1:-1;14742:35:3::1;::::0;735:18:5;;14742:50:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14842:17;::::0;;14877:9:::1;::::0;14835:104:::1;::::0;-1:-1:-1;;;14835:104:3;;14726:66;;-1:-1:-1;;;;;;14842:17:3;;::::1;::::0;14835:33:::1;::::0;:104:::1;::::0;14877:9;;::::1;::::0;14889:49:::1;::::0;14835:104:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14827:132;;;;-1:-1:-1::0;;;14827:132:3::1;;;;;;;:::i;:::-;15001:16;::::0;;15015:1:::1;15001:16:::0;;;;;::::1;::::0;;14977:21:::1;::::0;15001:16:::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;15045:17:3::1;::::0;15035:7;;;;-1:-1:-1;;;;;;15045:17:3::1;::::0;15035:7;;-1:-1:-1;15045:17:3::1;::::0;15035:7:::1;;;;:::i;:::-;-1:-1:-1::0;;;;;15035:27:3;;::::1;:7;::::0;;::::1;::::0;;;;;:27;15090:15:::1;::::0;15080:7;;15090:15;::::1;::::0;15080:4;;15090:15;;15080:7;::::1;;;;;:::i;:::-;-1:-1:-1::0;;;;;15080:25:3;;::::1;:7;::::0;;::::1;::::0;;;;;:25;15156:17:::1;::::0;;15149:83:::1;::::0;-1:-1:-1;;;15149:83:3;;15156:17;::::1;::::0;15149:38:::1;::::0;:83:::1;::::0;15188:10:::1;::::0;15208:4:::1;::::0;15215:16:::1;::::0;15149:83:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15277:9;;;;;;;;;-1:-1:-1::0;;;;;15277:9:3::1;-1:-1:-1::0;;;;;15258:55:3::1;;15314:16;15333:6;15341:4;15347:10;15359:20;15258:122;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;15258:122:3::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;;15436:4;15429:11;;;;;;;;;;;;796:1;549:255:::0;13546:1909;;;:::o;9989:274::-;10057:15;;10050:82;;-1:-1:-1;;;10050:82:3;;-1:-1:-1;;;;;10057:15:3;;;;10050:36;;:82;;10087:10;;10107:4;;10114:17;;10050:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10042:116;;;;-1:-1:-1;;;10042:116:3;;;;;;;:::i;:::-;10180:15;;10213:9;;10173:67;;-1:-1:-1;;;10173:67:3;;-1:-1:-1;;;;;10180:15:3;;;;10173:31;;:67;;10213:9;;;10225:14;;10173:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10165:95;;;;-1:-1:-1;;;10165:95:3;;;;;;;:::i;:::-;9989:274;:::o;8780:202::-;8846:17;;;8905:47;;-1:-1:-1;;;8905:47:3;;8878:10;8905:47;;;762:51:5;;;-1:-1:-1;;;;;8846:17:3;;;;8839:38;;8898:4;;8846:17;;8905:35;;735:18:5;;8905:47:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8839:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8831:148;;;;-1:-1:-1;;;8831:148:3;;;;;;;:::i;9486:501::-;9556:15;;9549:70;;-1:-1:-1;;;9549:70:3;;-1:-1:-1;;;;;9556:15:3;;;;9549:36;;:70;;9586:10;;9606:4;;9613:5;;9549:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9541:104;;;;-1:-1:-1;;;9541:104:3;;;;;;;:::i;:::-;9667:15;;9700:9;;9660:67;;-1:-1:-1;;;9660:67:3;;-1:-1:-1;;;;;9667:15:3;;;;9660:31;;:67;;9700:9;;;9712:14;;9660:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9652:95;;;;-1:-1:-1;;;9652:95:3;;;;;;;:::i;:::-;9773:16;;;9787:1;9773:16;;;;;;;;9749:21;;9773:16;;;;;;;;-1:-1:-1;;9801:15:3;;9791:7;;;;-1:-1:-1;;;;;;9801:15:3;;9791:7;;-1:-1:-1;9801:15:3;;9791:7;;;;:::i;:::-;-1:-1:-1;;;;;9791:25:3;;;:7;;;;;;;;;:25;9828:17;;9818:7;;9828:17;;;9818:4;;9828:17;;9818:7;;;;;;:::i;:::-;-1:-1:-1;;;;;9818:27:3;;;:7;;;;;;;;;:27;9866:9;;9847:137;;-1:-1:-1;;;9847:137:3;;9866:9;;;9847:55;;:137;;9903:5;;9866:9;;9913:4;;9919:42;;9963:20;;9847:137;;;:::i;143:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;143:28:3;;-1:-1:-1;143:28:3;:::o;8985:494::-;9052:17;;;9045:84;;-1:-1:-1;;;9045:84:3;;-1:-1:-1;;;;;9052:17:3;;;;9045:38;;:84;;9084:10;;9104:4;;9111:17;;9045:84;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9037:118;;;;-1:-1:-1;;;9037:118:3;;;;;;;:::i;:::-;9177:17;;;9212:9;;9170:69;;-1:-1:-1;;;9170:69:3;;-1:-1:-1;;;;;9177:17:3;;;;9170:33;;:69;;9212:9;;9224:14;;9170:69;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9162:97;;;;-1:-1:-1;;;9162:97:3;;;;;;;:::i;:::-;9285:16;;;9299:1;9285:16;;;;;;;;9261:21;;9285:16;;;;;;;;-1:-1:-1;;9313:17:3;;9303:7;;;;-1:-1:-1;;;;;;9313:17:3;;9303:7;;-1:-1:-1;9313:17:3;;9303:7;;;;:::i;:::-;-1:-1:-1;;;;;9303:27:3;;;:7;;;;;;;;;:27;9342:15;;9332:7;;9342:15;;;9332:4;;9342:15;;9332:7;;;;;;:::i;:::-;-1:-1:-1;;;;;9332:25:3;;;:7;;;;;;;;;:25;9378:9;;9359:117;;-1:-1:-1;;;9359:117:3;;9378:9;;;9359:55;;:117;;9415:17;;9378:9;;9437:4;;9443:10;;9455:20;;9359:117;;;:::i;10561:806::-;10603:18;10639:17;10699;10739:26;10825:3;;;;;;;;;-1:-1:-1;;;;;10825:3:3;-1:-1:-1;;;;;10825:15:3;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10779:63;;-1:-1:-1;10779:63:3;-1:-1:-1;10779:63:3;-1:-1:-1;10888:15:3;10871:14;10969:18;10888:15;-1:-1:-1;;;;;10969:18:3;;;:::i;:::-;10945;-1:-1:-1;;;;;10945:18:3;;:6;:18;:::i;:::-;10944:44;;;;:::i;:::-;10917:71;-1:-1:-1;11002:23:3;11052:3;11028:21;10917:71;11047:2;11028:21;:::i;:::-;:27;;;;:::i;:::-;11191:13;;;11221:26;;;-1:-1:-1;;;11221:26:3;;;;11002:53;;-1:-1:-1;11148:22:3;;-1:-1:-1;;;;;11191:13:3;;;;:29;;:13;;11221:24;;:26;;;;;11191:13;;11221:26;;;;;11191:13;11221:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11249:13;;;:26;;;-1:-1:-1;;;11249:26:3;;;;-1:-1:-1;;;;;11249:13:3;;;;:24;;:26;;;;;;;;;;:13;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11191:85;;-1:-1:-1;;;;;;11191:85:3;;;;;;;;;;4855:25:5;;;;4896:18;;;4889:34;4828:18;;11191:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11173:103;;:15;:103;:::i;:::-;11148:128;-1:-1:-1;11291:19:3;11336:1;11314:18;11148:128;11331:1;11314:18;:::i;:::-;11313:24;;;;:::i;:::-;11291:46;10561:806;-1:-1:-1;;;;;;;;;10561:806:3:o;11369:240::-;555:16;589:6;585:109;602:10;:17;599:20;;585:109;;;652:10;-1:-1:-1;;;;;635:27:3;:10;646:1;635:13;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;635:13:3;:27;632:58;;;681:4;667:18;;632:58;621:3;;;;:::i;:::-;;;;585:109;;;-1:-1:-1;725:5:3;;-1:-1:-1;;;;;725:5:3;711:10;:19;;:34;;;734:11;711:34;703:83;;;;-1:-1:-1;;;703:83:3;;;;;;;:::i;:::-;11424:15:::1;::::0;11457:13:::1;::::0;11417:80:::1;::::0;-1:-1:-1;;;11417:80:3;;-1:-1:-1;;;;;11424:15:3;;::::1;::::0;11417:31:::1;::::0;:80:::1;::::0;11457:13;::::1;::::0;11473:23:::1;::::0;11417:80:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11515:17:3::1;::::0;;11550:9:::1;::::0;11508:97:::1;::::0;-1:-1:-1;;;11508:97:3;;-1:-1:-1;;;;;11515:17:3;;::::1;::::0;11508:33:::1;::::0;:97:::1;::::0;11550:9:::1;::::0;11562:42:::1;::::0;11508:97:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;549:255:::0;11369:240::o;14:597:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:5;574:15;-1:-1:-1;;570:29:5;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:5:o;1006:248::-;1074:6;1082;1135:2;1123:9;1114:7;1110:23;1106:32;1103:52;;;1151:1;1148;1141:12;1103:52;-1:-1:-1;;1174:23:5;;;1244:2;1229:18;;;1216:32;;-1:-1:-1;1006:248:5:o;1451:180::-;1510:6;1563:2;1551:9;1542:7;1538:23;1534:32;1531:52;;;1579:1;1576;1569:12;1531:52;-1:-1:-1;1602:23:5;;1451:180;-1:-1:-1;1451:180:5:o;1636:380::-;1715:1;1711:12;;;;1758;;;1779:61;;1833:4;1825:6;1821:17;1811:27;;1779:61;1886:2;1878:6;1875:14;1855:18;1852:38;1849:161;;;1932:10;1927:3;1923:20;1920:1;1913:31;1967:4;1964:1;1957:15;1995:4;1992:1;1985:15;2021:127;2082:10;2077:3;2073:20;2070:1;2063:31;2113:4;2110:1;2103:15;2137:4;2134:1;2127:15;2153:127;2214:10;2209:3;2205:20;2202:1;2195:31;2245:4;2242:1;2235:15;2269:4;2266:1;2259:15;2285:135;2324:3;-1:-1:-1;;2345:17:5;;2342:43;;;2365:18;;:::i;:::-;-1:-1:-1;2412:1:5;2401:13;;2285:135::o;2425:400::-;2627:2;2609:21;;;2666:2;2646:18;;;2639:30;2705:34;2700:2;2685:18;;2678:62;-1:-1:-1;;;2771:2:5;2756:18;;2749:34;2815:3;2800:19;;2425:400::o;2830:184::-;2900:6;2953:2;2941:9;2932:7;2928:23;2924:32;2921:52;;;2969:1;2966;2959:12;2921:52;-1:-1:-1;2992:16:5;;2830:184;-1:-1:-1;2830:184:5:o;3019:125::-;3059:4;3087:1;3084;3081:8;3078:34;;;3092:18;;:::i;:::-;-1:-1:-1;3129:9:5;;3019:125::o;3505:188::-;3584:13;;-1:-1:-1;;;;;3626:42:5;;3616:53;;3606:81;;3683:1;3680;3673:12;3606:81;3505:188;;;:::o;3698:450::-;3785:6;3793;3801;3854:2;3842:9;3833:7;3829:23;3825:32;3822:52;;;3870:1;3867;3860:12;3822:52;3893:40;3923:9;3893:40;:::i;:::-;3883:50;;3952:49;3997:2;3986:9;3982:18;3952:49;:::i;:::-;3942:59;;4044:2;4033:9;4029:18;4023:25;4088:10;4081:5;4077:22;4070:5;4067:33;4057:61;;4114:1;4111;4104:12;4057:61;4137:5;4127:15;;;3698:450;;;;;:::o;4153:128::-;4193:3;4224:1;4220:6;4217:1;4214:13;4211:39;;;4230:18;;:::i;:::-;-1:-1:-1;4266:9:5;;4153:128::o;4286:168::-;4326:7;4392:1;4388;4384:6;4380:14;4377:1;4374:21;4369:1;4362:9;4355:17;4351:45;4348:71;;;4399:18;;:::i;:::-;-1:-1:-1;4439:9:5;;4286:168::o;4459:217::-;4499:1;4525;4515:132;;4569:10;4564:3;4560:20;4557:1;4550:31;4604:4;4601:1;4594:15;4632:4;4629:1;4622:15;4515:132;-1:-1:-1;4661:9:5;;4459:217::o;4934:375::-;-1:-1:-1;;;;;5192:15:5;;;5174:34;;5244:15;;;;5239:2;5224:18;;5217:43;5291:2;5276:18;;5269:34;;;;5124:2;5109:18;;4934:375::o;5314:277::-;5381:6;5434:2;5422:9;5413:7;5409:23;5405:32;5402:52;;;5450:1;5447;5440:12;5402:52;5482:9;5476:16;5535:5;5528:13;5521:21;5514:5;5511:32;5501:60;;5557:1;5554;5547:12;5501:60;5580:5;5314:277;-1:-1:-1;;;5314:277:5:o;5596:304::-;-1:-1:-1;;;;;5818:32:5;;;;5800:51;;5882:2;5867:18;;5860:34;5788:2;5773:18;;5596:304::o;6519:339::-;6721:2;6703:21;;;6760:2;6740:18;;;6733:30;-1:-1:-1;;;6794:2:5;6779:18;;6772:45;6849:2;6834:18;;6519:339::o;6863:127::-;6924:10;6919:3;6915:20;6912:1;6905:31;6955:4;6952:1;6945:15;6979:4;6976:1;6969:15;6995:461;7048:3;7086:5;7080:12;7113:6;7108:3;7101:19;7139:4;7168:2;7163:3;7159:12;7152:19;;7205:2;7198:5;7194:14;7226:1;7236:195;7250:6;7247:1;7244:13;7236:195;;;7315:13;;-1:-1:-1;;;;;7311:39:5;7299:52;;7371:12;;;;7406:15;;;;7347:1;7265:9;7236:195;;;-1:-1:-1;7447:3:5;;6995:461;-1:-1:-1;;;;;6995:461:5:o;7461:601::-;7779:6;7768:9;7761:25;7822:6;7817:2;7806:9;7802:18;7795:34;7865:3;7860:2;7849:9;7845:18;7838:31;7742:4;7886:57;7938:3;7927:9;7923:19;7915:6;7886:57;:::i;:::-;-1:-1:-1;;;;;7979:32:5;;;;7974:2;7959:18;;7952:60;-1:-1:-1;8043:3:5;8028:19;8021:35;7878:65;7461:601;-1:-1:-1;;;7461:601:5:o;8067:1105::-;8162:6;8193:2;8236;8224:9;8215:7;8211:23;8207:32;8204:52;;;8252:1;8249;8242:12;8204:52;8285:9;8279:16;8314:18;8355:2;8347:6;8344:14;8341:34;;;8371:1;8368;8361:12;8341:34;8409:6;8398:9;8394:22;8384:32;;8454:7;8447:4;8443:2;8439:13;8435:27;8425:55;;8476:1;8473;8466:12;8425:55;8505:2;8499:9;8527:2;8523;8520:10;8517:36;;;8533:18;;:::i;:::-;8579:2;8576:1;8572:10;8611:2;8605:9;8674:2;8670:7;8665:2;8661;8657:11;8653:25;8645:6;8641:38;8729:6;8717:10;8714:22;8709:2;8697:10;8694:18;8691:46;8688:72;;;8740:18;;:::i;:::-;8776:2;8769:22;8826:18;;;8860:15;;;;-1:-1:-1;8902:11:5;;;8898:20;;;8930:19;;;8927:39;;;8962:1;8959;8952:12;8927:39;8986:11;;;;9006:135;9022:6;9017:3;9014:15;9006:135;;;9088:10;;9076:23;;9039:12;;;;9119;;;;9006:135;;;9160:6;8067:1105;-1:-1:-1;;;;;;;;8067:1105:5:o;11241:345::-;11443:2;11425:21;;;11482:2;11462:18;;;11455:30;-1:-1:-1;;;11516:2:5;11501:18;;11494:51;11577:2;11562:18;;11241:345::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    6375,
    15477
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x966FF650 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xC78E9148 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE55E1972 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE55E1972 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xED8BA5ED EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xF1261E92 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xFEE05D62 EQ PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC78E9148 EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xD39614F4 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xDF0244B1 EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xE3E0E3EE EQ PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAFD70EB5 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xAFD70EB5 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xB6EDD06F EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0xB71CF78A EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xBD842A11 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x966FF650 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x97B7086B EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xA8C817D1 EQ PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61D5BE29 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x7303E8CD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x7303E8CD EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x8560A2F4 EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x953FB4FB EQ PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61D5BE29 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x6297597B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x63809953 EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3767E339 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3767E339 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x3AC1C863 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x510DE094 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x5C9302C9 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x8E7154A EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x22A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x212 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x212 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D0 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0xDCE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD SLOAD PUSH2 0x212 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x212 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x212 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D0 PUSH2 0x3B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0xEF2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1658 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x408 CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1888 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x448 CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1A92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x2126 JUMP JUMPDEST PUSH2 0x1ABC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x18 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x1CB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x1F0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x212 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x51C SWAP1 PUSH2 0x213F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x548 SWAP1 PUSH2 0x213F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5FB JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x5C9 JUMPI PUSH2 0x5C9 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x5F3 DUP2 PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A2 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x612 JUMPI POP DUP1 JUMPDEST PUSH2 0x637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7F702EB1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD DUP8 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xFEE05D62 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x67F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A3 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x2218 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206265206E65617220656E64206F662061756374696F6E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x62E JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x7F702EB1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0xFEE05D62 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x740 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xDC4 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E7 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH10 0x1BC16D674EC80000000 PUSH1 0x0 PUSH2 0x80E DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x229B JUMP JUMPDEST PUSH2 0x821 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND DUP5 PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x82B SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x83C DUP4 PUSH1 0x5F PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x846 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4B9B147B PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x60B29259 SWAP3 DUP5 SWAP3 PUSH4 0x973628F6 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x89B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8BF SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C9302C9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x5C9302C9 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x904 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x928 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x997 SWAP1 DUP4 PUSH2 0x2218 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH2 0x9A8 DUP4 PUSH1 0x6 PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9E7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2A SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0xA6B SWAP3 SWAP2 AND SWAP1 PUSH10 0x152D02C7E14AF67FFFFF SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAE SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0x36F31F13 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6DE63E26 SWAP1 PUSH2 0xAE1 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEE1F84C3 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xEE1F84C3 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE0 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 PUSH2 0xC2E SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH21 0x6D79F82328EA3DA61E066EBB2F889FFFFFFFFFFFF SWAP2 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0xC8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xCCE JUMPI PUSH2 0xCCE PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x3 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xCFF JUMPI PUSH2 0xCFF PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP4 DUP16 DUP5 CALLER PUSH9 0x56BC75E2D630FFFFF PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD71 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD90 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xDB8 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2419 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x3 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xE0F JUMPI PUSH2 0xE0F PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xE40 JUMPI PUSH2 0xE40 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xEA6 SWAP1 PUSH3 0xF4240 SWAP1 PUSH1 0x1 SWAP1 DUP7 SWAP1 PUSH20 0xBB3A3D4A665AB4E9D5594077163C0044D1290699 SWAP1 PUSH9 0x56BC75E2D630FFFFF SWAP1 PUSH1 0x4 ADD PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xEED SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2419 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xF50 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF1E JUMPI PUSH2 0xF1E PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xF3E JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0xF48 DUP2 PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEF7 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xF67 JUMPI POP DUP1 JUMPDEST PUSH2 0xF83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFDB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH10 0x1BC16D674EC80000000 PUSH1 0x0 PUSH2 0x1026 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1039 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND DUP5 PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x1054 DUP4 PUSH1 0x5F PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4B9B147B PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x60B29259 SWAP3 DUP5 SWAP3 PUSH4 0x973628F6 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C9302C9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x5C9302C9 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x111C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1140 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11A5 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x11AF SWAP1 DUP4 PUSH2 0x2218 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x46 PUSH2 0x11C0 DUP4 PUSH1 0x6 PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x11CA SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x11FF SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x121E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x1283 SWAP3 SWAP2 AND SWAP1 PUSH10 0x152D02C7E14AF67FFFFF SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C6 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0x36F31F13 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6DE63E26 SWAP1 PUSH2 0x12F9 SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1313 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1327 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEE1F84C3 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xEE1F84C3 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1384 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 PUSH2 0x1446 SWAP4 SWAP1 SWAP3 AND SWAP2 PUSH21 0x6D79F82328EA3DA61E066EBB2F889FFFFFFFFFFFF SWAP2 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1465 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1489 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x14A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x14E6 JUMPI PUSH2 0x14E6 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x3 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1517 JUMPI PUSH2 0x1517 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x155E SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH7 0x38D7EA4C68000 SWAP2 ADD PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A1 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP PUSH1 0x1F PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 PUSH7 0x38D7EA4C68000 DUP16 DUP5 CALLER PUSH9 0x56BC75E2D630FFFFF PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FB SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x161A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1642 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2419 JUMP JUMPDEST POP PUSH1 0x1 SWAP12 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1693 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH7 0x2386F26FC10000 SWAP1 PUSH1 0x4 ADD PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x16F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x1731 SWAP3 SWAP2 AND SWAP1 PUSH9 0x56BC75E2D63100000 SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1774 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x1790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x235A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 ADDRESS SWAP1 DUP5 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x180B SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1829 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1848 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x186C SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x1790 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x18BE SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x2710 SWAP1 PUSH1 0x4 ADD PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1901 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x191D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x195C SWAP3 SWAP2 AND SWAP1 PUSH9 0x56BC75E2D63100000 SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x197B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x199F SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x19BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x3 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x19FC JUMPI PUSH2 0x19FC PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x4 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1A2D JUMPI PUSH2 0x1A2D PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xEA6 SWAP1 PUSH2 0x2710 SWAP1 PUSH1 0x1 SWAP1 DUP7 SWAP1 PUSH20 0xBB3A3D4A665AB4E9D5594077163C0044D1290699 SWAP1 PUSH9 0x56BC75E2D630FFFFF SWAP1 PUSH1 0x4 ADD PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1AA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH2 0x1AF6 SWAP2 CALLER SWAP2 ADDRESS SWAP2 PUSH7 0x2386F26FC10000 SWAP2 ADD PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1B15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B39 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x1B55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 PUSH2 0x1B92 SWAP4 AND SWAP2 PUSH9 0x56BC75E2D63100000 SWAP2 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x1BF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x235A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x4 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1C32 JUMPI PUSH2 0x1C32 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x3 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1C63 JUMPI PUSH2 0x1C63 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x38ED1739 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x38ED1739 SWAP1 PUSH2 0xEA6 SWAP1 PUSH7 0x2386F26FC10000 SWAP1 PUSH1 0x1 SWAP1 DUP7 SWAP1 CALLER SWAP1 PUSH9 0x56BC75E2D630FFFFF SWAP1 PUSH1 0x4 ADD PUSH2 0x23DD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x22 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D36 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH10 0x1BC16D674EC80000000 PUSH1 0x0 PUSH2 0x1D5D DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP7 AND PUSH2 0x229B JUMP JUMPDEST PUSH2 0x1D70 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP8 AND DUP5 PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x1D7A SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0x1D8B DUP4 PUSH1 0x5F PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x1D95 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4B9B147B PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x60B29259 SWAP3 DUP5 SWAP3 PUSH4 0x973628F6 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C9302C9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x5C9302C9 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E77 SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1EB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EDC SWAP2 SWAP1 PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x1EE6 SWAP1 DUP4 PUSH2 0x2218 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH2 0x1EF7 DUP4 PUSH1 0x6 PUSH2 0x22B3 JUMP JUMPDEST PUSH2 0x1F01 SWAP2 SWAP1 PUSH2 0x22D2 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1F6B JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F39 JUMPI PUSH2 0x1F39 PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1F59 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1F63 DUP2 PUSH2 0x21A0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F12 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0x1F82 JUMPI POP DUP1 JUMPDEST PUSH2 0x1F9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x20 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH2 0x1FDE SWAP3 SWAP2 AND SWAP1 PUSH10 0x152D02C7E14AF67FFFFF SWAP1 PUSH1 0x4 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2021 SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 PUSH2 0x2068 SWAP4 AND SWAP2 PUSH18 0xB7ABC627050305ADF14A3D9E3FFFFFFFFFF SWAP2 ADD PUSH2 0x2341 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2087 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20AB SWAP2 SWAP1 PUSH2 0x2318 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x20DC JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x20C0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2153 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1652 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x21B4 JUMPI PUSH2 0x21B4 PUSH2 0x218A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0xBDB5BD9 PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x222A JUMPI PUSH2 0x222A PUSH2 0x218A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2269 DUP5 PUSH2 0x222F JUMP JUMPDEST SWAP3 POP PUSH2 0x2277 PUSH1 0x20 DUP6 ADD PUSH2 0x222F JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AE PUSH2 0x218A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x22CD JUMPI PUSH2 0x22CD PUSH2 0x218A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x22EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x232A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x233A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x30B8383937BB32903330B4B632B217 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23D2 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x23AD JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x23FC PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x2399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x242C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x246A JUMPI PUSH2 0x246A PUSH2 0x2383 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x248F JUMPI PUSH2 0x248F PUSH2 0x2383 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0x24AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x24CB JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x24B2 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x3A3930B739B332B9233937B699103330B4B632B217 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xD1 0x2A RETURNDATASIZE 0xAB 0xFB DUP6 0x4E 0xC8 ADD DUP1 DIFFICULTY 0xF6 DUP1 0xEB 0xDA SWAP10 BALANCE DUP15 PUSH26 0x718089E4DE9E5AC2F5822FFA64736F6C634300080B0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C2"
    },
    "12": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x966FF650"
    },
    "25": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF7"
    },
    "29": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC78E9148"
    },
    "36": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95"
    },
    "40": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE55E1972"
    },
    "47": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE55E1972"
    },
    "58": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AF"
    },
    "62": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xED8BA5ED"
    },
    "69": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C4"
    },
    "73": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF1261E92"
    },
    "80": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D9"
    },
    "84": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEE05D62"
    },
    "91": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F9"
    },
    "95": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "96": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "100": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC78E9148"
    },
    "107": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44D"
    },
    "111": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD39614F4"
    },
    "118": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x46D"
    },
    "122": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDF0244B1"
    },
    "129": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x483"
    },
    "133": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE3E0E3EE"
    },
    "140": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "144": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "149": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "150": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAFD70EB5"
    },
    "156": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1"
    },
    "160": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "161": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xAFD70EB5"
    },
    "167": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "168": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CD"
    },
    "171": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "172": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB6EDD06F"
    },
    "178": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ED"
    },
    "182": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "183": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "184": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB71CF78A"
    },
    "189": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x40D"
    },
    "193": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "194": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "195": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBD842A11"
    },
    "200": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42D"
    },
    "204": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "205": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "207": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "209": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "210": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x966FF650"
    },
    "216": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "217": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x38E"
    },
    "220": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x97B7086B"
    },
    "227": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "228": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A4"
    },
    "231": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "232": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "233": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA8C817D1"
    },
    "238": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "239": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B7"
    },
    "242": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "243": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "245": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "247": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "248": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "249": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x61D5BE29"
    },
    "254": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "255": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x164"
    },
    "258": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "259": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "260": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7303E8CD"
    },
    "265": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "266": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E"
    },
    "269": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "270": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "271": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7303E8CD"
    },
    "276": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "277": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x318"
    },
    "280": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "281": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "282": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8560A2F4"
    },
    "287": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "288": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32E"
    },
    "291": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "292": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "293": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "298": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "299": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34E"
    },
    "302": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "303": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "304": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x953FB4FB"
    },
    "309": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "310": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36E"
    },
    "313": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "314": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "316": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "318": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "319": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "320": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x61D5BE29"
    },
    "325": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "326": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B0"
    },
    "329": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "330": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "331": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6297597B"
    },
    "336": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "337": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E0"
    },
    "340": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "341": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "342": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x63809953"
    },
    "347": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "348": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "351": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "352": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "354": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "355": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "356": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "357": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "358": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3767E339"
    },
    "363": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "GT",
      "path": "3"
    },
    "364": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A0"
    },
    "367": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "368": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "369": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3767E339"
    },
    "374": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "375": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E"
    },
    "378": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "379": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "380": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3AC1C863"
    },
    "385": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "386": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x264"
    },
    "389": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "390": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "391": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x510DE094"
    },
    "396": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "397": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27A"
    },
    "400": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "401": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "402": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5C9302C9"
    },
    "407": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "408": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29A"
    },
    "411": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "412": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "414": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "416": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "417": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "418": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "423": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "424": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C7"
    },
    "427": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "428": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "429": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8E7154A"
    },
    "434": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "435": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2"
    },
    "438": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "439": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "440": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x313CE567"
    },
    "445": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "EQ",
      "path": "3"
    },
    "446": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22A"
    },
    "449": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "450": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "451": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "453": {
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "DUP1",
      "path": "3"
    },
    "454": {
      "first_revert": true,
      "fn": null,
      "offset": [
        6375,
        15477
      ],
      "op": "REVERT",
      "path": "3"
    },
    "455": {
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "456": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "457": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "458": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "459": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D3"
    },
    "462": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "463": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "465": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "466": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "REVERT",
      "path": "3"
    },
    "467": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "468": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "POP",
      "path": "3"
    },
    "469": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DC"
    },
    "472": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x50F"
    },
    "475": {
      "fn": null,
      "jump": "i",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "476": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "477": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "479": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "480": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "483": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "484": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "485": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20AF"
    },
    "488": {
      "fn": null,
      "jump": "i",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "489": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "490": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "492": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "493": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "494": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "495": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "SUB",
      "path": "3"
    },
    "496": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "497": {
      "fn": null,
      "offset": [
        6741,
        6759
      ],
      "op": "RETURN",
      "path": "3"
    },
    "498": {
      "offset": [
        7010,
        7039
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "499": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "500": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "DUP1",
      "path": "3"
    },
    "501": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "502": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FE"
    },
    "505": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "506": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "508": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "DUP1",
      "path": "3"
    },
    "509": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "REVERT",
      "path": "3"
    },
    "510": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "511": {
      "op": "POP"
    },
    "512": {
      "offset": [
        7010,
        7039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF"
    },
    "514": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "515": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "518": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "SUB"
    },
    "527": {
      "offset": [
        7010,
        7039
      ],
      "op": "AND",
      "path": "3"
    },
    "528": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "DUP2",
      "path": "3"
    },
    "529": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "JUMP",
      "path": "3"
    },
    "530": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "531": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "533": {
      "fn": null,
      "offset": [
        7010,
        7039
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "540": {
      "op": "SHL"
    },
    "541": {
      "op": "SUB"
    },
    "542": {
      "op": "SWAP1"
    },
    "543": {
      "op": "SWAP2"
    },
    "544": {
      "op": "AND"
    },
    "545": {
      "op": "DUP2"
    },
    "546": {
      "op": "MSTORE"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "549": {
      "op": "ADD"
    },
    "550": {
      "offset": [
        7010,
        7039
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "553": {
      "op": "JUMP"
    },
    "554": {
      "offset": [
        6765,
        6785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "555": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "556": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "557": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "558": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x236"
    },
    "561": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "562": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "564": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "565": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "REVERT",
      "path": "3"
    },
    "566": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "567": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "POP",
      "path": "3"
    },
    "568": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "571": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "573": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "574": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "575": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "JUMP",
      "path": "3"
    },
    "576": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "577": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "579": {
      "fn": null,
      "offset": [
        6765,
        6785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "580": {
      "op": "SWAP1"
    },
    "581": {
      "op": "DUP2"
    },
    "582": {
      "op": "MSTORE"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "585": {
      "op": "ADD"
    },
    "586": {
      "offset": [
        6765,
        6785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "589": {
      "op": "JUMP"
    },
    "590": {
      "offset": [
        6593,
        6616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "591": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "592": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "DUP1",
      "path": "3"
    },
    "593": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "594": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A"
    },
    "597": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "598": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "600": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "DUP1",
      "path": "3"
    },
    "601": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "REVERT",
      "path": "3"
    },
    "602": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "603": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "POP",
      "path": "3"
    },
    "604": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "607": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "609": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "610": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "DUP2",
      "path": "3"
    },
    "611": {
      "fn": null,
      "offset": [
        6593,
        6616
      ],
      "op": "JUMP",
      "path": "3"
    },
    "612": {
      "offset": [
        7201,
        7223
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "613": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "614": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "DUP1",
      "path": "3"
    },
    "615": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "616": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x270"
    },
    "619": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "620": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "622": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "DUP1",
      "path": "3"
    },
    "623": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "REVERT",
      "path": "3"
    },
    "624": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "625": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "POP",
      "path": "3"
    },
    "626": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "629": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "631": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "632": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "DUP2",
      "path": "3"
    },
    "633": {
      "fn": null,
      "offset": [
        7201,
        7223
      ],
      "op": "JUMP",
      "path": "3"
    },
    "634": {
      "offset": [
        6494,
        6524
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "635": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "636": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "DUP1",
      "path": "3"
    },
    "637": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "638": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286"
    },
    "641": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "642": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "644": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "DUP1",
      "path": "3"
    },
    "645": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "REVERT",
      "path": "3"
    },
    "646": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "647": {
      "op": "POP"
    },
    "648": {
      "offset": [
        6494,
        6524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "650": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "651": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "654": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "SUB"
    },
    "663": {
      "offset": [
        6494,
        6524
      ],
      "op": "AND",
      "path": "3"
    },
    "664": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "665": {
      "fn": null,
      "offset": [
        6494,
        6524
      ],
      "op": "JUMP",
      "path": "3"
    },
    "666": {
      "offset": [
        7173,
        7195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "667": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "668": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "DUP1",
      "path": "3"
    },
    "669": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "670": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6"
    },
    "673": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "674": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "676": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "DUP1",
      "path": "3"
    },
    "677": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "REVERT",
      "path": "3"
    },
    "678": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "679": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "POP",
      "path": "3"
    },
    "680": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "683": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x13"
    },
    "685": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "686": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "DUP2",
      "path": "3"
    },
    "687": {
      "fn": null,
      "offset": [
        7173,
        7195
      ],
      "op": "JUMP",
      "path": "3"
    },
    "688": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "689": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "690": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "691": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "692": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "695": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "696": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "698": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "699": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "REVERT",
      "path": "3"
    },
    "700": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D0"
    },
    "705": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CB"
    },
    "708": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "709": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "711": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2104"
    },
    "714": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMP",
      "path": "3"
    },
    "715": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "716": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59D"
    },
    "719": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMP",
      "path": "3"
    },
    "720": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "721": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "723": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "724": {
      "op": "SWAP1"
    },
    "725": {
      "op": "ISZERO"
    },
    "726": {
      "op": "ISZERO"
    },
    "727": {
      "op": "DUP2"
    },
    "728": {
      "op": "MSTORE"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "731": {
      "op": "ADD"
    },
    "732": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E9"
    },
    "735": {
      "op": "JUMP"
    },
    "736": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "737": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "738": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "739": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "740": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EC"
    },
    "743": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "744": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "746": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "747": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "REVERT",
      "path": "3"
    },
    "748": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "749": {
      "op": "POP"
    },
    "750": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300"
    },
    "753": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2FB"
    },
    "756": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "757": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "759": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "762": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "i",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMP",
      "path": "3"
    },
    "763": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "764": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDCE"
    },
    "767": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "i",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMP",
      "path": "3"
    },
    "768": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "769": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "STOP",
      "path": "3"
    },
    "770": {
      "offset": [
        7225,
        7250
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "771": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "772": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "DUP1",
      "path": "3"
    },
    "773": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "774": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30E"
    },
    "777": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "778": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "780": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "DUP1",
      "path": "3"
    },
    "781": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "REVERT",
      "path": "3"
    },
    "782": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "783": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "POP",
      "path": "3"
    },
    "784": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "787": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x15"
    },
    "789": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "790": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "DUP2",
      "path": "3"
    },
    "791": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7225,
        7250
      ],
      "op": "JUMP",
      "path": "3"
    },
    "792": {
      "offset": [
        7045,
        7083
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "793": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "794": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "DUP1",
      "path": "3"
    },
    "795": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "796": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x324"
    },
    "799": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "800": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "802": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "DUP1",
      "path": "3"
    },
    "803": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "REVERT",
      "path": "3"
    },
    "804": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "805": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "POP",
      "path": "3"
    },
    "806": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "809": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x10"
    },
    "811": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "812": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "DUP2",
      "path": "3"
    },
    "813": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7045,
        7083
      ],
      "op": "JUMP",
      "path": "3"
    },
    "814": {
      "offset": [
        6933,
        6969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "815": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "816": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "DUP1",
      "path": "3"
    },
    "817": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "818": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33A"
    },
    "821": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "822": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "824": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "DUP1",
      "path": "3"
    },
    "825": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "REVERT",
      "path": "3"
    },
    "826": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "offset": [
        6933,
        6969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xD"
    },
    "830": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "831": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "834": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "841": {
      "op": "SHL"
    },
    "842": {
      "op": "SUB"
    },
    "843": {
      "offset": [
        6933,
        6969
      ],
      "op": "AND",
      "path": "3"
    },
    "844": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "DUP2",
      "path": "3"
    },
    "845": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6933,
        6969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "846": {
      "offset": [
        117,
        137
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "847": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "848": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "DUP1",
      "path": "3"
    },
    "849": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "850": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35A"
    },
    "853": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "854": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "856": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "DUP1",
      "path": "3"
    },
    "857": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "REVERT",
      "path": "3"
    },
    "858": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "859": {
      "op": "POP"
    },
    "860": {
      "offset": [
        117,
        137
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "862": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "863": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "866": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "op": "SUB"
    },
    "875": {
      "offset": [
        117,
        137
      ],
      "op": "AND",
      "path": "3"
    },
    "876": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "DUP2",
      "path": "3"
    },
    "877": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        117,
        137
      ],
      "op": "JUMP",
      "path": "3"
    },
    "878": {
      "offset": [
        6975,
        7004
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "879": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "880": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "DUP1",
      "path": "3"
    },
    "881": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "882": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37A"
    },
    "885": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "886": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "888": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "DUP1",
      "path": "3"
    },
    "889": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "REVERT",
      "path": "3"
    },
    "890": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "891": {
      "op": "POP"
    },
    "892": {
      "offset": [
        6975,
        7004
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE"
    },
    "894": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "895": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "898": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "offset": [
        6975,
        7004
      ],
      "op": "AND",
      "path": "3"
    },
    "908": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "DUP2",
      "path": "3"
    },
    "909": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        6975,
        7004
      ],
      "op": "JUMP",
      "path": "3"
    },
    "910": {
      "offset": [
        7285,
        7307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "911": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "912": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "DUP1",
      "path": "3"
    },
    "913": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "914": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x39A"
    },
    "917": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "918": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "920": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "DUP1",
      "path": "3"
    },
    "921": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "REVERT",
      "path": "3"
    },
    "922": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "923": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "POP",
      "path": "3"
    },
    "924": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "927": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x17"
    },
    "929": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "930": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "DUP2",
      "path": "3"
    },
    "931": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        7285,
        7307
      ],
      "op": "JUMP",
      "path": "3"
    },
    "932": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "933": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D0"
    },
    "936": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B2"
    },
    "939": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "940": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "942": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "945": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        13546,
        15455
      ],
      "op": "JUMP",
      "path": "3"
    },
    "946": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "947": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF2"
    },
    "950": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        13546,
        15455
      ],
      "op": "JUMP",
      "path": "3"
    },
    "951": {
      "offset": [
        7335,
        7366
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "952": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "953": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "DUP1",
      "path": "3"
    },
    "954": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "955": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C3"
    },
    "958": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "959": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "961": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "DUP1",
      "path": "3"
    },
    "962": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "REVERT",
      "path": "3"
    },
    "963": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "964": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "POP",
      "path": "3"
    },
    "965": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "968": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x19"
    },
    "970": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "971": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "DUP2",
      "path": "3"
    },
    "972": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        7335,
        7366
      ],
      "op": "JUMP",
      "path": "3"
    },
    "973": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "974": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "975": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "976": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "977": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3D9"
    },
    "980": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "981": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "983": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "984": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "REVERT",
      "path": "3"
    },
    "985": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300"
    },
    "990": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E8"
    },
    "993": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "994": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "996": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "999": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1000": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1001": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1658"
    },
    "1004": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1005": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1006": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1007": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1008": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1009": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F9"
    },
    "1012": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1013": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1015": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1016": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1017": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300"
    },
    "1022": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x408"
    },
    "1025": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1026": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1028": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "1031": {
      "fn": "ForgeZap.OneTeste0",
      "jump": "i",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1032": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1033": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1793"
    },
    "1036": {
      "fn": "ForgeZap.OneTeste0",
      "jump": "i",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1037": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1038": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1039": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1040": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1041": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x419"
    },
    "1044": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1045": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1047": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1048": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1049": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300"
    },
    "1054": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x428"
    },
    "1057": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1058": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1060": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "1063": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1064": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1065": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1888"
    },
    "1068": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1069": {
      "offset": [
        143,
        171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1070": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1071": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1072": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1073": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x439"
    },
    "1076": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1077": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1079": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1080": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1081": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "offset": [
        143,
        171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "1086": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x448"
    },
    "1089": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1090": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1092": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "1095": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        143,
        171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1096": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1097": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A92"
    },
    "1100": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        143,
        171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1101": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1102": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1103": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1104": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1105": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x459"
    },
    "1108": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1109": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1111": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1112": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1113": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1114": {
      "op": "POP"
    },
    "1115": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300"
    },
    "1118": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x468"
    },
    "1121": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1122": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1124": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2126"
    },
    "1127": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1128": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1129": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ABC"
    },
    "1132": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1133": {
      "offset": [
        7115,
        7138
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1134": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1135": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1136": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1137": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x479"
    },
    "1140": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1141": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1143": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1144": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1145": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1146": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "POP",
      "path": "3"
    },
    "1147": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "1150": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x11"
    },
    "1152": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1153": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1154": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7115,
        7138
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1155": {
      "offset": [
        7309,
        7333
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1156": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1157": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1158": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1159": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48F"
    },
    "1162": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1163": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1165": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1166": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1167": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1168": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "POP",
      "path": "3"
    },
    "1169": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "1172": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x18"
    },
    "1174": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1175": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1176": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7309,
        7333
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1177": {
      "offset": [
        7144,
        7171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1178": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1179": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1180": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1181": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4A5"
    },
    "1184": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1185": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1187": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1188": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1189": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1190": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "POP",
      "path": "3"
    },
    "1191": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "1194": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1196": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1197": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1198": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        7144,
        7171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1199": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1200": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1201": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1202": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1203": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BB"
    },
    "1206": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1207": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1209": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1210": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1211": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "POP",
      "path": "3"
    },
    "1213": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "1216": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CB9"
    },
    "1219": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        10561,
        11367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1220": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1221": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1222": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1223": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1224": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4D0"
    },
    "1227": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1228": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1230": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1231": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1232": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1233": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "POP",
      "path": "3"
    },
    "1234": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x300"
    },
    "1237": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F0E"
    },
    "1240": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        11369,
        11609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1241": {
      "offset": [
        6530,
        6562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1242": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1243": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1244": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1245": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E5"
    },
    "1248": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1249": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1251": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1252": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1253": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1254": {
      "op": "POP"
    },
    "1255": {
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1257": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1258": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x212"
    },
    "1261": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "offset": [
        6530,
        6562
      ],
      "op": "AND",
      "path": "3"
    },
    "1271": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1272": {
      "fn": "ForgeZap.approes",
      "offset": [
        6530,
        6562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1273": {
      "offset": [
        7256,
        7279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1274": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1275": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1276": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1277": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x505"
    },
    "1280": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1281": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1283": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1284": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1285": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1286": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "POP",
      "path": "3"
    },
    "1287": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "1290": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x16"
    },
    "1292": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1293": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1294": {
      "fn": "ForgeZap.approes",
      "offset": [
        7256,
        7279
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1295": {
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1296": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1298": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1299": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1300": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x51C"
    },
    "1303": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1304": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x213F"
    },
    "1307": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1308": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1309": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1310": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1312": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1313": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1315": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1316": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1317": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DIV",
      "path": "3"
    },
    "1318": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MUL",
      "path": "3"
    },
    "1319": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1321": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1322": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1324": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1325": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1326": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1327": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1328": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1330": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1331": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1332": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1333": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1334": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1335": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1336": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1337": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1338": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1340": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1341": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1342": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1343": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1344": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x548"
    },
    "1347": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1348": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x213F"
    },
    "1351": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1352": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1353": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1354": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1355": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x595"
    },
    "1358": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1359": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1360": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1362": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "LT",
      "path": "3"
    },
    "1363": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56A"
    },
    "1366": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1367": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1370": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1371": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1372": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1373": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DIV",
      "path": "3"
    },
    "1374": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MUL",
      "path": "3"
    },
    "1375": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1376": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1377": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1378": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1380": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1381": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1382": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x595"
    },
    "1385": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1386": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1387": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1388": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1389": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1390": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1391": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1393": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1394": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1396": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1398": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1399": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1400": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1401": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1402": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1403": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1404": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1405": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1406": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1408": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1409": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1410": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1412": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1413": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1414": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1415": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "GT",
      "path": "3"
    },
    "1416": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x578"
    },
    "1419": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1420": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1421": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1422": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SUB",
      "path": "3"
    },
    "1423": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1425": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "AND",
      "path": "3"
    },
    "1426": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1427": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "ADD",
      "path": "3"
    },
    "1428": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1429": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1430": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "POP",
      "path": "3"
    },
    "1431": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "POP",
      "path": "3"
    },
    "1432": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "POP",
      "path": "3"
    },
    "1433": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "POP",
      "path": "3"
    },
    "1434": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "POP",
      "path": "3"
    },
    "1435": {
      "fn": "ForgeZap.approes",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1436": {
      "fn": "ForgeZap.approes",
      "jump": "o",
      "offset": [
        6741,
        6759
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1437": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1438": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11702,
        11714
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1440": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11702,
        11714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1441": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11702,
        11714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1442": {
      "offset": [
        585,
        694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1443": {
      "offset": [
        602,
        612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1445": {
      "offset": [
        602,
        619
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1446": {
      "offset": [
        599,
        619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1447": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        599,
        619
      ],
      "op": "LT",
      "path": "3"
    },
    "1448": {
      "offset": [
        585,
        694
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1449": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        585,
        694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5FB"
    },
    "1452": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        585,
        694
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1453": {
      "offset": [
        652,
        662
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "offset": [
        635,
        662
      ],
      "op": "AND",
      "path": "3"
    },
    "1463": {
      "offset": [
        635,
        645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1465": {
      "offset": [
        646,
        647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1466": {
      "offset": [
        635,
        648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1467": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1468": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1469": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "LT",
      "path": "3"
    },
    "1470": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C9"
    },
    "1473": {
      "offset": [
        635,
        648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1474": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C9"
    },
    "1477": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "1480": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        635,
        648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1481": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1482": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1484": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1485": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1486": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1487": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1489": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1490": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1491": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1492": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "ADD",
      "path": "3"
    },
    "1493": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        635,
        648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "SUB"
    },
    "1502": {
      "offset": [
        635,
        648
      ],
      "op": "AND",
      "path": "3"
    },
    "1503": {
      "offset": [
        635,
        662
      ],
      "op": "EQ",
      "path": "3"
    },
    "1504": {
      "offset": [
        632,
        690
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1505": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        632,
        690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E9"
    },
    "1508": {
      "offset": [
        632,
        690
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1509": {
      "offset": [
        681,
        685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1511": {
      "offset": [
        667,
        685
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1512": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        667,
        685
      ],
      "op": "POP",
      "path": "3"
    },
    "1513": {
      "offset": [
        632,
        690
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1514": {
      "offset": [
        621,
        624
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1515": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F3"
    },
    "1518": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1519": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A0"
    },
    "1522": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        621,
        624
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1523": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1524": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1525": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "POP",
      "path": "3"
    },
    "1526": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        621,
        624
      ],
      "op": "POP",
      "path": "3"
    },
    "1527": {
      "offset": [
        585,
        694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A2"
    },
    "1530": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        585,
        694
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1531": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        585,
        694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "offset": [
        725,
        730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1535": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        725,
        730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "offset": [
        725,
        730
      ],
      "op": "AND",
      "path": "3"
    },
    "1545": {
      "offset": [
        711,
        721
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1546": {
      "offset": [
        711,
        730
      ],
      "op": "EQ",
      "path": "3"
    },
    "1547": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        711,
        730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1548": {
      "offset": [
        711,
        745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x612"
    },
    "1551": {
      "offset": [
        711,
        745
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1552": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        711,
        745
      ],
      "op": "POP",
      "path": "3"
    },
    "1553": {
      "offset": [
        734,
        745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1554": {
      "offset": [
        711,
        745
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1555": {
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x637"
    },
    "1558": {
      "offset": [
        703,
        786
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1559": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1561": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1562": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1568": {
      "op": "SHL"
    },
    "1569": {
      "offset": [
        703,
        786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1570": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1571": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1573": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "ADD",
      "path": "3"
    },
    "1574": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "1577": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1578": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21BB"
    },
    "1581": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        703,
        786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1582": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1583": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1585": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1586": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1587": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1588": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "SUB",
      "path": "3"
    },
    "1589": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1590": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "1591": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        703,
        786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1592": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x20"
    },
    "1594": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1595": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1596": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1598": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1599": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1600": {
      "op": "PUSH4",
      "value": "0x7F702EB1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1609": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1610": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1611": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1612": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11792,
        11798
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1613": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11792,
        11798
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1623": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1624": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "AND",
      "path": "3"
    },
    "1625": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1626": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11787
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEE05D62"
    },
    "1631": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11787
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1632": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1634": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1635": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1636": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "1637": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1638": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1639": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1640": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1641": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SUB",
      "path": "3"
    },
    "1642": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "1643": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1644": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11775
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1645": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "GAS",
      "path": "3"
    },
    "1646": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1647": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1648": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1649": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1650": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67F"
    },
    "1653": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1654": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1655": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1657": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1658": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1659": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1660": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1662": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1663": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1664": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "POP",
      "path": "3"
    },
    "1665": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "POP",
      "path": "3"
    },
    "1666": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "POP",
      "path": "3"
    },
    "1667": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "POP",
      "path": "3"
    },
    "1668": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1670": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1671": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1672": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1674": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "NOT",
      "path": "3"
    },
    "1675": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1677": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1678": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "1679": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "AND",
      "path": "3"
    },
    "1680": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1681": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "1682": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1683": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1685": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1686": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "POP",
      "path": "3"
    },
    "1687": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1688": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "ADD",
      "path": "3"
    },
    "1689": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1690": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6A3"
    },
    "1693": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1694": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1695": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "1698": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        11762,
        11789
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1699": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11789
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1700": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6AD"
    },
    "1703": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11798
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1704": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1705": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2218"
    },
    "1708": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        11762,
        11798
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1709": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11762,
        11798
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1710": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11744,
        11759
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1711": {
      "branch": 41,
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11744,
        11798
      ],
      "op": "GT",
      "path": "3"
    },
    "1712": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6FB"
    },
    "1715": {
      "branch": 41,
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1716": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1718": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1727": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1730": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1732": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1733": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "ADD",
      "path": "3"
    },
    "1734": {
      "op": "MSTORE"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1739": {
      "op": "DUP3"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "MSTORE"
    },
    "1742": {
      "op": "PUSH32",
      "value": "0x4D757374206265206E65617220656E64206F662061756374696F6E0000000000"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1777": {
      "op": "DUP3"
    },
    "1778": {
      "op": "ADD"
    },
    "1779": {
      "op": "MSTORE"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1782": {
      "op": "ADD"
    },
    "1783": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "1786": {
      "op": "JUMP"
    },
    "1787": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11736,
        11830
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1788": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1790": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1791": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1792": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1794": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1795": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1796": {
      "op": "PUSH4",
      "value": "0x7F702EB1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1803": {
      "op": "SHL"
    },
    "1804": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1805": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1806": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1807": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "op": "SUB"
    },
    "1816": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1817": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1818": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "AND",
      "path": "3"
    },
    "1819": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1820": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11886
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEE05D62"
    },
    "1825": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11886
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1826": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1828": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1829": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1830": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ADD",
      "path": "3"
    },
    "1831": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1832": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1833": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1834": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SUB",
      "path": "3"
    },
    "1835": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ADD",
      "path": "3"
    },
    "1836": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1837": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11874
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1838": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "GAS",
      "path": "3"
    },
    "1839": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1840": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1841": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1842": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1843": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x740"
    },
    "1846": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1847": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1848": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1850": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1851": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1852": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1853": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1855": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1856": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1857": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "POP",
      "path": "3"
    },
    "1858": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "POP",
      "path": "3"
    },
    "1859": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "POP",
      "path": "3"
    },
    "1860": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "POP",
      "path": "3"
    },
    "1861": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1863": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1864": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1865": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1867": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "NOT",
      "path": "3"
    },
    "1868": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1870": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1871": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ADD",
      "path": "3"
    },
    "1872": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "AND",
      "path": "3"
    },
    "1873": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1874": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ADD",
      "path": "3"
    },
    "1875": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1876": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1878": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1879": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "POP",
      "path": "3"
    },
    "1880": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1881": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "ADD",
      "path": "3"
    },
    "1882": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1883": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x764"
    },
    "1886": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1887": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1888": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "1891": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        11861,
        11888
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1892": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11861,
        11888
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1893": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11843,
        11858
      ],
      "op": "TIMESTAMP",
      "path": "3"
    },
    "1894": {
      "branch": 42,
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11843,
        11888
      ],
      "op": "GT",
      "path": "3"
    },
    "1895": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11840,
        13505
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1896": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11840,
        13505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "1899": {
      "branch": 42,
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11840,
        13505
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1900": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11904,
        11921
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1902": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11964,
        11981
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1903": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12004,
        12030
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1905": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x22"
    },
    "1907": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1909": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1910": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1911": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1912": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "1915": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "EXP",
      "path": "3"
    },
    "1916": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1917": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "DIV",
      "path": "3"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1924": {
      "op": "SHL"
    },
    "1925": {
      "op": "SUB"
    },
    "1926": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12093
      ],
      "op": "AND",
      "path": "3"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1933": {
      "op": "SHL"
    },
    "1934": {
      "op": "SUB"
    },
    "1935": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12105
      ],
      "op": "AND",
      "path": "3"
    },
    "1936": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12105
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x902F1AC"
    },
    "1941": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1943": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1944": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1945": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1950": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "AND",
      "path": "3"
    },
    "1951": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "1953": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "SHL",
      "path": "3"
    },
    "1954": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1955": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1956": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1958": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "ADD",
      "path": "3"
    },
    "1959": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1961": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1963": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1964": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1965": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1966": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "SUB",
      "path": "3"
    },
    "1967": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1968": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1969": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "GAS",
      "path": "3"
    },
    "1970": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1971": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1972": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1973": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1974": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7C3"
    },
    "1977": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1978": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1979": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1981": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1982": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1983": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1984": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1986": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1987": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1988": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "POP",
      "path": "3"
    },
    "1989": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "POP",
      "path": "3"
    },
    "1990": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "POP",
      "path": "3"
    },
    "1991": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "POP",
      "path": "3"
    },
    "1992": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1994": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1995": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1996": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1998": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "NOT",
      "path": "3"
    },
    "1999": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2001": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2002": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "ADD",
      "path": "3"
    },
    "2003": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "AND",
      "path": "3"
    },
    "2004": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2005": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "ADD",
      "path": "3"
    },
    "2006": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2007": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2009": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2010": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "POP",
      "path": "3"
    },
    "2011": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2012": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "ADD",
      "path": "3"
    },
    "2013": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2014": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7E7"
    },
    "2017": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2018": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2019": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x224B"
    },
    "2022": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12090,
        12107
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2023": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12090,
        12107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2024": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12044,
        12107
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2025": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12044,
        12107
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12044,
        12107
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12044,
        12107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12153,
        12168
      ],
      "op": "PUSH10",
      "path": "3",
      "value": "0x1BC16D674EC80000000"
    },
    "2042": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12136,
        12150
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2044": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12234,
        12252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x80E"
    },
    "2047": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12153,
        12168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12234,
        12252
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2057": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12234,
        12252
      ],
      "op": "AND",
      "path": "3"
    },
    "2058": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12234,
        12252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229B"
    },
    "2061": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12234,
        12252
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2062": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12234,
        12252
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2063": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12210,
        12228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x821"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2070": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2072": {
      "op": "SHL"
    },
    "2073": {
      "op": "SUB"
    },
    "2074": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12210,
        12228
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2075": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12210,
        12228
      ],
      "op": "AND",
      "path": "3"
    },
    "2076": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12210,
        12216
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2077": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12210,
        12228
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "2080": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12210,
        12228
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2081": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12210,
        12228
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2082": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12209,
        12253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x82B"
    },
    "2085": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12209,
        12253
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2086": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12209,
        12253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2087": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12209,
        12253
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "2090": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12209,
        12253
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2091": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12209,
        12253
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2092": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12182,
        12253
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2093": {
      "op": "POP"
    },
    "2094": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12267,
        12290
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2096": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12317,
        12320
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2098": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x83C"
    },
    "2101": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12182,
        12253
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2102": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12312,
        12314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5F"
    },
    "2104": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "2107": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12293,
        12314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2108": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2109": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12320
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x846"
    },
    "2112": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12320
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2113": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12320
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2114": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12320
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "2117": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12293,
        12320
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2118": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12293,
        12320
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2119": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2121": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2122": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2123": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2125": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2126": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2127": {
      "op": "PUSH4",
      "value": "0x4B9B147B"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2134": {
      "op": "SHL"
    },
    "2135": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2136": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2137": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2138": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2139": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12267,
        12320
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2140": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12267,
        12320
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12413,
        12435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2144": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12413,
        12435
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2151": {
      "op": "SHL"
    },
    "2152": {
      "op": "SUB"
    },
    "2153": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2154": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2155": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "AND",
      "path": "3"
    },
    "2156": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2157": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12485
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x60B29259"
    },
    "2162": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12485
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2163": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2164": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2165": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12510
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x973628F6"
    },
    "2170": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12510
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2171": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2173": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2174": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2175": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ADD",
      "path": "3"
    },
    "2176": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2177": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2178": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2179": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2180": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2181": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SUB",
      "path": "3"
    },
    "2182": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ADD",
      "path": "3"
    },
    "2183": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2184": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12469
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2185": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "GAS",
      "path": "3"
    },
    "2186": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2187": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2188": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2189": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2190": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89B"
    },
    "2193": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2194": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2195": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2197": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2198": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2199": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2200": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2202": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2203": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2204": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "POP",
      "path": "3"
    },
    "2205": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "POP",
      "path": "3"
    },
    "2206": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "POP",
      "path": "3"
    },
    "2207": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "POP",
      "path": "3"
    },
    "2208": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2210": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2211": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2212": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2214": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "NOT",
      "path": "3"
    },
    "2215": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2217": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2218": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ADD",
      "path": "3"
    },
    "2219": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "AND",
      "path": "3"
    },
    "2220": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2221": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ADD",
      "path": "3"
    },
    "2222": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2223": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2225": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2226": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "POP",
      "path": "3"
    },
    "2227": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2228": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "ADD",
      "path": "3"
    },
    "2229": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2230": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8BF"
    },
    "2233": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2234": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2235": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "2238": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12486,
        12512
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2239": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12486,
        12512
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2240": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2242": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2243": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2244": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2246": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2247": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2248": {
      "op": "PUSH4",
      "value": "0x5C9302C9"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2255": {
      "op": "SHL"
    },
    "2256": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2257": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2258": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2259": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "op": "SUB"
    },
    "2268": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2269": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2270": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "AND",
      "path": "3"
    },
    "2271": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2272": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12538
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5C9302C9"
    },
    "2277": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12538
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2278": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2280": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2281": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2282": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ADD",
      "path": "3"
    },
    "2283": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2284": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2285": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2286": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SUB",
      "path": "3"
    },
    "2287": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ADD",
      "path": "3"
    },
    "2288": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2289": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12527
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2290": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "GAS",
      "path": "3"
    },
    "2291": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2292": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2293": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2294": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2295": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x904"
    },
    "2298": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2299": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2300": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2302": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2303": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2304": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2305": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2307": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2308": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2309": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "POP",
      "path": "3"
    },
    "2310": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "POP",
      "path": "3"
    },
    "2311": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "POP",
      "path": "3"
    },
    "2312": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "POP",
      "path": "3"
    },
    "2313": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2315": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2316": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2317": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2319": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "NOT",
      "path": "3"
    },
    "2320": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2322": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2323": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ADD",
      "path": "3"
    },
    "2324": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "AND",
      "path": "3"
    },
    "2325": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2326": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ADD",
      "path": "3"
    },
    "2327": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2328": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2330": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2331": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "POP",
      "path": "3"
    },
    "2332": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2333": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "ADD",
      "path": "3"
    },
    "2334": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2335": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x928"
    },
    "2338": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2339": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2340": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "2343": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12514,
        12540
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2344": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12514,
        12540
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2345": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2347": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2354": {
      "op": "SHL"
    },
    "2355": {
      "op": "SUB"
    },
    "2356": {
      "op": "NOT"
    },
    "2357": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2359": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2360": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2361": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "SHL",
      "path": "3"
    },
    "2362": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "AND",
      "path": "3"
    },
    "2363": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2364": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2365": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2367": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2368": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "ADD",
      "path": "3"
    },
    "2369": {
      "op": "SWAP3"
    },
    "2370": {
      "op": "SWAP1"
    },
    "2371": {
      "op": "SWAP3"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2375": {
      "op": "DUP3"
    },
    "2376": {
      "op": "ADD"
    },
    "2377": {
      "op": "MSTORE"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2380": {
      "op": "ADD"
    },
    "2381": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2383": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2385": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2386": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2387": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2388": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "SUB",
      "path": "3"
    },
    "2389": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2390": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2391": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "GAS",
      "path": "3"
    },
    "2392": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2393": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2394": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2395": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2396": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x969"
    },
    "2399": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2400": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2401": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2403": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2404": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2405": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2406": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2408": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2409": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2410": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "POP",
      "path": "3"
    },
    "2411": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "POP",
      "path": "3"
    },
    "2412": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "POP",
      "path": "3"
    },
    "2413": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "POP",
      "path": "3"
    },
    "2414": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2416": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2417": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2418": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2420": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "NOT",
      "path": "3"
    },
    "2421": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2423": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2424": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "ADD",
      "path": "3"
    },
    "2425": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "AND",
      "path": "3"
    },
    "2426": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2427": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "ADD",
      "path": "3"
    },
    "2428": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2429": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2431": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2432": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "POP",
      "path": "3"
    },
    "2433": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2434": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "ADD",
      "path": "3"
    },
    "2435": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2436": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98D"
    },
    "2439": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2440": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2441": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "2444": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12456,
        12541
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2445": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12456,
        12541
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2446": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12438,
        12541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x997"
    },
    "2449": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12438,
        12541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2450": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12438,
        12453
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2451": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12438,
        12541
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2218"
    },
    "2454": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12438,
        12541
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2455": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12438,
        12541
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2456": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12413,
        12541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12555,
        12574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2460": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12600,
        12601
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "2462": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12578,
        12596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9A8"
    },
    "2465": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12413,
        12541
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2466": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12595,
        12596
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2468": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12578,
        12596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "2471": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12578,
        12596
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2472": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12578,
        12596
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2473": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12577,
        12601
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B2"
    },
    "2476": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12577,
        12601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2477": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12577,
        12601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2478": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12577,
        12601
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "2481": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12577,
        12601
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2482": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12577,
        12601
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2483": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12623,
        12638
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x3"
    },
    "2485": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12623,
        12638
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2486": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2488": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2489": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2498": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2499": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12555,
        12601
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2500": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12555,
        12601
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2501": {
      "op": "POP"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2508": {
      "op": "SHL"
    },
    "2509": {
      "op": "SUB"
    },
    "2510": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12623,
        12638
      ],
      "op": "AND",
      "path": "3"
    },
    "2511": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12623,
        12638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2512": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12652
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "2517": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12652
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2518": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E7"
    },
    "2521": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2522": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12653,
        12663
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2523": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12653,
        12663
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2524": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12673,
        12677
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2525": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12673,
        12677
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2526": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12555,
        12601
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2527": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12555,
        12601
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2528": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2530": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "ADD",
      "path": "3"
    },
    "2531": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "2534": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12616,
        12692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2535": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2536": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2538": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2540": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2541": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2542": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2543": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "SUB",
      "path": "3"
    },
    "2544": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2545": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2547": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2548": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "GAS",
      "path": "3"
    },
    "2549": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "CALL",
      "path": "3"
    },
    "2550": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2551": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2552": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2553": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA06"
    },
    "2556": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2557": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2558": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2560": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2561": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2562": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2563": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2565": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2566": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2567": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "POP",
      "path": "3"
    },
    "2568": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "POP",
      "path": "3"
    },
    "2569": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "POP",
      "path": "3"
    },
    "2570": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "POP",
      "path": "3"
    },
    "2571": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2573": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2574": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2575": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2577": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "NOT",
      "path": "3"
    },
    "2578": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2580": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2581": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "ADD",
      "path": "3"
    },
    "2582": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "AND",
      "path": "3"
    },
    "2583": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2584": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "ADD",
      "path": "3"
    },
    "2585": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2586": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2588": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2589": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "POP",
      "path": "3"
    },
    "2590": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2591": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "ADD",
      "path": "3"
    },
    "2592": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2593": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2A"
    },
    "2596": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2597": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2598": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "2601": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12616,
        12692
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2602": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12616,
        12692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12713,
        12728
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x3"
    },
    "2606": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12713,
        12728
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2607": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12746,
        12759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2609": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12746,
        12759
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2610": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2612": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2613": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2620": {
      "op": "SHL"
    },
    "2621": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2622": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2629": {
      "op": "SHL"
    },
    "2630": {
      "op": "SUB"
    },
    "2631": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12713,
        12728
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2632": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12713,
        12728
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2633": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12713,
        12728
      ],
      "op": "AND",
      "path": "3"
    },
    "2634": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12713,
        12728
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2635": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12737
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "2640": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12737
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2641": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA6B"
    },
    "2644": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2645": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12746,
        12759
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2646": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12746,
        12759
      ],
      "op": "AND",
      "path": "3"
    },
    "2647": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12746,
        12759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2648": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12762,
        12785
      ],
      "op": "PUSH10",
      "path": "3",
      "value": "0x152D02C7E14AF67FFFFF"
    },
    "2659": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12762,
        12785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2660": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2662": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "ADD",
      "path": "3"
    },
    "2663": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "2666": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12706,
        12786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2667": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2668": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2670": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2672": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2673": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2674": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2675": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "SUB",
      "path": "3"
    },
    "2676": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2677": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2679": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2680": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "GAS",
      "path": "3"
    },
    "2681": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "CALL",
      "path": "3"
    },
    "2682": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2683": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2684": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2685": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA8A"
    },
    "2688": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2689": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2690": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2692": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2693": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2694": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2695": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2697": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2698": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2699": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "POP",
      "path": "3"
    },
    "2700": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "POP",
      "path": "3"
    },
    "2701": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "POP",
      "path": "3"
    },
    "2702": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "POP",
      "path": "3"
    },
    "2703": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2705": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2706": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2707": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2709": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "NOT",
      "path": "3"
    },
    "2710": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2712": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2713": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "ADD",
      "path": "3"
    },
    "2714": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "AND",
      "path": "3"
    },
    "2715": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2716": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "ADD",
      "path": "3"
    },
    "2717": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2718": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2720": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2721": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "POP",
      "path": "3"
    },
    "2722": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2723": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "ADD",
      "path": "3"
    },
    "2724": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2725": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAE"
    },
    "2728": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2729": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2730": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "2733": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12706,
        12786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2734": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12706,
        12786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12813
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x20"
    },
    "2738": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12813
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2739": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2741": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2742": {
      "op": "PUSH4",
      "value": "0x36F31F13"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2749": {
      "op": "SHL"
    },
    "2750": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2751": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12813
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2761": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12813
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2762": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12813
      ],
      "op": "AND",
      "path": "3"
    },
    "2763": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12813
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2764": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12832
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6DE63E26"
    },
    "2769": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12832
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2770": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE1"
    },
    "2773": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2774": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12841,
        12845
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2775": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12841,
        12845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2776": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12848,
        12859
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2777": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12848,
        12859
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2778": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2780": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "ADD",
      "path": "3"
    },
    "2781": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "2784": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12800,
        12860
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2785": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2786": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2788": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2790": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2791": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2792": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2793": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "SUB",
      "path": "3"
    },
    "2794": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2795": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2797": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2798": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2799": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2800": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2801": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2802": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2803": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAFB"
    },
    "2806": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2807": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2809": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2810": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2811": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2812": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "POP",
      "path": "3"
    },
    "2813": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "GAS",
      "path": "3"
    },
    "2814": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "CALL",
      "path": "3"
    },
    "2815": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2816": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2817": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2818": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB0F"
    },
    "2821": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2822": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2823": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2825": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2826": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2827": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2828": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2830": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2831": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12800,
        12860
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2832": {
      "op": "POP"
    },
    "2833": {
      "op": "POP"
    },
    "2834": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12887
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x20"
    },
    "2836": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12887
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2837": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2839": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2840": {
      "op": "PUSH4",
      "value": "0xEE1F84C3"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2847": {
      "op": "SHL"
    },
    "2848": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2849": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2850": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12907,
        12911
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2851": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2853": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2854": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "ADD",
      "path": "3"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2862": {
      "op": "SHL"
    },
    "2863": {
      "op": "SUB"
    },
    "2864": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12887
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2865": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12887
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2866": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12887
      ],
      "op": "AND",
      "path": "3"
    },
    "2867": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12887
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2868": {
      "op": "POP"
    },
    "2869": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12898
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xEE1F84C3"
    },
    "2874": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12898
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2881": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2883": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2884": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2885": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2886": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "SUB",
      "path": "3"
    },
    "2887": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2888": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2890": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2891": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2892": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2893": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2894": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2895": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2896": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB58"
    },
    "2899": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2900": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2902": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2903": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2904": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2905": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "POP",
      "path": "3"
    },
    "2906": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "GAS",
      "path": "3"
    },
    "2907": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "CALL",
      "path": "3"
    },
    "2908": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2909": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2910": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2911": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6C"
    },
    "2914": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2915": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2916": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2918": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2919": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2920": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2921": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2923": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2924": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12874,
        12913
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12950,
        12967
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2929": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12950,
        12967
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2930": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12950,
        12967
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2931": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2933": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2934": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2943": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2944": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12987,
        12991
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2945": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2946": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2947": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "ADD",
      "path": "3"
    },
    "2948": {
      "op": "SWAP3"
    },
    "2949": {
      "op": "SWAP1"
    },
    "2950": {
      "op": "SWAP3"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12927,
        12940
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2954": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12927,
        12940
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2962": {
      "op": "SHL"
    },
    "2963": {
      "op": "SUB"
    },
    "2964": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12950,
        12967
      ],
      "op": "AND",
      "path": "3"
    },
    "2965": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12950,
        12967
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2966": {
      "op": "POP"
    },
    "2967": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12978
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2972": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2975": {
      "op": "ADD"
    },
    "2976": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2978": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2980": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2981": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2982": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2983": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "SUB",
      "path": "3"
    },
    "2984": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2985": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2986": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "GAS",
      "path": "3"
    },
    "2987": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2988": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2989": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2990": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2991": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBBC"
    },
    "2994": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2995": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2996": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2998": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2999": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3000": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3001": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3003": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3004": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3005": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "POP",
      "path": "3"
    },
    "3006": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "POP",
      "path": "3"
    },
    "3007": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "POP",
      "path": "3"
    },
    "3008": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "POP",
      "path": "3"
    },
    "3009": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3011": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3012": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3013": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3015": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "NOT",
      "path": "3"
    },
    "3016": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3018": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3019": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "ADD",
      "path": "3"
    },
    "3020": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "AND",
      "path": "3"
    },
    "3021": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3022": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "ADD",
      "path": "3"
    },
    "3023": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3024": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3026": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3027": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "POP",
      "path": "3"
    },
    "3028": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3029": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "ADD",
      "path": "3"
    },
    "3030": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3031": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE0"
    },
    "3034": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3035": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3036": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "3039": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        12943,
        12993
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3040": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12943,
        12993
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3041": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x4"
    },
    "3043": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3044": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3045": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13078,
        13087
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3047": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13078,
        13087
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3048": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3050": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3051": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3058": {
      "op": "SHL"
    },
    "3059": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3060": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3061": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12927,
        12993
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3062": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        12927,
        12993
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3063": {
      "op": "POP"
    },
    "3064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3070": {
      "op": "SHL"
    },
    "3071": {
      "op": "SUB"
    },
    "3072": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3073": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3074": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "AND",
      "path": "3"
    },
    "3075": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13043,
        13060
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3076": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13069
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "3081": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13069
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3082": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC2E"
    },
    "3085": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3086": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13078,
        13087
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3087": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13078,
        13087
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3088": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13078,
        13087
      ],
      "op": "AND",
      "path": "3"
    },
    "3089": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13078,
        13087
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3090": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13090,
        13139
      ],
      "op": "PUSH21",
      "path": "3",
      "value": "0x6D79F82328EA3DA61E066EBB2F889FFFFFFFFFFFF"
    },
    "3112": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13090,
        13139
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3113": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3114": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "3117": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13036,
        13140
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3118": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3119": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3121": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3123": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3124": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3125": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3126": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "SUB",
      "path": "3"
    },
    "3127": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3128": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3130": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3131": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "GAS",
      "path": "3"
    },
    "3132": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "CALL",
      "path": "3"
    },
    "3133": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3134": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3135": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3136": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4D"
    },
    "3139": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3140": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3141": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3143": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3144": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3145": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3146": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3148": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3149": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3150": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "POP",
      "path": "3"
    },
    "3151": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "POP",
      "path": "3"
    },
    "3152": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "POP",
      "path": "3"
    },
    "3153": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "POP",
      "path": "3"
    },
    "3154": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3156": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3157": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3158": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3160": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "NOT",
      "path": "3"
    },
    "3161": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3163": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3164": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3165": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "AND",
      "path": "3"
    },
    "3166": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3167": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3168": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3169": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3171": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3172": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "POP",
      "path": "3"
    },
    "3173": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3174": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "ADD",
      "path": "3"
    },
    "3175": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3176": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC71"
    },
    "3179": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3180": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3181": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "3184": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13036,
        13140
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3185": {
      "branch": 43,
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13036,
        13140
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3186": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC8D"
    },
    "3189": {
      "branch": 43,
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3190": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3192": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3201": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3202": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3204": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "ADD",
      "path": "3"
    },
    "3205": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "3208": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3209": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235A"
    },
    "3212": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13028,
        13160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3213": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13028,
        13160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3214": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3216": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3217": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3218": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13216,
        13217
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3220": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3221": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3222": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3223": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3225": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3226": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3227": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3228": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3229": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13178,
        13199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3231": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13178,
        13199
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3232": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3234": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3235": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "ADD",
      "path": "3"
    },
    "3236": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3237": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3238": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "3239": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3240": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13202,
        13218
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "3241": {
      "op": "POP"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13246,
        13263
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x4"
    },
    "3245": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13246,
        13263
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3246": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3247": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3248": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3249": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3250": {
      "op": "POP"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3257": {
      "op": "SHL"
    },
    "3258": {
      "op": "SUB"
    },
    "3259": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13246,
        13263
      ],
      "op": "AND",
      "path": "3"
    },
    "3260": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13246,
        13263
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3261": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3262": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3263": {
      "op": "POP"
    },
    "3264": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13246,
        13263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3266": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13246,
        13263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3267": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCE"
    },
    "3270": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3271": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCCE"
    },
    "3274": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "3277": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13236,
        13243
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3278": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3285": {
      "op": "SHL"
    },
    "3286": {
      "op": "SUB"
    },
    "3287": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13263
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3288": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13263
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3289": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13263
      ],
      "op": "AND",
      "path": "3"
    },
    "3290": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3292": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3293": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3294": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "MUL",
      "path": "3"
    },
    "3295": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3296": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3297": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3298": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "ADD",
      "path": "3"
    },
    "3299": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13243
      ],
      "op": "ADD",
      "path": "3"
    },
    "3300": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13236,
        13263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3301": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x3"
    },
    "3303": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3304": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3305": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3306": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3307": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "AND",
      "path": "3"
    },
    "3308": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3309": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13285
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3310": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3311": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3313": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13291,
        13306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3314": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3315": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "LT",
      "path": "3"
    },
    "3316": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCFF"
    },
    "3319": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3320": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCFF"
    },
    "3323": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "3326": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13281,
        13288
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3327": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3328": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3330": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "MUL",
      "path": "3"
    },
    "3331": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3333": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "ADD",
      "path": "3"
    },
    "3334": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13288
      ],
      "op": "ADD",
      "path": "3"
    },
    "3335": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3342": {
      "op": "SHL"
    },
    "3343": {
      "op": "SUB"
    },
    "3344": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "AND",
      "path": "3"
    },
    "3345": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3346": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3353": {
      "op": "SHL"
    },
    "3354": {
      "op": "SUB"
    },
    "3355": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "AND",
      "path": "3"
    },
    "3356": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3357": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3358": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "POP",
      "path": "3"
    },
    "3359": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13281,
        13306
      ],
      "op": "POP",
      "path": "3"
    },
    "3360": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x1F"
    },
    "3362": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3364": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3365": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3366": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3367": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3370": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "EXP",
      "path": "3"
    },
    "3371": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3372": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "DIV",
      "path": "3"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "op": "SHL"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13343,
        13352
      ],
      "op": "AND",
      "path": "3"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3388": {
      "op": "SHL"
    },
    "3389": {
      "op": "SUB"
    },
    "3390": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13379
      ],
      "op": "AND",
      "path": "3"
    },
    "3391": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13379
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38ED1739"
    },
    "3396": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13380,
        13385
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3397": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13387,
        13390
      ],
      "op": "DUP16",
      "path": "3"
    },
    "3398": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13392,
        13396
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3399": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13398,
        13408
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3400": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13410,
        13430
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D630FFFFF"
    },
    "3410": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3412": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3413": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3414": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3419": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "AND",
      "path": "3"
    },
    "3420": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "3422": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SHL",
      "path": "3"
    },
    "3423": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3424": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3425": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3427": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "ADD",
      "path": "3"
    },
    "3428": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD71"
    },
    "3431": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "3432": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3433": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3434": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3435": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3436": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3437": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23DD"
    },
    "3440": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13324,
        13431
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3441": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3442": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3444": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3446": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3447": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3448": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3449": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SUB",
      "path": "3"
    },
    "3450": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3451": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3453": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3454": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "GAS",
      "path": "3"
    },
    "3455": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "CALL",
      "path": "3"
    },
    "3456": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3457": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3458": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3459": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD90"
    },
    "3462": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3463": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3464": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3466": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3467": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3468": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3469": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3471": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3472": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3473": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "POP",
      "path": "3"
    },
    "3474": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "POP",
      "path": "3"
    },
    "3475": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "POP",
      "path": "3"
    },
    "3476": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "POP",
      "path": "3"
    },
    "3477": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3479": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3480": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3481": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3483": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3484": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3485": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3487": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3488": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3489": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3490": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "ADD",
      "path": "3"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3493": {
      "op": "NOT"
    },
    "3494": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "AND",
      "path": "3"
    },
    "3495": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3496": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "ADD",
      "path": "3"
    },
    "3497": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3499": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3500": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDB8"
    },
    "3503": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3504": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3505": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3506": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "ADD",
      "path": "3"
    },
    "3507": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3508": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2419"
    },
    "3511": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "i",
      "offset": [
        13324,
        13431
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3512": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3513": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13324,
        13431
      ],
      "op": "POP",
      "path": "3"
    },
    "3514": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3515": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3516": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3517": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3518": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3519": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3520": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3521": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3522": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3523": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11889,
        13488
      ],
      "op": "POP",
      "path": "3"
    },
    "3524": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11840,
        13505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13521,
        13525
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x1"
    },
    "3528": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        13521,
        13525
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3529": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "offset": [
        11611,
        13540
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3530": {
      "op": "POP"
    },
    "3531": {
      "op": "POP"
    },
    "3532": {
      "op": "POP"
    },
    "3533": {
      "fn": "ForgeZap.ONEburn0xBTCForMember",
      "jump": "o",
      "offset": [
        11611,
        13540
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3534": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3535": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3537": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3538": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3539": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10357,
        10358
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3541": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3542": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3543": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3544": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3546": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3547": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "ADD",
      "path": "3"
    },
    "3548": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3549": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3550": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10319,
        10340
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3552": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10319,
        10340
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3553": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3555": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3556": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "ADD",
      "path": "3"
    },
    "3557": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3558": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3559": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "3560": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3561": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10343,
        10359
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "3562": {
      "op": "POP"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10371,
        10386
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x3"
    },
    "3566": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10371,
        10386
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3567": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3568": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3569": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3570": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3571": {
      "op": "POP"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "SUB"
    },
    "3580": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10371,
        10386
      ],
      "op": "AND",
      "path": "3"
    },
    "3581": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10371,
        10386
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3582": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3583": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10371,
        10386
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3587": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10371,
        10386
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3588": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0F"
    },
    "3591": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3592": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE0F"
    },
    "3595": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "3598": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "i",
      "offset": [
        10361,
        10368
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3599": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3606": {
      "op": "SHL"
    },
    "3607": {
      "op": "SUB"
    },
    "3608": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10386
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3609": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10386
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3610": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10386
      ],
      "op": "AND",
      "path": "3"
    },
    "3611": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3613": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3614": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3615": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "MUL",
      "path": "3"
    },
    "3616": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3617": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3618": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3619": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "ADD",
      "path": "3"
    },
    "3620": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10368
      ],
      "op": "ADD",
      "path": "3"
    },
    "3621": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10361,
        10386
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3622": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x4"
    },
    "3624": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3625": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3626": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3627": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3628": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "AND",
      "path": "3"
    },
    "3629": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3630": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10392
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3631": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10392
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3632": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3634": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10398,
        10415
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3635": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3636": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "LT",
      "path": "3"
    },
    "3637": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE40"
    },
    "3640": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3641": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE40"
    },
    "3644": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "3647": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "i",
      "offset": [
        10388,
        10395
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3648": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3655": {
      "op": "SHL"
    },
    "3656": {
      "op": "SUB"
    },
    "3657": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10415
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3658": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10415
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3659": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10415
      ],
      "op": "AND",
      "path": "3"
    },
    "3660": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3662": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3663": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3664": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "MUL",
      "path": "3"
    },
    "3665": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3666": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3667": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3668": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "ADD",
      "path": "3"
    },
    "3669": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10395
      ],
      "op": "ADD",
      "path": "3"
    },
    "3670": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10388,
        10415
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3671": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x1F"
    },
    "3673": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3674": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3676": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3677": {
      "op": "PUSH4",
      "value": "0x38ED1739"
    },
    "3682": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3684": {
      "op": "SHL"
    },
    "3685": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3686": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3687": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3688": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "AND",
      "path": "3"
    },
    "3689": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3690": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10472
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38ED1739"
    },
    "3695": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10472
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3696": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA6"
    },
    "3699": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3700": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10473,
        10480
      ],
      "op": "PUSH3",
      "path": "3",
      "value": "0xF4240"
    },
    "3704": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10473,
        10480
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3705": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3707": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10436,
        10445
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3708": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10485,
        10489
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3709": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10485,
        10489
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3710": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10491,
        10533
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xBB3A3D4A665AB4E9D5594077163C0044D1290699"
    },
    "3731": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10491,
        10533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3732": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10535,
        10555
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D630FFFFF"
    },
    "3742": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10535,
        10555
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3743": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3745": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "ADD",
      "path": "3"
    },
    "3746": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23DD"
    },
    "3749": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "i",
      "offset": [
        10417,
        10556
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3750": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3751": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3753": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3755": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3756": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3757": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3758": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "SUB",
      "path": "3"
    },
    "3759": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3760": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3762": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3763": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "GAS",
      "path": "3"
    },
    "3764": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "CALL",
      "path": "3"
    },
    "3765": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3766": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3767": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3768": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEC5"
    },
    "3771": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3772": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3773": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3775": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3776": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3777": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3778": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3780": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3781": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3782": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "POP",
      "path": "3"
    },
    "3783": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "POP",
      "path": "3"
    },
    "3784": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "POP",
      "path": "3"
    },
    "3785": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "POP",
      "path": "3"
    },
    "3786": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3788": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3789": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3790": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3792": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3793": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3794": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3796": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3797": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3798": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3799": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "ADD",
      "path": "3"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3802": {
      "op": "NOT"
    },
    "3803": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "AND",
      "path": "3"
    },
    "3804": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3805": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "ADD",
      "path": "3"
    },
    "3806": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3808": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3809": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEED"
    },
    "3812": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3813": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3814": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3815": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "ADD",
      "path": "3"
    },
    "3816": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3817": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2419"
    },
    "3820": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "i",
      "offset": [
        10417,
        10556
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3821": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3822": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10417,
        10556
      ],
      "op": "POP",
      "path": "3"
    },
    "3823": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10316,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "3824": {
      "fn": "ForgeZap.OneTeste4233",
      "offset": [
        10264,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "3825": {
      "fn": "ForgeZap.OneTeste4233",
      "jump": "o",
      "offset": [
        10264,
        10559
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3826": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3827": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13639,
        13651
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3829": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13639,
        13651
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3830": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13639,
        13651
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3831": {
      "offset": [
        585,
        694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3832": {
      "offset": [
        602,
        612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3834": {
      "offset": [
        602,
        619
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3835": {
      "offset": [
        599,
        619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3836": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        599,
        619
      ],
      "op": "LT",
      "path": "3"
    },
    "3837": {
      "offset": [
        585,
        694
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3838": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        585,
        694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF50"
    },
    "3841": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        585,
        694
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3842": {
      "offset": [
        652,
        662
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3849": {
      "op": "SHL"
    },
    "3850": {
      "op": "SUB"
    },
    "3851": {
      "offset": [
        635,
        662
      ],
      "op": "AND",
      "path": "3"
    },
    "3852": {
      "offset": [
        635,
        645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3854": {
      "offset": [
        646,
        647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3855": {
      "offset": [
        635,
        648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3856": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3857": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3858": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "LT",
      "path": "3"
    },
    "3859": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF1E"
    },
    "3862": {
      "offset": [
        635,
        648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3863": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF1E"
    },
    "3866": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "3869": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        635,
        648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3870": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3871": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3873": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3874": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3875": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3876": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3878": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3879": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3880": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3881": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "ADD",
      "path": "3"
    },
    "3882": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        635,
        648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3889": {
      "op": "SHL"
    },
    "3890": {
      "op": "SUB"
    },
    "3891": {
      "offset": [
        635,
        648
      ],
      "op": "AND",
      "path": "3"
    },
    "3892": {
      "offset": [
        635,
        662
      ],
      "op": "EQ",
      "path": "3"
    },
    "3893": {
      "offset": [
        632,
        690
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3894": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        632,
        690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3E"
    },
    "3897": {
      "offset": [
        632,
        690
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3898": {
      "offset": [
        681,
        685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3900": {
      "offset": [
        667,
        685
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3901": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        667,
        685
      ],
      "op": "POP",
      "path": "3"
    },
    "3902": {
      "offset": [
        632,
        690
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3903": {
      "offset": [
        621,
        624
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3904": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF48"
    },
    "3907": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3908": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A0"
    },
    "3911": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        621,
        624
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3912": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3913": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3914": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "POP",
      "path": "3"
    },
    "3915": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        621,
        624
      ],
      "op": "POP",
      "path": "3"
    },
    "3916": {
      "offset": [
        585,
        694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF7"
    },
    "3919": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        585,
        694
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3920": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        585,
        694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3921": {
      "op": "POP"
    },
    "3922": {
      "offset": [
        725,
        730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3924": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        725,
        730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3931": {
      "op": "SHL"
    },
    "3932": {
      "op": "SUB"
    },
    "3933": {
      "offset": [
        725,
        730
      ],
      "op": "AND",
      "path": "3"
    },
    "3934": {
      "offset": [
        711,
        721
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3935": {
      "offset": [
        711,
        730
      ],
      "op": "EQ",
      "path": "3"
    },
    "3936": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        711,
        730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3937": {
      "offset": [
        711,
        745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF67"
    },
    "3940": {
      "offset": [
        711,
        745
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3941": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        711,
        745
      ],
      "op": "POP",
      "path": "3"
    },
    "3942": {
      "offset": [
        734,
        745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3943": {
      "offset": [
        711,
        745
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3944": {
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF83"
    },
    "3947": {
      "offset": [
        703,
        786
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3948": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3950": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3957": {
      "op": "SHL"
    },
    "3958": {
      "offset": [
        703,
        786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3959": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3960": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3962": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "ADD",
      "path": "3"
    },
    "3963": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "3966": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3967": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21BB"
    },
    "3970": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        703,
        786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3971": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        703,
        786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3972": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13677,
        13694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3974": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13737,
        13754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3975": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13777,
        13803
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3977": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x22"
    },
    "3979": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3981": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3982": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3983": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3984": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "3987": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "EXP",
      "path": "3"
    },
    "3988": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3989": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "DIV",
      "path": "3"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3996": {
      "op": "SHL"
    },
    "3997": {
      "op": "SUB"
    },
    "3998": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13866
      ],
      "op": "AND",
      "path": "3"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4005": {
      "op": "SHL"
    },
    "4006": {
      "op": "SUB"
    },
    "4007": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13878
      ],
      "op": "AND",
      "path": "3"
    },
    "4008": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13878
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x902F1AC"
    },
    "4013": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4015": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4016": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4017": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4022": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "AND",
      "path": "3"
    },
    "4023": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "4025": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "SHL",
      "path": "3"
    },
    "4026": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4027": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4028": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4030": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4031": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4033": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4035": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4036": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4037": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4038": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "SUB",
      "path": "3"
    },
    "4039": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4040": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4041": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "GAS",
      "path": "3"
    },
    "4042": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4043": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4044": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4045": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4046": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFDB"
    },
    "4049": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4050": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4051": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4053": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4054": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4055": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4056": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4058": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4059": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4060": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "POP",
      "path": "3"
    },
    "4061": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "POP",
      "path": "3"
    },
    "4062": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "POP",
      "path": "3"
    },
    "4063": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "POP",
      "path": "3"
    },
    "4064": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4066": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4067": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4068": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4070": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "NOT",
      "path": "3"
    },
    "4071": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4073": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4074": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4075": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "AND",
      "path": "3"
    },
    "4076": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4077": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4078": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4079": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4081": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4082": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "POP",
      "path": "3"
    },
    "4083": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4084": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "ADD",
      "path": "3"
    },
    "4085": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4086": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFFF"
    },
    "4089": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4090": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4091": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x224B"
    },
    "4094": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        13863,
        13880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4095": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13863,
        13880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4096": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13817,
        13880
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4097": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13817,
        13880
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4098": {
      "op": "POP"
    },
    "4099": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13817,
        13880
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4100": {
      "op": "POP"
    },
    "4101": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13817,
        13880
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4102": {
      "op": "POP"
    },
    "4103": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13926,
        13941
      ],
      "op": "PUSH10",
      "path": "3",
      "value": "0x1BC16D674EC80000000"
    },
    "4114": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13909,
        13923
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4116": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14007,
        14025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1026"
    },
    "4119": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13926,
        13941
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4126": {
      "op": "SHL"
    },
    "4127": {
      "op": "SUB"
    },
    "4128": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14007,
        14025
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4129": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14007,
        14025
      ],
      "op": "AND",
      "path": "3"
    },
    "4130": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14007,
        14025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229B"
    },
    "4133": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14007,
        14025
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4134": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14007,
        14025
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4135": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13983,
        14001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1039"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "4144": {
      "op": "SHL"
    },
    "4145": {
      "op": "SUB"
    },
    "4146": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13983,
        14001
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4147": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13983,
        14001
      ],
      "op": "AND",
      "path": "3"
    },
    "4148": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13983,
        13989
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4149": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13983,
        14001
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "4152": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        13983,
        14001
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4153": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13983,
        14001
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4154": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13982,
        14026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1043"
    },
    "4157": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13982,
        14026
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4158": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13982,
        14026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4159": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13982,
        14026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "4162": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        13982,
        14026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4163": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13982,
        14026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4164": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13955,
        14026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4165": {
      "op": "POP"
    },
    "4166": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14040,
        14063
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4168": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14090,
        14093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "4170": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1054"
    },
    "4173": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13955,
        14026
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4174": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14085,
        14087
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5F"
    },
    "4176": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "4179": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14066,
        14087
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4180": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14087
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4181": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x105E"
    },
    "4184": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14093
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4185": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14093
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4186": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "4189": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14066,
        14093
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4190": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14066,
        14093
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4191": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4193": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4194": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4195": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4197": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4198": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4199": {
      "op": "PUSH4",
      "value": "0x4B9B147B"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4206": {
      "op": "SHL"
    },
    "4207": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4208": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4209": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4210": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4211": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14040,
        14093
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4212": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14040,
        14093
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4213": {
      "op": "POP"
    },
    "4214": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14186,
        14208
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4216": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14186,
        14208
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4223": {
      "op": "SHL"
    },
    "4224": {
      "op": "SUB"
    },
    "4225": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4226": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4227": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "AND",
      "path": "3"
    },
    "4228": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4229": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14258
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x60B29259"
    },
    "4234": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14258
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4235": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4236": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4237": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14283
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x973628F6"
    },
    "4242": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14283
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4243": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4245": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4246": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4247": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ADD",
      "path": "3"
    },
    "4248": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4249": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4250": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4251": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4252": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4253": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SUB",
      "path": "3"
    },
    "4254": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ADD",
      "path": "3"
    },
    "4255": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4256": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14242
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4257": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "GAS",
      "path": "3"
    },
    "4258": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4259": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4260": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4261": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4262": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10B3"
    },
    "4265": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4266": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4267": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4269": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4270": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4271": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4272": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4274": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4275": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4276": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "POP",
      "path": "3"
    },
    "4277": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "POP",
      "path": "3"
    },
    "4278": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "POP",
      "path": "3"
    },
    "4279": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "POP",
      "path": "3"
    },
    "4280": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4282": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4283": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4284": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4286": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "NOT",
      "path": "3"
    },
    "4287": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4289": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4290": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ADD",
      "path": "3"
    },
    "4291": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "AND",
      "path": "3"
    },
    "4292": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4293": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ADD",
      "path": "3"
    },
    "4294": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4295": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4297": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4298": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "POP",
      "path": "3"
    },
    "4299": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4300": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "ADD",
      "path": "3"
    },
    "4301": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4302": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D7"
    },
    "4305": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4306": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4307": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "4310": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14259,
        14285
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4311": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14259,
        14285
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4312": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4314": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4315": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4316": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4318": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4319": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4320": {
      "op": "PUSH4",
      "value": "0x5C9302C9"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4327": {
      "op": "SHL"
    },
    "4328": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4329": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4330": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4331": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4338": {
      "op": "SHL"
    },
    "4339": {
      "op": "SUB"
    },
    "4340": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4341": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4342": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "AND",
      "path": "3"
    },
    "4343": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4344": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14311
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5C9302C9"
    },
    "4349": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14311
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4350": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4352": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4353": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4354": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ADD",
      "path": "3"
    },
    "4355": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4356": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4357": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4358": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SUB",
      "path": "3"
    },
    "4359": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ADD",
      "path": "3"
    },
    "4360": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4361": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14300
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4362": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "GAS",
      "path": "3"
    },
    "4363": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4364": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4365": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4366": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4367": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111C"
    },
    "4370": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4371": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4372": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4374": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4375": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4376": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4377": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4379": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4380": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4381": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "POP",
      "path": "3"
    },
    "4382": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "POP",
      "path": "3"
    },
    "4383": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "POP",
      "path": "3"
    },
    "4384": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "POP",
      "path": "3"
    },
    "4385": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4387": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4388": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4389": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4391": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "NOT",
      "path": "3"
    },
    "4392": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4394": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4395": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ADD",
      "path": "3"
    },
    "4396": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "AND",
      "path": "3"
    },
    "4397": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4398": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ADD",
      "path": "3"
    },
    "4399": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4400": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4402": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4403": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "POP",
      "path": "3"
    },
    "4404": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4405": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "ADD",
      "path": "3"
    },
    "4406": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4407": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1140"
    },
    "4410": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4411": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4412": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "4415": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14287,
        14313
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4416": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14287,
        14313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4417": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4419": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4426": {
      "op": "SHL"
    },
    "4427": {
      "op": "SUB"
    },
    "4428": {
      "op": "NOT"
    },
    "4429": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "4431": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4432": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4433": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "SHL",
      "path": "3"
    },
    "4434": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "AND",
      "path": "3"
    },
    "4435": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4436": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4437": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4439": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4440": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "ADD",
      "path": "3"
    },
    "4441": {
      "op": "SWAP3"
    },
    "4442": {
      "op": "SWAP1"
    },
    "4443": {
      "op": "SWAP3"
    },
    "4444": {
      "op": "MSTORE"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4447": {
      "op": "DUP3"
    },
    "4448": {
      "op": "ADD"
    },
    "4449": {
      "op": "MSTORE"
    },
    "4450": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4452": {
      "op": "ADD"
    },
    "4453": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4455": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4457": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4458": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4459": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4460": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "SUB",
      "path": "3"
    },
    "4461": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4462": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4463": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "GAS",
      "path": "3"
    },
    "4464": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4465": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4466": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4467": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4468": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1181"
    },
    "4471": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4472": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4473": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4475": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4476": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4477": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4478": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4480": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4481": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4482": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "POP",
      "path": "3"
    },
    "4483": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "POP",
      "path": "3"
    },
    "4484": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "POP",
      "path": "3"
    },
    "4485": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "POP",
      "path": "3"
    },
    "4486": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4488": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4489": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4490": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4492": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "NOT",
      "path": "3"
    },
    "4493": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4495": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4496": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "ADD",
      "path": "3"
    },
    "4497": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "AND",
      "path": "3"
    },
    "4498": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4499": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "ADD",
      "path": "3"
    },
    "4500": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4501": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4503": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4504": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "POP",
      "path": "3"
    },
    "4505": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4506": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "ADD",
      "path": "3"
    },
    "4507": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4508": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11A5"
    },
    "4511": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4512": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4513": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "4516": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14229,
        14314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4517": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14229,
        14314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4518": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14211,
        14314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11AF"
    },
    "4521": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14211,
        14314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4522": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14211,
        14226
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4523": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14211,
        14314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2218"
    },
    "4526": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14211,
        14314
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4527": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14211,
        14314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4528": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14186,
        14314
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4529": {
      "op": "POP"
    },
    "4530": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14328,
        14347
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4532": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14373,
        14375
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x46"
    },
    "4534": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14351,
        14369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11C0"
    },
    "4537": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14186,
        14314
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4538": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14368,
        14369
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "4540": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14351,
        14369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "4543": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14351,
        14369
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4544": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14351,
        14369
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4545": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14350,
        14375
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CA"
    },
    "4548": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14350,
        14375
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4549": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14350,
        14375
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4550": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14350,
        14375
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "4553": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14350,
        14375
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4554": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14350,
        14375
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4555": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14422,
        14437
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 15,
      "value": "0x3"
    },
    "4557": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14422,
        14437
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4558": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4560": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4561": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4568": {
      "op": "SHL"
    },
    "4569": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4570": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4571": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14328,
        14375
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4572": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14328,
        14375
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4573": {
      "op": "POP"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4580": {
      "op": "SHL"
    },
    "4581": {
      "op": "SUB"
    },
    "4582": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14422,
        14437
      ],
      "op": "AND",
      "path": "3"
    },
    "4583": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14422,
        14437
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4584": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14451
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "4589": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14451
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4590": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11FF"
    },
    "4593": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4594": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14452,
        14462
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4595": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14452,
        14462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4596": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14472,
        14476
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4597": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14472,
        14476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4598": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14328,
        14375
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4599": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14328,
        14375
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4600": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4602": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "ADD",
      "path": "3"
    },
    "4603": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "4606": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14415,
        14491
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4607": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4608": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4610": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4612": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4613": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4614": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4615": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "SUB",
      "path": "3"
    },
    "4616": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4617": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4619": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4620": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "GAS",
      "path": "3"
    },
    "4621": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "CALL",
      "path": "3"
    },
    "4622": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4623": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4624": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4625": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x121E"
    },
    "4628": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4629": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4630": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4632": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4633": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4634": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4635": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4637": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4638": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4639": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "POP",
      "path": "3"
    },
    "4640": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "POP",
      "path": "3"
    },
    "4641": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "POP",
      "path": "3"
    },
    "4642": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "POP",
      "path": "3"
    },
    "4643": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4645": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4646": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4647": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4649": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "NOT",
      "path": "3"
    },
    "4650": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4652": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4653": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "ADD",
      "path": "3"
    },
    "4654": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "AND",
      "path": "3"
    },
    "4655": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4656": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "ADD",
      "path": "3"
    },
    "4657": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4658": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4660": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4661": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "POP",
      "path": "3"
    },
    "4662": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4663": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "ADD",
      "path": "3"
    },
    "4664": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4665": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1242"
    },
    "4668": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4669": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4670": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "4673": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14415,
        14491
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4674": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14415,
        14491
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4675": {
      "op": "POP"
    },
    "4676": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14512,
        14527
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x3"
    },
    "4678": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14512,
        14527
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4679": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14545,
        14558
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4681": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14545,
        14558
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4682": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4684": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4685": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4692": {
      "op": "SHL"
    },
    "4693": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4694": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4701": {
      "op": "SHL"
    },
    "4702": {
      "op": "SUB"
    },
    "4703": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14512,
        14527
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4704": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14512,
        14527
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4705": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14512,
        14527
      ],
      "op": "AND",
      "path": "3"
    },
    "4706": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14512,
        14527
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4707": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14536
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "4712": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14536
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4713": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1283"
    },
    "4716": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4717": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14545,
        14558
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4718": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14545,
        14558
      ],
      "op": "AND",
      "path": "3"
    },
    "4719": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14545,
        14558
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4720": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14561,
        14584
      ],
      "op": "PUSH10",
      "path": "3",
      "value": "0x152D02C7E14AF67FFFFF"
    },
    "4731": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14561,
        14584
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4732": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4734": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "ADD",
      "path": "3"
    },
    "4735": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "4738": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14505,
        14585
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4739": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4740": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4742": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4744": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4745": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4746": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4747": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "SUB",
      "path": "3"
    },
    "4748": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4749": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4751": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4752": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "GAS",
      "path": "3"
    },
    "4753": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "CALL",
      "path": "3"
    },
    "4754": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4755": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4756": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4757": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A2"
    },
    "4760": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4761": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4762": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4764": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4765": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4766": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4767": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4769": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4770": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4771": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "POP",
      "path": "3"
    },
    "4772": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "POP",
      "path": "3"
    },
    "4773": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "POP",
      "path": "3"
    },
    "4774": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "POP",
      "path": "3"
    },
    "4775": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4777": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4778": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4779": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4781": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "NOT",
      "path": "3"
    },
    "4782": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "4784": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4785": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "ADD",
      "path": "3"
    },
    "4786": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "AND",
      "path": "3"
    },
    "4787": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4788": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "ADD",
      "path": "3"
    },
    "4789": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4790": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4792": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4793": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "POP",
      "path": "3"
    },
    "4794": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4795": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "ADD",
      "path": "3"
    },
    "4796": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4797": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12C6"
    },
    "4800": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4801": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4802": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "4805": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14505,
        14585
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4806": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14505,
        14585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4807": {
      "op": "POP"
    },
    "4808": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14612
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x20"
    },
    "4810": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14612
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4811": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4813": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4814": {
      "op": "PUSH4",
      "value": "0x36F31F13"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4821": {
      "op": "SHL"
    },
    "4822": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4823": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4830": {
      "op": "SHL"
    },
    "4831": {
      "op": "SUB"
    },
    "4832": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4833": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14612
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4834": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14612
      ],
      "op": "AND",
      "path": "3"
    },
    "4835": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4836": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14631
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6DE63E26"
    },
    "4841": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14631
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4842": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F9"
    },
    "4845": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4846": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14640,
        14644
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4847": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14640,
        14644
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4848": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14647,
        14658
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4849": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14647,
        14658
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4850": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4852": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "ADD",
      "path": "3"
    },
    "4853": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "4856": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14599,
        14659
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4857": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4858": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4860": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4862": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4863": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4864": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4865": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "SUB",
      "path": "3"
    },
    "4866": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4867": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4869": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4870": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4871": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4872": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4873": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4874": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4875": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1313"
    },
    "4878": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4879": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4881": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4882": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4883": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4884": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "POP",
      "path": "3"
    },
    "4885": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "GAS",
      "path": "3"
    },
    "4886": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "CALL",
      "path": "3"
    },
    "4887": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4888": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4889": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4890": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1327"
    },
    "4893": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4894": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4895": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4897": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4898": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4899": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4900": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4902": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4903": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14599,
        14659
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4904": {
      "op": "POP"
    },
    "4905": {
      "op": "POP"
    },
    "4906": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14686
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x20"
    },
    "4908": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14686
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4909": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4911": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4912": {
      "op": "PUSH4",
      "value": "0xEE1F84C3"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4919": {
      "op": "SHL"
    },
    "4920": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4921": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4922": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14706,
        14710
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4923": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4925": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4926": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "ADD",
      "path": "3"
    },
    "4927": {
      "op": "MSTORE"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14686
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4937": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14686
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4938": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14686
      ],
      "op": "AND",
      "path": "3"
    },
    "4939": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14686
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4940": {
      "op": "POP"
    },
    "4941": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14697
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xEE1F84C3"
    },
    "4946": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14697
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4947": {
      "op": "POP"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4950": {
      "op": "ADD"
    },
    "4951": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4953": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4955": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4956": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4957": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4958": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "SUB",
      "path": "3"
    },
    "4959": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4960": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4962": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4963": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4964": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4965": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4966": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4967": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4968": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1370"
    },
    "4971": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4972": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4974": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4975": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4976": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4977": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "POP",
      "path": "3"
    },
    "4978": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "GAS",
      "path": "3"
    },
    "4979": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "CALL",
      "path": "3"
    },
    "4980": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4981": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4982": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4983": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1384"
    },
    "4986": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4987": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4988": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4990": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4991": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4992": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4993": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4995": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4996": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14673,
        14712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4997": {
      "op": "POP"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14749,
        14766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5001": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14749,
        14766
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5002": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14749,
        14766
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5003": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5005": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5006": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5013": {
      "op": "SHL"
    },
    "5014": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5015": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5016": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14786,
        14790
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5017": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5018": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5019": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "ADD",
      "path": "3"
    },
    "5020": {
      "op": "SWAP3"
    },
    "5021": {
      "op": "SWAP1"
    },
    "5022": {
      "op": "SWAP3"
    },
    "5023": {
      "op": "MSTORE"
    },
    "5024": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14726,
        14739
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5026": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14726,
        14739
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5027": {
      "op": "POP"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5034": {
      "op": "SHL"
    },
    "5035": {
      "op": "SUB"
    },
    "5036": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14749,
        14766
      ],
      "op": "AND",
      "path": "3"
    },
    "5037": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14749,
        14766
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5038": {
      "op": "POP"
    },
    "5039": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14777
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "5044": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14777
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5050": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5052": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5053": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5054": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5055": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "SUB",
      "path": "3"
    },
    "5056": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5057": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5058": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "GAS",
      "path": "3"
    },
    "5059": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "5060": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5061": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5062": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5063": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13D4"
    },
    "5066": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5067": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5068": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5070": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5071": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5072": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5073": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5075": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5076": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5077": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "POP",
      "path": "3"
    },
    "5078": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "POP",
      "path": "3"
    },
    "5079": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "POP",
      "path": "3"
    },
    "5080": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "POP",
      "path": "3"
    },
    "5081": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5083": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5084": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5085": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5087": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "NOT",
      "path": "3"
    },
    "5088": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5090": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5091": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "ADD",
      "path": "3"
    },
    "5092": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "AND",
      "path": "3"
    },
    "5093": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5094": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "ADD",
      "path": "3"
    },
    "5095": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5096": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5098": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5099": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "POP",
      "path": "3"
    },
    "5100": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5101": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "ADD",
      "path": "3"
    },
    "5102": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5103": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13F8"
    },
    "5106": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5107": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5108": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "5111": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14742,
        14792
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5112": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14742,
        14792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5113": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x4"
    },
    "5115": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5116": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5117": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14877,
        14886
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5119": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14877,
        14886
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5120": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5122": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5123": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5130": {
      "op": "SHL"
    },
    "5131": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5132": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5133": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14726,
        14792
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5134": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14726,
        14792
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5135": {
      "op": "POP"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5142": {
      "op": "SHL"
    },
    "5143": {
      "op": "SUB"
    },
    "5144": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5145": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5146": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "AND",
      "path": "3"
    },
    "5147": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14842,
        14859
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5148": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14868
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "5153": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14868
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5154": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1446"
    },
    "5157": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5158": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14877,
        14886
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5159": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14877,
        14886
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5160": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14877,
        14886
      ],
      "op": "AND",
      "path": "3"
    },
    "5161": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14877,
        14886
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5162": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14889,
        14938
      ],
      "op": "PUSH21",
      "path": "3",
      "value": "0x6D79F82328EA3DA61E066EBB2F889FFFFFFFFFFFF"
    },
    "5184": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14889,
        14938
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5185": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "ADD",
      "path": "3"
    },
    "5186": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "5189": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14835,
        14939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5190": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5191": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5193": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5195": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5196": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5197": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5198": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "SUB",
      "path": "3"
    },
    "5199": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5200": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5202": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5203": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "GAS",
      "path": "3"
    },
    "5204": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "CALL",
      "path": "3"
    },
    "5205": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5206": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5207": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5208": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1465"
    },
    "5211": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5212": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5213": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5215": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5216": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5217": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5218": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5220": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5221": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5222": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "POP",
      "path": "3"
    },
    "5223": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "POP",
      "path": "3"
    },
    "5224": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "POP",
      "path": "3"
    },
    "5225": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "POP",
      "path": "3"
    },
    "5226": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5228": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5229": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5230": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5232": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "NOT",
      "path": "3"
    },
    "5233": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5235": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5236": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "ADD",
      "path": "3"
    },
    "5237": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "AND",
      "path": "3"
    },
    "5238": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5239": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "ADD",
      "path": "3"
    },
    "5240": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5241": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5243": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5244": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "POP",
      "path": "3"
    },
    "5245": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5246": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "ADD",
      "path": "3"
    },
    "5247": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5248": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1489"
    },
    "5251": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5252": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5253": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "5256": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14835,
        14939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5257": {
      "branch": 44,
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14835,
        14939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5258": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A5"
    },
    "5261": {
      "branch": 44,
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5262": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5264": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5265": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5269": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5271": {
      "op": "SHL"
    },
    "5272": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5273": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5274": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5276": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "ADD",
      "path": "3"
    },
    "5277": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "5280": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5281": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235A"
    },
    "5284": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        14827,
        14959
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5285": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14827,
        14959
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5286": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5288": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5289": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5290": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15015,
        15016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "5292": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5293": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5294": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5295": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "5297": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5298": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "ADD",
      "path": "3"
    },
    "5299": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5300": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5301": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14977,
        14998
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5303": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        14977,
        14998
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5304": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5306": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5307": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "ADD",
      "path": "3"
    },
    "5308": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5309": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5310": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "5311": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5312": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15001,
        15017
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "5313": {
      "op": "POP"
    },
    "5314": {
      "op": "POP"
    },
    "5315": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15045,
        15062
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x4"
    },
    "5317": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15045,
        15062
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5318": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5319": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5320": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5321": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5322": {
      "op": "POP"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5329": {
      "op": "SHL"
    },
    "5330": {
      "op": "SUB"
    },
    "5331": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15045,
        15062
      ],
      "op": "AND",
      "path": "3"
    },
    "5332": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15045,
        15062
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5333": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5334": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5335": {
      "op": "POP"
    },
    "5336": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15045,
        15062
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5338": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15045,
        15062
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5339": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E6"
    },
    "5342": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5343": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14E6"
    },
    "5346": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "5349": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        15035,
        15042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5350": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5357": {
      "op": "SHL"
    },
    "5358": {
      "op": "SUB"
    },
    "5359": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15062
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5360": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15062
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5361": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15062
      ],
      "op": "AND",
      "path": "3"
    },
    "5362": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5364": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5365": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5366": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "MUL",
      "path": "3"
    },
    "5367": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5368": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5369": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5370": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "ADD",
      "path": "3"
    },
    "5371": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15042
      ],
      "op": "ADD",
      "path": "3"
    },
    "5372": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15035,
        15062
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5373": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x3"
    },
    "5375": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5376": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5377": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5378": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5379": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "AND",
      "path": "3"
    },
    "5380": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5381": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15084
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5382": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15084
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5383": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5385": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15090,
        15105
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5386": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5387": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "LT",
      "path": "3"
    },
    "5388": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1517"
    },
    "5391": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5392": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1517"
    },
    "5395": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "5398": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        15080,
        15087
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5399": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5406": {
      "op": "SHL"
    },
    "5407": {
      "op": "SUB"
    },
    "5408": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15105
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5409": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15105
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5410": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15105
      ],
      "op": "AND",
      "path": "3"
    },
    "5411": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5413": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5414": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5415": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "MUL",
      "path": "3"
    },
    "5416": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5417": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5418": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5419": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "ADD",
      "path": "3"
    },
    "5420": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15087
      ],
      "op": "ADD",
      "path": "3"
    },
    "5421": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15080,
        15105
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5422": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15156,
        15173
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x4"
    },
    "5424": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15156,
        15173
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5425": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15156,
        15173
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5426": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5428": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5429": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5436": {
      "op": "SHL"
    },
    "5437": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5438": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5439": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15156,
        15173
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5440": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15156,
        15173
      ],
      "op": "AND",
      "path": "3"
    },
    "5441": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15156,
        15173
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5442": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15187
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "5447": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15187
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5448": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x155E"
    },
    "5451": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5452": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15188,
        15198
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5453": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15188,
        15198
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5454": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15208,
        15212
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5455": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15208,
        15212
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5456": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15215,
        15231
      ],
      "op": "PUSH7",
      "path": "3",
      "value": "0x38D7EA4C68000"
    },
    "5464": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15215,
        15231
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5465": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "ADD",
      "path": "3"
    },
    "5466": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "5469": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        15149,
        15232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5470": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5471": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5473": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5475": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5476": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5477": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5478": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "SUB",
      "path": "3"
    },
    "5479": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5480": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5482": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5483": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "GAS",
      "path": "3"
    },
    "5484": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "CALL",
      "path": "3"
    },
    "5485": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5486": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5487": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5488": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x157D"
    },
    "5491": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5492": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5493": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5495": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5496": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5497": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5498": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5500": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5501": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5502": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "POP",
      "path": "3"
    },
    "5503": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "POP",
      "path": "3"
    },
    "5504": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "POP",
      "path": "3"
    },
    "5505": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "POP",
      "path": "3"
    },
    "5506": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5508": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5509": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5510": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5512": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "NOT",
      "path": "3"
    },
    "5513": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5515": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5516": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "ADD",
      "path": "3"
    },
    "5517": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "AND",
      "path": "3"
    },
    "5518": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5519": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "ADD",
      "path": "3"
    },
    "5520": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5521": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5523": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5524": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "POP",
      "path": "3"
    },
    "5525": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5526": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "ADD",
      "path": "3"
    },
    "5527": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5528": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15A1"
    },
    "5531": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5532": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5533": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "5536": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        15149,
        15232
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5537": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5538": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15149,
        15232
      ],
      "op": "POP",
      "path": "3"
    },
    "5539": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x1F"
    },
    "5541": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5543": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5544": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5545": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5546": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5549": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "EXP",
      "path": "3"
    },
    "5550": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5551": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "DIV",
      "path": "3"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5558": {
      "op": "SHL"
    },
    "5559": {
      "op": "SUB"
    },
    "5560": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15277,
        15286
      ],
      "op": "AND",
      "path": "3"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5567": {
      "op": "SHL"
    },
    "5568": {
      "op": "SUB"
    },
    "5569": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15313
      ],
      "op": "AND",
      "path": "3"
    },
    "5570": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15313
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38ED1739"
    },
    "5575": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15314,
        15330
      ],
      "op": "PUSH7",
      "path": "3",
      "value": "0x38D7EA4C68000"
    },
    "5583": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15333,
        15339
      ],
      "op": "DUP16",
      "path": "3"
    },
    "5584": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15341,
        15345
      ],
      "op": "DUP5",
      "path": "3"
    },
    "5585": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15347,
        15357
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5586": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15359,
        15379
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D630FFFFF"
    },
    "5596": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5598": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5599": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5600": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "5605": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "AND",
      "path": "3"
    },
    "5606": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "5608": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SHL",
      "path": "3"
    },
    "5609": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5610": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5611": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5613": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "ADD",
      "path": "3"
    },
    "5614": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15FB"
    },
    "5617": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "5618": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "5619": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "5620": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5621": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5622": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5623": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23DD"
    },
    "5626": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        15258,
        15380
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5627": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5628": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5630": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5632": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5633": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5634": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5635": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SUB",
      "path": "3"
    },
    "5636": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5637": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5639": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5640": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "GAS",
      "path": "3"
    },
    "5641": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "CALL",
      "path": "3"
    },
    "5642": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5643": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5644": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5645": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x161A"
    },
    "5648": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5649": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5650": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5652": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5653": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5654": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5655": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5657": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5658": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5659": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "POP",
      "path": "3"
    },
    "5660": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "POP",
      "path": "3"
    },
    "5661": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "POP",
      "path": "3"
    },
    "5662": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "POP",
      "path": "3"
    },
    "5663": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5665": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5666": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5667": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5669": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5670": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5671": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5673": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5674": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5675": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5676": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "ADD",
      "path": "3"
    },
    "5677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5679": {
      "op": "NOT"
    },
    "5680": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "AND",
      "path": "3"
    },
    "5681": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5682": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "ADD",
      "path": "3"
    },
    "5683": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5685": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5686": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1642"
    },
    "5689": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5690": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5691": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5692": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "ADD",
      "path": "3"
    },
    "5693": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5694": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2419"
    },
    "5697": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "i",
      "offset": [
        15258,
        15380
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5698": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5699": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15258,
        15380
      ],
      "op": "POP",
      "path": "3"
    },
    "5700": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15436,
        15440
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x1"
    },
    "5702": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "SWAP12",
      "path": "3"
    },
    "5703": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5704": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5705": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5706": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5707": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5708": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5709": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5710": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5711": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5712": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5713": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        15429,
        15440
      ],
      "op": "POP",
      "path": "3"
    },
    "5714": {
      "offset": [
        796,
        797
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5715": {
      "offset": [
        549,
        804
      ],
      "op": "POP",
      "path": "3"
    },
    "5716": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5717": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5718": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "offset": [
        13546,
        15455
      ],
      "op": "POP",
      "path": "3"
    },
    "5719": {
      "fn": "ForgeZap.ONEburn0xBTCForMemberNOBLOCK",
      "jump": "o",
      "offset": [
        13546,
        15455
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5720": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5721": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10057,
        10072
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x3"
    },
    "5723": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10057,
        10072
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5724": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5726": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5727": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "5732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5734": {
      "op": "SHL"
    },
    "5735": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5736": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5743": {
      "op": "SHL"
    },
    "5744": {
      "op": "SUB"
    },
    "5745": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10057,
        10072
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5746": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10057,
        10072
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5747": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10057,
        10072
      ],
      "op": "AND",
      "path": "3"
    },
    "5748": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10057,
        10072
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5749": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10086
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "5754": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10086
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5755": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1693"
    },
    "5758": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5759": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10087,
        10097
      ],
      "op": "CALLER",
      "path": "3"
    },
    "5760": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10087,
        10097
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5761": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10107,
        10111
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5762": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10107,
        10111
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5763": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10114,
        10131
      ],
      "op": "PUSH7",
      "path": "3",
      "value": "0x2386F26FC10000"
    },
    "5771": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10114,
        10131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5772": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5774": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "ADD",
      "path": "3"
    },
    "5775": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "5778": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        10050,
        10132
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5779": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5780": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5782": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5784": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5785": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5786": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5787": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "SUB",
      "path": "3"
    },
    "5788": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5789": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5791": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5792": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "GAS",
      "path": "3"
    },
    "5793": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "CALL",
      "path": "3"
    },
    "5794": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5795": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5796": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5797": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B2"
    },
    "5800": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5801": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5802": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5804": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5805": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5806": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5807": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5809": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5810": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5811": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "POP",
      "path": "3"
    },
    "5812": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "POP",
      "path": "3"
    },
    "5813": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "POP",
      "path": "3"
    },
    "5814": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "POP",
      "path": "3"
    },
    "5815": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5817": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5818": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5819": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5821": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "NOT",
      "path": "3"
    },
    "5822": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5824": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5825": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "ADD",
      "path": "3"
    },
    "5826": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "AND",
      "path": "3"
    },
    "5827": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5828": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "ADD",
      "path": "3"
    },
    "5829": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5830": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5832": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5833": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "POP",
      "path": "3"
    },
    "5834": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5835": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "ADD",
      "path": "3"
    },
    "5836": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5837": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16D6"
    },
    "5840": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5841": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5842": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "5845": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        10050,
        10132
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5846": {
      "branch": 45,
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10050,
        10132
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5847": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16F2"
    },
    "5850": {
      "branch": 45,
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5851": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5853": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5860": {
      "op": "SHL"
    },
    "5861": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5862": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5863": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5865": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "ADD",
      "path": "3"
    },
    "5866": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "5869": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5870": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D7"
    },
    "5873": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        10042,
        10158
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5874": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10042,
        10158
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5875": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10180,
        10195
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x3"
    },
    "5877": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10180,
        10195
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5878": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10213,
        10222
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5880": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10213,
        10222
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5881": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5883": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5884": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5891": {
      "op": "SHL"
    },
    "5892": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5893": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "op": "SUB"
    },
    "5902": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10180,
        10195
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5903": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10180,
        10195
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5904": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10180,
        10195
      ],
      "op": "AND",
      "path": "3"
    },
    "5905": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10180,
        10195
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5906": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10204
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "5911": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10204
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5912": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1731"
    },
    "5915": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5916": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10213,
        10222
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5917": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10213,
        10222
      ],
      "op": "AND",
      "path": "3"
    },
    "5918": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10213,
        10222
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5919": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10225,
        10239
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D63100000"
    },
    "5929": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10225,
        10239
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5930": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5932": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "ADD",
      "path": "3"
    },
    "5933": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "5936": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        10173,
        10240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5937": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5938": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5940": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5942": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5943": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5944": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5945": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "SUB",
      "path": "3"
    },
    "5946": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5947": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5949": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5950": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "GAS",
      "path": "3"
    },
    "5951": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "CALL",
      "path": "3"
    },
    "5952": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5953": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5954": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5955": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1750"
    },
    "5958": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5959": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5960": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5962": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5963": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5964": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5965": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5967": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5968": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5969": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "POP",
      "path": "3"
    },
    "5970": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "POP",
      "path": "3"
    },
    "5971": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "POP",
      "path": "3"
    },
    "5972": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "POP",
      "path": "3"
    },
    "5973": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5975": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5976": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5977": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5979": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "NOT",
      "path": "3"
    },
    "5980": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "5982": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5983": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "ADD",
      "path": "3"
    },
    "5984": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "AND",
      "path": "3"
    },
    "5985": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5986": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "ADD",
      "path": "3"
    },
    "5987": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5988": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5990": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5991": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "POP",
      "path": "3"
    },
    "5992": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5993": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "ADD",
      "path": "3"
    },
    "5994": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5995": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1774"
    },
    "5998": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5999": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6000": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "6003": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        10173,
        10240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6004": {
      "branch": 46,
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10173,
        10240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6005": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1790"
    },
    "6008": {
      "branch": 46,
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6009": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6011": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6018": {
      "op": "SHL"
    },
    "6019": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6020": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6021": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6023": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "ADD",
      "path": "3"
    },
    "6024": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "6027": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6028": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235A"
    },
    "6031": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "i",
      "offset": [
        10165,
        10260
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6032": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        10165,
        10260
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6033": {
      "fn": "ForgeZap.OneTeste233",
      "offset": [
        9989,
        10263
      ],
      "op": "POP",
      "path": "3"
    },
    "6034": {
      "fn": "ForgeZap.OneTeste233",
      "jump": "o",
      "offset": [
        9989,
        10263
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6035": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8780,
        8982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6036": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 27,
      "value": "0x4"
    },
    "6038": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6039": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6040": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6042": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6043": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6048": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6050": {
      "op": "SHL"
    },
    "6051": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6052": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6053": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8878,
        8888
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6054": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6055": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6056": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "ADD",
      "path": "3"
    },
    "6057": {
      "op": "DUP4"
    },
    "6058": {
      "op": "SWAP1"
    },
    "6059": {
      "op": "MSTORE"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6062": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6064": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6066": {
      "op": "SHL"
    },
    "6067": {
      "op": "SUB"
    },
    "6068": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6069": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6070": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "AND",
      "path": "3"
    },
    "6071": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6072": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8877
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "6077": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6078": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8898,
        8902
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6079": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8898,
        8902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6080": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6081": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8846,
        8863
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6082": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8940
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "6087": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8940
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6093": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6095": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6096": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6097": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6098": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "SUB",
      "path": "3"
    },
    "6099": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6100": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6101": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "GAS",
      "path": "3"
    },
    "6102": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "6103": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6104": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6105": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6106": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17E7"
    },
    "6109": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6110": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6111": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6113": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6114": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6115": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6116": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6118": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6119": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6120": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "POP",
      "path": "3"
    },
    "6121": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "POP",
      "path": "3"
    },
    "6122": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "POP",
      "path": "3"
    },
    "6123": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "POP",
      "path": "3"
    },
    "6124": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6126": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6127": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6128": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6130": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "NOT",
      "path": "3"
    },
    "6131": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6133": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6134": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "ADD",
      "path": "3"
    },
    "6135": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "AND",
      "path": "3"
    },
    "6136": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6137": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "ADD",
      "path": "3"
    },
    "6138": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6139": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6141": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6142": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "POP",
      "path": "3"
    },
    "6143": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6144": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "ADD",
      "path": "3"
    },
    "6145": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6146": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180B"
    },
    "6149": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6150": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6151": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "6154": {
      "fn": "ForgeZap.OneTeste0",
      "jump": "i",
      "offset": [
        8905,
        8952
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6155": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8905,
        8952
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6156": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6158": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6159": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP5",
      "path": "3"
    },
    "6160": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "6165": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "AND",
      "path": "3"
    },
    "6166": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "6168": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SHL",
      "path": "3"
    },
    "6169": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6170": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6171": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6173": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "ADD",
      "path": "3"
    },
    "6174": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1829"
    },
    "6177": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6178": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6179": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6180": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6181": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "6184": {
      "fn": "ForgeZap.OneTeste0",
      "jump": "i",
      "offset": [
        8839,
        8953
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6185": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6186": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6188": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6190": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6191": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6192": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6193": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SUB",
      "path": "3"
    },
    "6194": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6195": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6197": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6198": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "GAS",
      "path": "3"
    },
    "6199": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "CALL",
      "path": "3"
    },
    "6200": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6201": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6202": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6203": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1848"
    },
    "6206": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6207": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6208": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6210": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6211": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6212": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6213": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6215": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6216": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6217": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "POP",
      "path": "3"
    },
    "6218": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "POP",
      "path": "3"
    },
    "6219": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "POP",
      "path": "3"
    },
    "6220": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "POP",
      "path": "3"
    },
    "6221": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6223": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6224": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6225": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6227": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "NOT",
      "path": "3"
    },
    "6228": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6230": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6231": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "ADD",
      "path": "3"
    },
    "6232": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "AND",
      "path": "3"
    },
    "6233": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6234": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "ADD",
      "path": "3"
    },
    "6235": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6236": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6238": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6239": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "POP",
      "path": "3"
    },
    "6240": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6241": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "ADD",
      "path": "3"
    },
    "6242": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6243": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x186C"
    },
    "6246": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6247": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6248": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "6251": {
      "fn": "ForgeZap.OneTeste0",
      "jump": "i",
      "offset": [
        8839,
        8953
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6252": {
      "branch": 47,
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8839,
        8953
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6253": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1790"
    },
    "6256": {
      "branch": 47,
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6257": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6259": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6260": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6266": {
      "op": "SHL"
    },
    "6267": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6268": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6269": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6271": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "ADD",
      "path": "3"
    },
    "6272": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "6275": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6276": {
      "fn": "ForgeZap.OneTeste0",
      "offset": [
        8831,
        8979
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D7"
    },
    "6279": {
      "fn": "ForgeZap.OneTeste0",
      "jump": "i",
      "offset": [
        8831,
        8979
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6280": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9486,
        9987
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6281": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9556,
        9571
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x3"
    },
    "6283": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9556,
        9571
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6284": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6286": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6287": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6292": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6294": {
      "op": "SHL"
    },
    "6295": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6296": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6303": {
      "op": "SHL"
    },
    "6304": {
      "op": "SUB"
    },
    "6305": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9556,
        9571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6306": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9556,
        9571
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6307": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9556,
        9571
      ],
      "op": "AND",
      "path": "3"
    },
    "6308": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9556,
        9571
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6309": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9585
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "6314": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9585
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6315": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18BE"
    },
    "6318": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6319": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9586,
        9596
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6320": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9586,
        9596
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6321": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9606,
        9610
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6322": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9606,
        9610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6323": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9613,
        9618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "6326": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9613,
        9618
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6327": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6329": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "ADD",
      "path": "3"
    },
    "6330": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "6333": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9549,
        9619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6334": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6335": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6337": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6339": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6340": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6341": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6342": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "SUB",
      "path": "3"
    },
    "6343": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6344": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6346": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6347": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "GAS",
      "path": "3"
    },
    "6348": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "CALL",
      "path": "3"
    },
    "6349": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6350": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6351": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6352": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18DD"
    },
    "6355": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6356": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6357": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6359": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6360": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6361": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6362": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6364": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6365": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6366": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "POP",
      "path": "3"
    },
    "6367": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "POP",
      "path": "3"
    },
    "6368": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "POP",
      "path": "3"
    },
    "6369": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "POP",
      "path": "3"
    },
    "6370": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6372": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6373": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6374": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6376": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "NOT",
      "path": "3"
    },
    "6377": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6379": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6380": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "ADD",
      "path": "3"
    },
    "6381": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "AND",
      "path": "3"
    },
    "6382": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6383": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "ADD",
      "path": "3"
    },
    "6384": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6385": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6387": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6388": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "POP",
      "path": "3"
    },
    "6389": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6390": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "ADD",
      "path": "3"
    },
    "6391": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6392": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1901"
    },
    "6395": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6396": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6397": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "6400": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9549,
        9619
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6401": {
      "branch": 48,
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9549,
        9619
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6402": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x191D"
    },
    "6405": {
      "branch": 48,
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6406": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6408": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6409": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6413": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6415": {
      "op": "SHL"
    },
    "6416": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6417": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6418": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6420": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "ADD",
      "path": "3"
    },
    "6421": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "6424": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6425": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D7"
    },
    "6428": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9541,
        9645
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6429": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9541,
        9645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6430": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9667,
        9682
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 29,
      "value": "0x3"
    },
    "6432": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9667,
        9682
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6433": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9700,
        9709
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6435": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9700,
        9709
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6436": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6438": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6439": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6446": {
      "op": "SHL"
    },
    "6447": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6448": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6455": {
      "op": "SHL"
    },
    "6456": {
      "op": "SUB"
    },
    "6457": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9667,
        9682
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6458": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9667,
        9682
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6459": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9667,
        9682
      ],
      "op": "AND",
      "path": "3"
    },
    "6460": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9667,
        9682
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6461": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9691
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "6466": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9691
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6467": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x195C"
    },
    "6470": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6471": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9700,
        9709
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6472": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9700,
        9709
      ],
      "op": "AND",
      "path": "3"
    },
    "6473": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9700,
        9709
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6474": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9712,
        9726
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D63100000"
    },
    "6484": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9712,
        9726
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6485": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6487": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "ADD",
      "path": "3"
    },
    "6488": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "6491": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9660,
        9727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6492": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6493": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6495": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6497": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6498": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6499": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6500": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "SUB",
      "path": "3"
    },
    "6501": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6502": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6504": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6505": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "GAS",
      "path": "3"
    },
    "6506": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "CALL",
      "path": "3"
    },
    "6507": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6508": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6509": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6510": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x197B"
    },
    "6513": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6514": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6515": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6517": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6518": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6519": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6520": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6522": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6523": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6524": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "POP",
      "path": "3"
    },
    "6525": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "POP",
      "path": "3"
    },
    "6526": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "POP",
      "path": "3"
    },
    "6527": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "POP",
      "path": "3"
    },
    "6528": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6530": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6531": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6532": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6534": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "NOT",
      "path": "3"
    },
    "6535": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6537": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6538": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "ADD",
      "path": "3"
    },
    "6539": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "AND",
      "path": "3"
    },
    "6540": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6541": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "ADD",
      "path": "3"
    },
    "6542": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6543": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6545": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6546": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "POP",
      "path": "3"
    },
    "6547": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6548": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "ADD",
      "path": "3"
    },
    "6549": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6550": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x199F"
    },
    "6553": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6554": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6555": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "6558": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9660,
        9727
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6559": {
      "branch": 49,
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9660,
        9727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6560": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19BB"
    },
    "6563": {
      "branch": 49,
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6564": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6566": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6567": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6573": {
      "op": "SHL"
    },
    "6574": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6575": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6576": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6578": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "ADD",
      "path": "3"
    },
    "6579": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "6582": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6583": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235A"
    },
    "6586": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9652,
        9747
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6587": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9652,
        9747
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6588": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6590": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6591": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6592": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9787,
        9788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6594": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6595": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6596": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6597": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6599": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6600": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "ADD",
      "path": "3"
    },
    "6601": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6602": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6603": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9749,
        9770
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6605": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9749,
        9770
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6606": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6608": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6609": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "ADD",
      "path": "3"
    },
    "6610": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6611": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6612": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "6613": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6614": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9773,
        9789
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "6615": {
      "op": "POP"
    },
    "6616": {
      "op": "POP"
    },
    "6617": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9801,
        9816
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 30,
      "value": "0x3"
    },
    "6619": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9801,
        9816
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6620": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6621": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6622": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6623": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "6624": {
      "op": "POP"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6631": {
      "op": "SHL"
    },
    "6632": {
      "op": "SUB"
    },
    "6633": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9801,
        9816
      ],
      "op": "AND",
      "path": "3"
    },
    "6634": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9801,
        9816
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6635": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6636": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6637": {
      "op": "POP"
    },
    "6638": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9801,
        9816
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6640": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9801,
        9816
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6641": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19FC"
    },
    "6644": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6645": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19FC"
    },
    "6648": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "6651": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9791,
        9798
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6652": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6659": {
      "op": "SHL"
    },
    "6660": {
      "op": "SUB"
    },
    "6661": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9816
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6662": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9816
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6663": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9816
      ],
      "op": "AND",
      "path": "3"
    },
    "6664": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6666": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6667": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6668": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "MUL",
      "path": "3"
    },
    "6669": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6670": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6671": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6672": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "ADD",
      "path": "3"
    },
    "6673": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9798
      ],
      "op": "ADD",
      "path": "3"
    },
    "6674": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9791,
        9816
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6675": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 31,
      "value": "0x4"
    },
    "6677": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6678": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6679": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6680": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6681": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "AND",
      "path": "3"
    },
    "6682": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6683": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9822
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6684": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9822
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6685": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6687": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9828,
        9845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6688": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6689": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "LT",
      "path": "3"
    },
    "6690": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A2D"
    },
    "6693": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6694": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A2D"
    },
    "6697": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "6700": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9818,
        9825
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6701": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6708": {
      "op": "SHL"
    },
    "6709": {
      "op": "SUB"
    },
    "6710": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9845
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6711": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9845
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6712": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9845
      ],
      "op": "AND",
      "path": "3"
    },
    "6713": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6715": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6716": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6717": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "MUL",
      "path": "3"
    },
    "6718": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6719": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6720": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "6721": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "ADD",
      "path": "3"
    },
    "6722": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9825
      ],
      "op": "ADD",
      "path": "3"
    },
    "6723": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9818,
        9845
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6724": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x1F"
    },
    "6726": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6727": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6729": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6730": {
      "op": "PUSH4",
      "value": "0x38ED1739"
    },
    "6735": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6737": {
      "op": "SHL"
    },
    "6738": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6739": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6740": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6741": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "AND",
      "path": "3"
    },
    "6742": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6743": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9902
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38ED1739"
    },
    "6748": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9902
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6749": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA6"
    },
    "6752": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6753": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9903,
        9908
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2710"
    },
    "6756": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9903,
        9908
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6757": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6759": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9866,
        9875
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6760": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9913,
        9917
      ],
      "op": "DUP7",
      "path": "3"
    },
    "6761": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9913,
        9917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6762": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9919,
        9961
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xBB3A3D4A665AB4E9D5594077163C0044D1290699"
    },
    "6783": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9919,
        9961
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6784": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9963,
        9983
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D630FFFFF"
    },
    "6794": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9963,
        9983
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6795": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6797": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "ADD",
      "path": "3"
    },
    "6798": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        9847,
        9984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23DD"
    },
    "6801": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "i",
      "offset": [
        9847,
        9984
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6802": {
      "offset": [
        143,
        171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6803": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "6805": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6806": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6807": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6808": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6809": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "LT",
      "path": "3"
    },
    "6810": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AA2"
    },
    "6813": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6814": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6816": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6817": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6818": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6819": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6821": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6822": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6823": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6824": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6826": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6827": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6828": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "6829": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "ADD",
      "path": "3"
    },
    "6830": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6835": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6837": {
      "op": "SHL"
    },
    "6838": {
      "op": "SUB"
    },
    "6839": {
      "offset": [
        143,
        171
      ],
      "op": "AND",
      "path": "3"
    },
    "6840": {
      "fn": "ForgeZap.OneTeste44233",
      "offset": [
        143,
        171
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6841": {
      "op": "POP"
    },
    "6842": {
      "offset": [
        143,
        171
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6843": {
      "fn": "ForgeZap.OneTeste44233",
      "jump": "o",
      "offset": [
        143,
        171
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6844": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        8985,
        9479
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6845": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x4"
    },
    "6847": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6848": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6849": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6851": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6852": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6857": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6859": {
      "op": "SHL"
    },
    "6860": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6861": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6868": {
      "op": "SHL"
    },
    "6869": {
      "op": "SUB"
    },
    "6870": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6871": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6872": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "AND",
      "path": "3"
    },
    "6873": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9052,
        9069
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6874": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9083
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "6879": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9083
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6880": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AF6"
    },
    "6883": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6884": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9084,
        9094
      ],
      "op": "CALLER",
      "path": "3"
    },
    "6885": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9084,
        9094
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6886": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9104,
        9108
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "6887": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9104,
        9108
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6888": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9111,
        9128
      ],
      "op": "PUSH7",
      "path": "3",
      "value": "0x2386F26FC10000"
    },
    "6896": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9111,
        9128
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6897": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "ADD",
      "path": "3"
    },
    "6898": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22F4"
    },
    "6901": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9045,
        9129
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6902": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6903": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6905": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6907": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6908": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6909": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP4",
      "path": "3"
    },
    "6910": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "SUB",
      "path": "3"
    },
    "6911": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6912": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6914": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP8",
      "path": "3"
    },
    "6915": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "GAS",
      "path": "3"
    },
    "6916": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "CALL",
      "path": "3"
    },
    "6917": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6918": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6919": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6920": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B15"
    },
    "6923": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6924": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6925": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6927": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6928": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "6929": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6930": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6932": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6933": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6934": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "POP",
      "path": "3"
    },
    "6935": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "POP",
      "path": "3"
    },
    "6936": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "POP",
      "path": "3"
    },
    "6937": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "POP",
      "path": "3"
    },
    "6938": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6940": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6941": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "6942": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6944": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "NOT",
      "path": "3"
    },
    "6945": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "6947": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6948": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "ADD",
      "path": "3"
    },
    "6949": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "AND",
      "path": "3"
    },
    "6950": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6951": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "ADD",
      "path": "3"
    },
    "6952": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6953": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6955": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6956": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "POP",
      "path": "3"
    },
    "6957": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6958": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "ADD",
      "path": "3"
    },
    "6959": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6960": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B39"
    },
    "6963": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6964": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6965": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "6968": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9045,
        9129
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6969": {
      "branch": 50,
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9045,
        9129
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6970": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B55"
    },
    "6973": {
      "branch": 50,
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6974": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6976": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6983": {
      "op": "SHL"
    },
    "6984": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6985": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6986": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6988": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "ADD",
      "path": "3"
    },
    "6989": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "6992": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6993": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D7"
    },
    "6996": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9037,
        9155
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6997": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9037,
        9155
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6998": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 34,
      "value": "0x4"
    },
    "7000": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7001": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7002": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9212,
        9221
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7004": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9212,
        9221
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7005": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7007": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7008": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7015": {
      "op": "SHL"
    },
    "7016": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7017": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7024": {
      "op": "SHL"
    },
    "7025": {
      "op": "SUB"
    },
    "7026": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7027": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7028": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "AND",
      "path": "3"
    },
    "7029": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9177,
        9194
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7030": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9203
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "7035": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9203
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7036": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B92"
    },
    "7039": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7040": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9212,
        9221
      ],
      "op": "AND",
      "path": "3"
    },
    "7041": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9212,
        9221
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7042": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9224,
        9238
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D63100000"
    },
    "7052": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9224,
        9238
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7053": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "ADD",
      "path": "3"
    },
    "7054": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "7057": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9170,
        9239
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7058": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7059": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7061": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7063": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7064": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7065": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7066": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "SUB",
      "path": "3"
    },
    "7067": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7068": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7070": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7071": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "GAS",
      "path": "3"
    },
    "7072": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "CALL",
      "path": "3"
    },
    "7073": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7074": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7075": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7076": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BB1"
    },
    "7079": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7080": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7081": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7083": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7084": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7085": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7086": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7088": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7089": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7090": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "POP",
      "path": "3"
    },
    "7091": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "POP",
      "path": "3"
    },
    "7092": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "POP",
      "path": "3"
    },
    "7093": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "POP",
      "path": "3"
    },
    "7094": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7096": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7097": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7098": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7100": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "NOT",
      "path": "3"
    },
    "7101": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7103": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7104": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "ADD",
      "path": "3"
    },
    "7105": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "AND",
      "path": "3"
    },
    "7106": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7107": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "ADD",
      "path": "3"
    },
    "7108": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7109": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7111": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7112": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "POP",
      "path": "3"
    },
    "7113": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7114": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "ADD",
      "path": "3"
    },
    "7115": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7116": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD5"
    },
    "7119": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7120": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7121": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "7124": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9170,
        9239
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7125": {
      "branch": 51,
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9170,
        9239
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7126": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BF1"
    },
    "7129": {
      "branch": 51,
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7130": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7132": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7141": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7142": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7144": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "ADD",
      "path": "3"
    },
    "7145": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "7148": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7149": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x235A"
    },
    "7152": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9162,
        9259
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7153": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9162,
        9259
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7154": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7156": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7157": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7158": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9299,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7160": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7161": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7162": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7163": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7165": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7166": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "ADD",
      "path": "3"
    },
    "7167": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7168": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7169": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9261,
        9282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7171": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9261,
        9282
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7172": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7174": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7175": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "ADD",
      "path": "3"
    },
    "7176": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7177": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7178": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "7179": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7180": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9285,
        9301
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "7181": {
      "op": "POP"
    },
    "7182": {
      "op": "POP"
    },
    "7183": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9313,
        9330
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x4"
    },
    "7185": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9313,
        9330
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7186": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7187": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7188": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7189": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7190": {
      "op": "POP"
    },
    "7191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7195": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7197": {
      "op": "SHL"
    },
    "7198": {
      "op": "SUB"
    },
    "7199": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9313,
        9330
      ],
      "op": "AND",
      "path": "3"
    },
    "7200": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9313,
        9330
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7201": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7202": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7203": {
      "op": "POP"
    },
    "7204": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9313,
        9330
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7206": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9313,
        9330
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7207": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C32"
    },
    "7210": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7211": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C32"
    },
    "7214": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "7217": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9303,
        9310
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7218": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7225": {
      "op": "SHL"
    },
    "7226": {
      "op": "SUB"
    },
    "7227": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9330
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7228": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9330
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7229": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9330
      ],
      "op": "AND",
      "path": "3"
    },
    "7230": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7232": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7233": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7234": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "MUL",
      "path": "3"
    },
    "7235": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7236": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7237": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7238": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "ADD",
      "path": "3"
    },
    "7239": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9310
      ],
      "op": "ADD",
      "path": "3"
    },
    "7240": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9303,
        9330
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7241": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 36,
      "value": "0x3"
    },
    "7243": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7244": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7245": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7246": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7247": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "AND",
      "path": "3"
    },
    "7248": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7249": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9336
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7250": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9336
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7251": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7253": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9342,
        9357
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7254": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7255": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "LT",
      "path": "3"
    },
    "7256": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C63"
    },
    "7259": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7260": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C63"
    },
    "7263": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "7266": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9332,
        9339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7267": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7274": {
      "op": "SHL"
    },
    "7275": {
      "op": "SUB"
    },
    "7276": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9357
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7277": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9357
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7278": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9357
      ],
      "op": "AND",
      "path": "3"
    },
    "7279": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7281": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7282": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7283": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "MUL",
      "path": "3"
    },
    "7284": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7285": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7286": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7287": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "ADD",
      "path": "3"
    },
    "7288": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9339
      ],
      "op": "ADD",
      "path": "3"
    },
    "7289": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9332,
        9357
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7290": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 37,
      "value": "0x1F"
    },
    "7292": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7293": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7295": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7296": {
      "op": "PUSH4",
      "value": "0x38ED1739"
    },
    "7301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7303": {
      "op": "SHL"
    },
    "7304": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7305": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7306": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7307": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "AND",
      "path": "3"
    },
    "7308": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7309": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9414
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38ED1739"
    },
    "7314": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9414
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7315": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA6"
    },
    "7318": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7319": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9415,
        9432
      ],
      "op": "PUSH7",
      "path": "3",
      "value": "0x2386F26FC10000"
    },
    "7327": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9415,
        9432
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7328": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7330": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9378,
        9387
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7331": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9437,
        9441
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7332": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9437,
        9441
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7333": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9443,
        9453
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7334": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9443,
        9453
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7335": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9455,
        9475
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x56BC75E2D630FFFFF"
    },
    "7345": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9455,
        9475
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7346": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7348": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "ADD",
      "path": "3"
    },
    "7349": {
      "fn": "ForgeZap.OneTeste32",
      "offset": [
        9359,
        9476
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23DD"
    },
    "7352": {
      "fn": "ForgeZap.OneTeste32",
      "jump": "i",
      "offset": [
        9359,
        9476
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7353": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7354": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10603,
        10621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7356": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10639,
        10656
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7357": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10699,
        10716
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7359": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10739,
        10765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7360": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 38,
      "value": "0x22"
    },
    "7362": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7364": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7365": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7366": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7367": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "7370": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "EXP",
      "path": "3"
    },
    "7371": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7372": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "DIV",
      "path": "3"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7379": {
      "op": "SHL"
    },
    "7380": {
      "op": "SUB"
    },
    "7381": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10828
      ],
      "op": "AND",
      "path": "3"
    },
    "7382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7388": {
      "op": "SHL"
    },
    "7389": {
      "op": "SUB"
    },
    "7390": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10840
      ],
      "op": "AND",
      "path": "3"
    },
    "7391": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10840
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x902F1AC"
    },
    "7396": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7398": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7399": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7400": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "7405": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "AND",
      "path": "3"
    },
    "7406": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "7408": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "SHL",
      "path": "3"
    },
    "7409": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7410": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7411": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7413": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "ADD",
      "path": "3"
    },
    "7414": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "7416": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7418": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7419": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7420": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7421": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "SUB",
      "path": "3"
    },
    "7422": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7423": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7424": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "GAS",
      "path": "3"
    },
    "7425": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "7426": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7427": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7428": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7429": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D12"
    },
    "7432": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7433": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7434": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7436": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7437": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7438": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7439": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7441": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7442": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7443": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "POP",
      "path": "3"
    },
    "7444": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "POP",
      "path": "3"
    },
    "7445": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "POP",
      "path": "3"
    },
    "7446": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "POP",
      "path": "3"
    },
    "7447": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7449": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7450": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7451": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7453": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "NOT",
      "path": "3"
    },
    "7454": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7456": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7457": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "ADD",
      "path": "3"
    },
    "7458": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "AND",
      "path": "3"
    },
    "7459": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7460": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "ADD",
      "path": "3"
    },
    "7461": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7462": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7464": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7465": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "POP",
      "path": "3"
    },
    "7466": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7467": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "ADD",
      "path": "3"
    },
    "7468": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7469": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D36"
    },
    "7472": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7473": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7474": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x224B"
    },
    "7477": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        10825,
        10842
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7478": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10825,
        10842
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7479": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10779,
        10842
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7480": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10779,
        10842
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7481": {
      "op": "POP"
    },
    "7482": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10779,
        10842
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7483": {
      "op": "POP"
    },
    "7484": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10779,
        10842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7485": {
      "op": "POP"
    },
    "7486": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10888,
        10903
      ],
      "op": "PUSH10",
      "path": "3",
      "value": "0x1BC16D674EC80000000"
    },
    "7497": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10871,
        10885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7499": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10969,
        10987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D5D"
    },
    "7502": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10888,
        10903
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7507": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7509": {
      "op": "SHL"
    },
    "7510": {
      "op": "SUB"
    },
    "7511": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10969,
        10987
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7512": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10969,
        10987
      ],
      "op": "AND",
      "path": "3"
    },
    "7513": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10969,
        10987
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x229B"
    },
    "7516": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        10969,
        10987
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7517": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10969,
        10987
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7518": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10945,
        10963
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D70"
    },
    "7521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7525": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "7527": {
      "op": "SHL"
    },
    "7528": {
      "op": "SUB"
    },
    "7529": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10945,
        10963
      ],
      "op": "DUP8",
      "path": "3"
    },
    "7530": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10945,
        10963
      ],
      "op": "AND",
      "path": "3"
    },
    "7531": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10945,
        10951
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7532": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10945,
        10963
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "7535": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        10945,
        10963
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7536": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10945,
        10963
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7537": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10944,
        10988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D7A"
    },
    "7540": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10944,
        10988
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7541": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10944,
        10988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7542": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10944,
        10988
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "7545": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        10944,
        10988
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7546": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10944,
        10988
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7547": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10917,
        10988
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7548": {
      "op": "POP"
    },
    "7549": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11002,
        11025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7551": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11052,
        11055
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "7553": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D8B"
    },
    "7556": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10917,
        10988
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7557": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11047,
        11049
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5F"
    },
    "7559": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11049
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "7562": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11028,
        11049
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7563": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11049
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7564": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D95"
    },
    "7567": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11055
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7568": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11055
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7569": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "7572": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11028,
        11055
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7573": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11028,
        11055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7574": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7576": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7577": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7578": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7580": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7581": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7582": {
      "op": "PUSH4",
      "value": "0x4B9B147B"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "7589": {
      "op": "SHL"
    },
    "7590": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7591": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7592": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7593": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7594": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11002,
        11055
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7595": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11002,
        11055
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "7596": {
      "op": "POP"
    },
    "7597": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11148,
        11170
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7599": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11148,
        11170
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7606": {
      "op": "SHL"
    },
    "7607": {
      "op": "SUB"
    },
    "7608": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7609": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7610": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "AND",
      "path": "3"
    },
    "7611": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7612": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11220
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x60B29259"
    },
    "7617": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11220
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7618": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7619": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7620": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11245
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x973628F6"
    },
    "7625": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11245
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7626": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7628": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7629": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7630": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ADD",
      "path": "3"
    },
    "7631": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7632": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7633": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7634": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7635": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7636": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SUB",
      "path": "3"
    },
    "7637": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ADD",
      "path": "3"
    },
    "7638": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7639": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11204
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7640": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "GAS",
      "path": "3"
    },
    "7641": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "7642": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7643": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7644": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7645": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1DEA"
    },
    "7648": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7649": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7650": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7652": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7653": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7654": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7655": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7657": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7658": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7659": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "POP",
      "path": "3"
    },
    "7660": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "POP",
      "path": "3"
    },
    "7661": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "POP",
      "path": "3"
    },
    "7662": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "POP",
      "path": "3"
    },
    "7663": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7665": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7666": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7667": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7669": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "NOT",
      "path": "3"
    },
    "7670": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7672": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7673": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ADD",
      "path": "3"
    },
    "7674": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "AND",
      "path": "3"
    },
    "7675": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7676": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ADD",
      "path": "3"
    },
    "7677": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7678": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7680": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7681": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "POP",
      "path": "3"
    },
    "7682": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7683": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "ADD",
      "path": "3"
    },
    "7684": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7685": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E0E"
    },
    "7688": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7689": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7690": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "7693": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11221,
        11247
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7694": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11221,
        11247
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7695": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7697": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7698": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7699": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7701": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7702": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7703": {
      "op": "PUSH4",
      "value": "0x5C9302C9"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7710": {
      "op": "SHL"
    },
    "7711": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7712": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7713": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7714": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7721": {
      "op": "SHL"
    },
    "7722": {
      "op": "SUB"
    },
    "7723": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7724": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7725": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "AND",
      "path": "3"
    },
    "7726": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7727": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11273
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5C9302C9"
    },
    "7732": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11273
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7733": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7735": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7736": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP5",
      "path": "3"
    },
    "7737": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ADD",
      "path": "3"
    },
    "7738": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "7739": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7740": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7741": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SUB",
      "path": "3"
    },
    "7742": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ADD",
      "path": "3"
    },
    "7743": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7744": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11262
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7745": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "GAS",
      "path": "3"
    },
    "7746": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "7747": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7748": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7749": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7750": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E53"
    },
    "7753": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7754": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7755": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7757": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7758": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7759": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7760": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7762": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7763": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7764": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "POP",
      "path": "3"
    },
    "7765": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "POP",
      "path": "3"
    },
    "7766": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "POP",
      "path": "3"
    },
    "7767": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "POP",
      "path": "3"
    },
    "7768": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7770": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7771": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7772": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7774": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "NOT",
      "path": "3"
    },
    "7775": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7777": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7778": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ADD",
      "path": "3"
    },
    "7779": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "AND",
      "path": "3"
    },
    "7780": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7781": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ADD",
      "path": "3"
    },
    "7782": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7783": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7785": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7786": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "POP",
      "path": "3"
    },
    "7787": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7788": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "ADD",
      "path": "3"
    },
    "7789": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7790": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E77"
    },
    "7793": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7794": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7795": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "7798": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11249,
        11275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7799": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11249,
        11275
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7800": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7802": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7809": {
      "op": "SHL"
    },
    "7810": {
      "op": "SUB"
    },
    "7811": {
      "op": "NOT"
    },
    "7812": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "7814": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP6",
      "path": "3"
    },
    "7815": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7816": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "SHL",
      "path": "3"
    },
    "7817": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "AND",
      "path": "3"
    },
    "7818": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7819": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7820": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7822": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7823": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "ADD",
      "path": "3"
    },
    "7824": {
      "op": "SWAP3"
    },
    "7825": {
      "op": "SWAP1"
    },
    "7826": {
      "op": "SWAP3"
    },
    "7827": {
      "op": "MSTORE"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7830": {
      "op": "DUP3"
    },
    "7831": {
      "op": "ADD"
    },
    "7832": {
      "op": "MSTORE"
    },
    "7833": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7835": {
      "op": "ADD"
    },
    "7836": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "7838": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7840": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7841": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7842": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7843": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "SUB",
      "path": "3"
    },
    "7844": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7845": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP7",
      "path": "3"
    },
    "7846": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "GAS",
      "path": "3"
    },
    "7847": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "7848": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7849": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7850": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7851": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EB8"
    },
    "7854": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7855": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7856": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7858": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7859": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "7860": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7861": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7863": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "REVERT",
      "path": "3"
    },
    "7864": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7865": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "POP",
      "path": "3"
    },
    "7866": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "POP",
      "path": "3"
    },
    "7867": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "POP",
      "path": "3"
    },
    "7868": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "POP",
      "path": "3"
    },
    "7869": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7871": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7872": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "7873": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7875": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "NOT",
      "path": "3"
    },
    "7876": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "7878": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7879": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "ADD",
      "path": "3"
    },
    "7880": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "AND",
      "path": "3"
    },
    "7881": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7882": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "ADD",
      "path": "3"
    },
    "7883": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7884": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7886": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7887": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "POP",
      "path": "3"
    },
    "7888": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7889": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "ADD",
      "path": "3"
    },
    "7890": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7891": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EDC"
    },
    "7894": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7895": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7896": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21FF"
    },
    "7899": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11191,
        11276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7900": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11191,
        11276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7901": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11173,
        11276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EE6"
    },
    "7904": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11173,
        11276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7905": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11173,
        11188
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7906": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11173,
        11276
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2218"
    },
    "7909": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11173,
        11276
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7910": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11173,
        11276
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7911": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11148,
        11276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7912": {
      "op": "POP"
    },
    "7913": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11291,
        11310
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7915": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11336,
        11337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "7917": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11314,
        11332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EF7"
    },
    "7920": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11148,
        11276
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7921": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11331,
        11332
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "7923": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11314,
        11332
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22B3"
    },
    "7926": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11314,
        11332
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7927": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11314,
        11332
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7928": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11313,
        11337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F01"
    },
    "7931": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11313,
        11337
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7932": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11313,
        11337
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7933": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11313,
        11337
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22D2"
    },
    "7936": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "i",
      "offset": [
        11313,
        11337
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7937": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11313,
        11337
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7938": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        11291,
        11337
      ],
      "op": "SWAP10",
      "path": "3"
    },
    "7939": {
      "fn": "ForgeZap.viewMinFee",
      "offset": [
        10561,
        11367
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "7940": {
      "op": "POP"
    },
    "7941": {
      "op": "POP"
    },
    "7942": {
      "op": "POP"
    },
    "7943": {
      "op": "POP"
    },
    "7944": {
      "op": "POP"
    },
    "7945": {
      "op": "POP"
    },
    "7946": {
      "op": "POP"
    },
    "7947": {
      "op": "POP"
    },
    "7948": {
      "op": "POP"
    },
    "7949": {
      "fn": "ForgeZap.viewMinFee",
      "jump": "o",
      "offset": [
        10561,
        11367
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7950": {
      "fn": "ForgeZap.approes",
      "offset": [
        11369,
        11609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7951": {
      "offset": [
        555,
        571
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7953": {
      "offset": [
        589,
        595
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7954": {
      "offset": [
        585,
        694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7955": {
      "offset": [
        602,
        612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7957": {
      "offset": [
        602,
        619
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7958": {
      "offset": [
        599,
        619
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7959": {
      "fn": "ForgeZap.approes",
      "offset": [
        599,
        619
      ],
      "op": "LT",
      "path": "3"
    },
    "7960": {
      "offset": [
        585,
        694
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7961": {
      "fn": "ForgeZap.approes",
      "offset": [
        585,
        694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F6B"
    },
    "7964": {
      "fn": "ForgeZap.approes",
      "offset": [
        585,
        694
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7965": {
      "offset": [
        652,
        662
      ],
      "op": "CALLER",
      "path": "3"
    },
    "7966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7972": {
      "op": "SHL"
    },
    "7973": {
      "op": "SUB"
    },
    "7974": {
      "offset": [
        635,
        662
      ],
      "op": "AND",
      "path": "3"
    },
    "7975": {
      "offset": [
        635,
        645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "7977": {
      "offset": [
        646,
        647
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7978": {
      "offset": [
        635,
        648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7979": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7980": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7981": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "LT",
      "path": "3"
    },
    "7982": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F39"
    },
    "7985": {
      "offset": [
        635,
        648
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7986": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F39"
    },
    "7989": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2174"
    },
    "7992": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        635,
        648
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7993": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7994": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7996": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7997": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7998": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7999": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8001": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8002": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8003": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "8004": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "ADD",
      "path": "3"
    },
    "8005": {
      "fn": "ForgeZap.approes",
      "offset": [
        635,
        648
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8012": {
      "op": "SHL"
    },
    "8013": {
      "op": "SUB"
    },
    "8014": {
      "offset": [
        635,
        648
      ],
      "op": "AND",
      "path": "3"
    },
    "8015": {
      "offset": [
        635,
        662
      ],
      "op": "EQ",
      "path": "3"
    },
    "8016": {
      "offset": [
        632,
        690
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8017": {
      "fn": "ForgeZap.approes",
      "offset": [
        632,
        690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F59"
    },
    "8020": {
      "offset": [
        632,
        690
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8021": {
      "offset": [
        681,
        685
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8023": {
      "offset": [
        667,
        685
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8024": {
      "fn": "ForgeZap.approes",
      "offset": [
        667,
        685
      ],
      "op": "POP",
      "path": "3"
    },
    "8025": {
      "offset": [
        632,
        690
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8026": {
      "offset": [
        621,
        624
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8027": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F63"
    },
    "8030": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8031": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21A0"
    },
    "8034": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        621,
        624
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8035": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8036": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8037": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "POP",
      "path": "3"
    },
    "8038": {
      "fn": "ForgeZap.approes",
      "offset": [
        621,
        624
      ],
      "op": "POP",
      "path": "3"
    },
    "8039": {
      "offset": [
        585,
        694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F12"
    },
    "8042": {
      "fn": "ForgeZap.approes",
      "offset": [
        585,
        694
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8043": {
      "fn": "ForgeZap.approes",
      "offset": [
        585,
        694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8044": {
      "op": "POP"
    },
    "8045": {
      "offset": [
        725,
        730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "8047": {
      "fn": "ForgeZap.approes",
      "offset": [
        725,
        730
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8054": {
      "op": "SHL"
    },
    "8055": {
      "op": "SUB"
    },
    "8056": {
      "offset": [
        725,
        730
      ],
      "op": "AND",
      "path": "3"
    },
    "8057": {
      "offset": [
        711,
        721
      ],
      "op": "CALLER",
      "path": "3"
    },
    "8058": {
      "offset": [
        711,
        730
      ],
      "op": "EQ",
      "path": "3"
    },
    "8059": {
      "branch": 52,
      "fn": "ForgeZap.approes",
      "offset": [
        711,
        730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8060": {
      "offset": [
        711,
        745
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F82"
    },
    "8063": {
      "branch": 52,
      "offset": [
        711,
        745
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8064": {
      "fn": "ForgeZap.approes",
      "offset": [
        711,
        745
      ],
      "op": "POP",
      "path": "3"
    },
    "8065": {
      "offset": [
        734,
        745
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8066": {
      "offset": [
        711,
        745
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8067": {
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F9E"
    },
    "8070": {
      "offset": [
        703,
        786
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8071": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8073": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8074": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8080": {
      "op": "SHL"
    },
    "8081": {
      "offset": [
        703,
        786
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8082": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8083": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8085": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "ADD",
      "path": "3"
    },
    "8086": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62E"
    },
    "8089": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8090": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21BB"
    },
    "8093": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        703,
        786
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8094": {
      "fn": "ForgeZap.approes",
      "offset": [
        703,
        786
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8095": {
      "fn": "ForgeZap.approes",
      "offset": [
        11424,
        11439
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 39,
      "value": "0x3"
    },
    "8097": {
      "fn": "ForgeZap.approes",
      "offset": [
        11424,
        11439
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8098": {
      "fn": "ForgeZap.approes",
      "offset": [
        11457,
        11470
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8100": {
      "fn": "ForgeZap.approes",
      "offset": [
        11457,
        11470
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8101": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8103": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8104": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8111": {
      "op": "SHL"
    },
    "8112": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8113": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8120": {
      "op": "SHL"
    },
    "8121": {
      "op": "SUB"
    },
    "8122": {
      "fn": "ForgeZap.approes",
      "offset": [
        11424,
        11439
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8123": {
      "fn": "ForgeZap.approes",
      "offset": [
        11424,
        11439
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8124": {
      "fn": "ForgeZap.approes",
      "offset": [
        11424,
        11439
      ],
      "op": "AND",
      "path": "3"
    },
    "8125": {
      "fn": "ForgeZap.approes",
      "offset": [
        11424,
        11439
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8126": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11448
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "8131": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11448
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8132": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FDE"
    },
    "8135": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8136": {
      "fn": "ForgeZap.approes",
      "offset": [
        11457,
        11470
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8137": {
      "fn": "ForgeZap.approes",
      "offset": [
        11457,
        11470
      ],
      "op": "AND",
      "path": "3"
    },
    "8138": {
      "fn": "ForgeZap.approes",
      "offset": [
        11457,
        11470
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8139": {
      "fn": "ForgeZap.approes",
      "offset": [
        11473,
        11496
      ],
      "op": "PUSH10",
      "path": "3",
      "value": "0x152D02C7E14AF67FFFFF"
    },
    "8150": {
      "fn": "ForgeZap.approes",
      "offset": [
        11473,
        11496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8151": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8153": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "ADD",
      "path": "3"
    },
    "8154": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "8157": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        11417,
        11497
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8158": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8159": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8161": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8163": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8164": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8165": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8166": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "SUB",
      "path": "3"
    },
    "8167": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8168": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8170": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8171": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "GAS",
      "path": "3"
    },
    "8172": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "CALL",
      "path": "3"
    },
    "8173": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8174": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8175": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8176": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FFD"
    },
    "8179": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8180": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8181": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8183": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8184": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8185": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8186": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8188": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8189": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8190": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "POP",
      "path": "3"
    },
    "8191": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "POP",
      "path": "3"
    },
    "8192": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "POP",
      "path": "3"
    },
    "8193": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "POP",
      "path": "3"
    },
    "8194": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8196": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8197": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8198": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8200": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "NOT",
      "path": "3"
    },
    "8201": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8203": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8204": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "ADD",
      "path": "3"
    },
    "8205": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "AND",
      "path": "3"
    },
    "8206": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8207": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "ADD",
      "path": "3"
    },
    "8208": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8209": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8211": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8212": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "POP",
      "path": "3"
    },
    "8213": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8214": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "ADD",
      "path": "3"
    },
    "8215": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8216": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2021"
    },
    "8219": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8220": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8221": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "8224": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        11417,
        11497
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8225": {
      "fn": "ForgeZap.approes",
      "offset": [
        11417,
        11497
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8226": {
      "op": "POP"
    },
    "8227": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x4"
    },
    "8229": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8230": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8231": {
      "fn": "ForgeZap.approes",
      "offset": [
        11550,
        11559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8233": {
      "fn": "ForgeZap.approes",
      "offset": [
        11550,
        11559
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "8234": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8236": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8237": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "8242": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8244": {
      "op": "SHL"
    },
    "8245": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8246": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8253": {
      "op": "SHL"
    },
    "8254": {
      "op": "SUB"
    },
    "8255": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8256": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8257": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "AND",
      "path": "3"
    },
    "8258": {
      "fn": "ForgeZap.approes",
      "offset": [
        11515,
        11532
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8259": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11541
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "8264": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11541
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8265": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2068"
    },
    "8268": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8269": {
      "fn": "ForgeZap.approes",
      "offset": [
        11550,
        11559
      ],
      "op": "AND",
      "path": "3"
    },
    "8270": {
      "fn": "ForgeZap.approes",
      "offset": [
        11550,
        11559
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8271": {
      "fn": "ForgeZap.approes",
      "offset": [
        11562,
        11604
      ],
      "op": "PUSH18",
      "path": "3",
      "value": "0xB7ABC627050305ADF14A3D9E3FFFFFFFFFF"
    },
    "8290": {
      "fn": "ForgeZap.approes",
      "offset": [
        11562,
        11604
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8291": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "ADD",
      "path": "3"
    },
    "8292": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2341"
    },
    "8295": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        11508,
        11605
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8296": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8297": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "8299": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8301": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8302": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8303": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP4",
      "path": "3"
    },
    "8304": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "SUB",
      "path": "3"
    },
    "8305": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8306": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8308": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP8",
      "path": "3"
    },
    "8309": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "GAS",
      "path": "3"
    },
    "8310": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "CALL",
      "path": "3"
    },
    "8311": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8312": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8313": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8314": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2087"
    },
    "8317": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8318": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8319": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8321": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8322": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "8323": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8324": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8326": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "REVERT",
      "path": "3"
    },
    "8327": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8328": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "POP",
      "path": "3"
    },
    "8329": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "POP",
      "path": "3"
    },
    "8330": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "POP",
      "path": "3"
    },
    "8331": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "POP",
      "path": "3"
    },
    "8332": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8334": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8335": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "8336": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8338": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "NOT",
      "path": "3"
    },
    "8339": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "8341": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8342": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "ADD",
      "path": "3"
    },
    "8343": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "AND",
      "path": "3"
    },
    "8344": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8345": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "ADD",
      "path": "3"
    },
    "8346": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP1",
      "path": "3"
    },
    "8347": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8349": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8350": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "POP",
      "path": "3"
    },
    "8351": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8352": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "ADD",
      "path": "3"
    },
    "8353": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8354": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20AB"
    },
    "8357": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "8358": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "8359": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2318"
    },
    "8362": {
      "fn": "ForgeZap.approes",
      "jump": "i",
      "offset": [
        11508,
        11605
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8363": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8364": {
      "fn": "ForgeZap.approes",
      "offset": [
        11508,
        11605
      ],
      "op": "POP",
      "path": "3"
    },
    "8365": {
      "offset": [
        549,
        804
      ],
      "op": "POP",
      "path": "3"
    },
    "8366": {
      "fn": "ForgeZap.approes",
      "jump": "o",
      "offset": [
        11369,
        11609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8367": {
      "op": "JUMPDEST"
    },
    "8368": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8372": {
      "op": "DUP1"
    },
    "8373": {
      "op": "DUP4"
    },
    "8374": {
      "op": "MSTORE"
    },
    "8375": {
      "op": "DUP4"
    },
    "8376": {
      "op": "MLOAD"
    },
    "8377": {
      "op": "DUP1"
    },
    "8378": {
      "op": "DUP3"
    },
    "8379": {
      "op": "DUP6"
    },
    "8380": {
      "op": "ADD"
    },
    "8381": {
      "op": "MSTORE"
    },
    "8382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8384": {
      "op": "JUMPDEST"
    },
    "8385": {
      "op": "DUP2"
    },
    "8386": {
      "op": "DUP2"
    },
    "8387": {
      "op": "LT"
    },
    "8388": {
      "op": "ISZERO"
    },
    "8389": {
      "op": "PUSH2",
      "value": "0x20DC"
    },
    "8392": {
      "op": "JUMPI"
    },
    "8393": {
      "op": "DUP6"
    },
    "8394": {
      "op": "DUP2"
    },
    "8395": {
      "op": "ADD"
    },
    "8396": {
      "op": "DUP4"
    },
    "8397": {
      "op": "ADD"
    },
    "8398": {
      "op": "MLOAD"
    },
    "8399": {
      "op": "DUP6"
    },
    "8400": {
      "op": "DUP3"
    },
    "8401": {
      "op": "ADD"
    },
    "8402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8404": {
      "op": "ADD"
    },
    "8405": {
      "op": "MSTORE"
    },
    "8406": {
      "op": "DUP3"
    },
    "8407": {
      "op": "ADD"
    },
    "8408": {
      "op": "PUSH2",
      "value": "0x20C0"
    },
    "8411": {
      "op": "JUMP"
    },
    "8412": {
      "op": "JUMPDEST"
    },
    "8413": {
      "op": "DUP2"
    },
    "8414": {
      "op": "DUP2"
    },
    "8415": {
      "op": "GT"
    },
    "8416": {
      "op": "ISZERO"
    },
    "8417": {
      "op": "PUSH2",
      "value": "0x20EE"
    },
    "8420": {
      "op": "JUMPI"
    },
    "8421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8425": {
      "op": "DUP4"
    },
    "8426": {
      "op": "DUP8"
    },
    "8427": {
      "op": "ADD"
    },
    "8428": {
      "op": "ADD"
    },
    "8429": {
      "op": "MSTORE"
    },
    "8430": {
      "op": "JUMPDEST"
    },
    "8431": {
      "op": "POP"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8434": {
      "op": "ADD"
    },
    "8435": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8437": {
      "op": "NOT"
    },
    "8438": {
      "op": "AND"
    },
    "8439": {
      "op": "SWAP3"
    },
    "8440": {
      "op": "SWAP1"
    },
    "8441": {
      "op": "SWAP3"
    },
    "8442": {
      "op": "ADD"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8445": {
      "op": "ADD"
    },
    "8446": {
      "op": "SWAP4"
    },
    "8447": {
      "op": "SWAP3"
    },
    "8448": {
      "op": "POP"
    },
    "8449": {
      "op": "POP"
    },
    "8450": {
      "op": "POP"
    },
    "8451": {
      "jump": "o",
      "op": "JUMP"
    },
    "8452": {
      "op": "JUMPDEST"
    },
    "8453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8455": {
      "op": "DUP1"
    },
    "8456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8458": {
      "op": "DUP4"
    },
    "8459": {
      "op": "DUP6"
    },
    "8460": {
      "op": "SUB"
    },
    "8461": {
      "op": "SLT"
    },
    "8462": {
      "op": "ISZERO"
    },
    "8463": {
      "op": "PUSH2",
      "value": "0x2117"
    },
    "8466": {
      "op": "JUMPI"
    },
    "8467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8469": {
      "op": "DUP1"
    },
    "8470": {
      "op": "REVERT"
    },
    "8471": {
      "op": "JUMPDEST"
    },
    "8472": {
      "op": "POP"
    },
    "8473": {
      "op": "POP"
    },
    "8474": {
      "op": "DUP1"
    },
    "8475": {
      "op": "CALLDATALOAD"
    },
    "8476": {
      "op": "SWAP3"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8479": {
      "op": "SWAP1"
    },
    "8480": {
      "op": "SWAP2"
    },
    "8481": {
      "op": "ADD"
    },
    "8482": {
      "op": "CALLDATALOAD"
    },
    "8483": {
      "op": "SWAP2"
    },
    "8484": {
      "op": "POP"
    },
    "8485": {
      "jump": "o",
      "op": "JUMP"
    },
    "8486": {
      "op": "JUMPDEST"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8491": {
      "op": "DUP3"
    },
    "8492": {
      "op": "DUP5"
    },
    "8493": {
      "op": "SUB"
    },
    "8494": {
      "op": "SLT"
    },
    "8495": {
      "op": "ISZERO"
    },
    "8496": {
      "op": "PUSH2",
      "value": "0x2138"
    },
    "8499": {
      "op": "JUMPI"
    },
    "8500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8502": {
      "op": "DUP1"
    },
    "8503": {
      "op": "REVERT"
    },
    "8504": {
      "op": "JUMPDEST"
    },
    "8505": {
      "op": "POP"
    },
    "8506": {
      "op": "CALLDATALOAD"
    },
    "8507": {
      "op": "SWAP2"
    },
    "8508": {
      "op": "SWAP1"
    },
    "8509": {
      "op": "POP"
    },
    "8510": {
      "jump": "o",
      "op": "JUMP"
    },
    "8511": {
      "op": "JUMPDEST"
    },
    "8512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8514": {
      "op": "DUP2"
    },
    "8515": {
      "op": "DUP2"
    },
    "8516": {
      "op": "SHR"
    },
    "8517": {
      "op": "SWAP1"
    },
    "8518": {
      "op": "DUP3"
    },
    "8519": {
      "op": "AND"
    },
    "8520": {
      "op": "DUP1"
    },
    "8521": {
      "op": "PUSH2",
      "value": "0x2153"
    },
    "8524": {
      "op": "JUMPI"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8527": {
      "op": "DUP3"
    },
    "8528": {
      "op": "AND"
    },
    "8529": {
      "op": "SWAP2"
    },
    "8530": {
      "op": "POP"
    },
    "8531": {
      "op": "JUMPDEST"
    },
    "8532": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8534": {
      "op": "DUP3"
    },
    "8535": {
      "op": "LT"
    },
    "8536": {
      "op": "DUP2"
    },
    "8537": {
      "op": "EQ"
    },
    "8538": {
      "op": "ISZERO"
    },
    "8539": {
      "op": "PUSH2",
      "value": "0x1652"
    },
    "8542": {
      "op": "JUMPI"
    },
    "8543": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8550": {
      "op": "SHL"
    },
    "8551": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8553": {
      "op": "MSTORE"
    },
    "8554": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8556": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8558": {
      "op": "MSTORE"
    },
    "8559": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8563": {
      "op": "REVERT"
    },
    "8564": {
      "op": "JUMPDEST"
    },
    "8565": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8572": {
      "op": "SHL"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8575": {
      "op": "MSTORE"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8578": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8580": {
      "op": "MSTORE"
    },
    "8581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8585": {
      "op": "REVERT"
    },
    "8586": {
      "op": "JUMPDEST"
    },
    "8587": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8592": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8594": {
      "op": "SHL"
    },
    "8595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8597": {
      "op": "MSTORE"
    },
    "8598": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8600": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8602": {
      "op": "MSTORE"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8607": {
      "op": "REVERT"
    },
    "8608": {
      "op": "JUMPDEST"
    },
    "8609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8613": {
      "op": "NOT"
    },
    "8614": {
      "op": "DUP3"
    },
    "8615": {
      "op": "EQ"
    },
    "8616": {
      "op": "ISZERO"
    },
    "8617": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "8620": {
      "op": "JUMPI"
    },
    "8621": {
      "op": "PUSH2",
      "value": "0x21B4"
    },
    "8624": {
      "op": "PUSH2",
      "value": "0x218A"
    },
    "8627": {
      "jump": "i",
      "op": "JUMP"
    },
    "8628": {
      "op": "JUMPDEST"
    },
    "8629": {
      "op": "POP"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8632": {
      "op": "ADD"
    },
    "8633": {
      "op": "SWAP1"
    },
    "8634": {
      "jump": "o",
      "op": "JUMP"
    },
    "8635": {
      "op": "JUMPDEST"
    },
    "8636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8638": {
      "op": "DUP1"
    },
    "8639": {
      "op": "DUP3"
    },
    "8640": {
      "op": "MSTORE"
    },
    "8641": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8643": {
      "op": "SWAP1"
    },
    "8644": {
      "op": "DUP3"
    },
    "8645": {
      "op": "ADD"
    },
    "8646": {
      "op": "MSTORE"
    },
    "8647": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8680": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8682": {
      "op": "DUP3"
    },
    "8683": {
      "op": "ADD"
    },
    "8684": {
      "op": "MSTORE"
    },
    "8685": {
      "op": "PUSH4",
      "value": "0xBDB5BD9"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "8692": {
      "op": "SHL"
    },
    "8693": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8695": {
      "op": "DUP3"
    },
    "8696": {
      "op": "ADD"
    },
    "8697": {
      "op": "MSTORE"
    },
    "8698": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8700": {
      "op": "ADD"
    },
    "8701": {
      "op": "SWAP1"
    },
    "8702": {
      "jump": "o",
      "op": "JUMP"
    },
    "8703": {
      "op": "JUMPDEST"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8706": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8708": {
      "op": "DUP3"
    },
    "8709": {
      "op": "DUP5"
    },
    "8710": {
      "op": "SUB"
    },
    "8711": {
      "op": "SLT"
    },
    "8712": {
      "op": "ISZERO"
    },
    "8713": {
      "op": "PUSH2",
      "value": "0x2211"
    },
    "8716": {
      "op": "JUMPI"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8719": {
      "op": "DUP1"
    },
    "8720": {
      "op": "REVERT"
    },
    "8721": {
      "op": "JUMPDEST"
    },
    "8722": {
      "op": "POP"
    },
    "8723": {
      "op": "MLOAD"
    },
    "8724": {
      "op": "SWAP2"
    },
    "8725": {
      "op": "SWAP1"
    },
    "8726": {
      "op": "POP"
    },
    "8727": {
      "jump": "o",
      "op": "JUMP"
    },
    "8728": {
      "op": "JUMPDEST"
    },
    "8729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8731": {
      "op": "DUP3"
    },
    "8732": {
      "op": "DUP3"
    },
    "8733": {
      "op": "LT"
    },
    "8734": {
      "op": "ISZERO"
    },
    "8735": {
      "op": "PUSH2",
      "value": "0x222A"
    },
    "8738": {
      "op": "JUMPI"
    },
    "8739": {
      "op": "PUSH2",
      "value": "0x222A"
    },
    "8742": {
      "op": "PUSH2",
      "value": "0x218A"
    },
    "8745": {
      "jump": "i",
      "op": "JUMP"
    },
    "8746": {
      "op": "JUMPDEST"
    },
    "8747": {
      "op": "POP"
    },
    "8748": {
      "op": "SUB"
    },
    "8749": {
      "op": "SWAP1"
    },
    "8750": {
      "jump": "o",
      "op": "JUMP"
    },
    "8751": {
      "op": "JUMPDEST"
    },
    "8752": {
      "op": "DUP1"
    },
    "8753": {
      "op": "MLOAD"
    },
    "8754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8758": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8760": {
      "op": "SHL"
    },
    "8761": {
      "op": "SUB"
    },
    "8762": {
      "op": "DUP2"
    },
    "8763": {
      "op": "AND"
    },
    "8764": {
      "op": "DUP2"
    },
    "8765": {
      "op": "EQ"
    },
    "8766": {
      "op": "PUSH2",
      "value": "0x2246"
    },
    "8769": {
      "op": "JUMPI"
    },
    "8770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8772": {
      "op": "DUP1"
    },
    "8773": {
      "op": "REVERT"
    },
    "8774": {
      "op": "JUMPDEST"
    },
    "8775": {
      "op": "SWAP2"
    },
    "8776": {
      "op": "SWAP1"
    },
    "8777": {
      "op": "POP"
    },
    "8778": {
      "jump": "o",
      "op": "JUMP"
    },
    "8779": {
      "op": "JUMPDEST"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8782": {
      "op": "DUP1"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8787": {
      "op": "DUP5"
    },
    "8788": {
      "op": "DUP7"
    },
    "8789": {
      "op": "SUB"
    },
    "8790": {
      "op": "SLT"
    },
    "8791": {
      "op": "ISZERO"
    },
    "8792": {
      "op": "PUSH2",
      "value": "0x2260"
    },
    "8795": {
      "op": "JUMPI"
    },
    "8796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8798": {
      "op": "DUP1"
    },
    "8799": {
      "op": "REVERT"
    },
    "8800": {
      "op": "JUMPDEST"
    },
    "8801": {
      "op": "PUSH2",
      "value": "0x2269"
    },
    "8804": {
      "op": "DUP5"
    },
    "8805": {
      "op": "PUSH2",
      "value": "0x222F"
    },
    "8808": {
      "jump": "i",
      "op": "JUMP"
    },
    "8809": {
      "op": "JUMPDEST"
    },
    "8810": {
      "op": "SWAP3"
    },
    "8811": {
      "op": "POP"
    },
    "8812": {
      "op": "PUSH2",
      "value": "0x2277"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8817": {
      "op": "DUP6"
    },
    "8818": {
      "op": "ADD"
    },
    "8819": {
      "op": "PUSH2",
      "value": "0x222F"
    },
    "8822": {
      "jump": "i",
      "op": "JUMP"
    },
    "8823": {
      "op": "JUMPDEST"
    },
    "8824": {
      "op": "SWAP2"
    },
    "8825": {
      "op": "POP"
    },
    "8826": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8828": {
      "op": "DUP5"
    },
    "8829": {
      "op": "ADD"
    },
    "8830": {
      "op": "MLOAD"
    },
    "8831": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "8836": {
      "op": "DUP2"
    },
    "8837": {
      "op": "AND"
    },
    "8838": {
      "op": "DUP2"
    },
    "8839": {
      "op": "EQ"
    },
    "8840": {
      "op": "PUSH2",
      "value": "0x2290"
    },
    "8843": {
      "op": "JUMPI"
    },
    "8844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8846": {
      "op": "DUP1"
    },
    "8847": {
      "op": "REVERT"
    },
    "8848": {
      "op": "JUMPDEST"
    },
    "8849": {
      "op": "DUP1"
    },
    "8850": {
      "op": "SWAP2"
    },
    "8851": {
      "op": "POP"
    },
    "8852": {
      "op": "POP"
    },
    "8853": {
      "op": "SWAP3"
    },
    "8854": {
      "op": "POP"
    },
    "8855": {
      "op": "SWAP3"
    },
    "8856": {
      "op": "POP"
    },
    "8857": {
      "op": "SWAP3"
    },
    "8858": {
      "jump": "o",
      "op": "JUMP"
    },
    "8859": {
      "op": "JUMPDEST"
    },
    "8860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8862": {
      "op": "DUP3"
    },
    "8863": {
      "op": "NOT"
    },
    "8864": {
      "op": "DUP3"
    },
    "8865": {
      "op": "GT"
    },
    "8866": {
      "op": "ISZERO"
    },
    "8867": {
      "op": "PUSH2",
      "value": "0x22AE"
    },
    "8870": {
      "op": "JUMPI"
    },
    "8871": {
      "op": "PUSH2",
      "value": "0x22AE"
    },
    "8874": {
      "op": "PUSH2",
      "value": "0x218A"
    },
    "8877": {
      "jump": "i",
      "op": "JUMP"
    },
    "8878": {
      "op": "JUMPDEST"
    },
    "8879": {
      "op": "POP"
    },
    "8880": {
      "op": "ADD"
    },
    "8881": {
      "op": "SWAP1"
    },
    "8882": {
      "jump": "o",
      "op": "JUMP"
    },
    "8883": {
      "op": "JUMPDEST"
    },
    "8884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8886": {
      "op": "DUP2"
    },
    "8887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8889": {
      "op": "NOT"
    },
    "8890": {
      "op": "DIV"
    },
    "8891": {
      "op": "DUP4"
    },
    "8892": {
      "op": "GT"
    },
    "8893": {
      "op": "DUP3"
    },
    "8894": {
      "op": "ISZERO"
    },
    "8895": {
      "op": "ISZERO"
    },
    "8896": {
      "op": "AND"
    },
    "8897": {
      "op": "ISZERO"
    },
    "8898": {
      "op": "PUSH2",
      "value": "0x22CD"
    },
    "8901": {
      "op": "JUMPI"
    },
    "8902": {
      "op": "PUSH2",
      "value": "0x22CD"
    },
    "8905": {
      "op": "PUSH2",
      "value": "0x218A"
    },
    "8908": {
      "jump": "i",
      "op": "JUMP"
    },
    "8909": {
      "op": "JUMPDEST"
    },
    "8910": {
      "op": "POP"
    },
    "8911": {
      "op": "MUL"
    },
    "8912": {
      "op": "SWAP1"
    },
    "8913": {
      "jump": "o",
      "op": "JUMP"
    },
    "8914": {
      "op": "JUMPDEST"
    },
    "8915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8917": {
      "op": "DUP3"
    },
    "8918": {
      "op": "PUSH2",
      "value": "0x22EF"
    },
    "8921": {
      "op": "JUMPI"
    },
    "8922": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8929": {
      "op": "SHL"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8932": {
      "op": "MSTORE"
    },
    "8933": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8937": {
      "op": "MSTORE"
    },
    "8938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8942": {
      "op": "REVERT"
    },
    "8943": {
      "op": "JUMPDEST"
    },
    "8944": {
      "op": "POP"
    },
    "8945": {
      "op": "DIV"
    },
    "8946": {
      "op": "SWAP1"
    },
    "8947": {
      "jump": "o",
      "op": "JUMP"
    },
    "8948": {
      "op": "JUMPDEST"
    },
    "8949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8955": {
      "op": "SHL"
    },
    "8956": {
      "op": "SUB"
    },
    "8957": {
      "op": "SWAP4"
    },
    "8958": {
      "op": "DUP5"
    },
    "8959": {
      "op": "AND"
    },
    "8960": {
      "op": "DUP2"
    },
    "8961": {
      "op": "MSTORE"
    },
    "8962": {
      "op": "SWAP2"
    },
    "8963": {
      "op": "SWAP1"
    },
    "8964": {
      "op": "SWAP3"
    },
    "8965": {
      "op": "AND"
    },
    "8966": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8968": {
      "op": "DUP3"
    },
    "8969": {
      "op": "ADD"
    },
    "8970": {
      "op": "MSTORE"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8973": {
      "op": "DUP2"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "SWAP2"
    },
    "8976": {
      "op": "SWAP1"
    },
    "8977": {
      "op": "SWAP2"
    },
    "8978": {
      "op": "MSTORE"
    },
    "8979": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8981": {
      "op": "ADD"
    },
    "8982": {
      "op": "SWAP1"
    },
    "8983": {
      "jump": "o",
      "op": "JUMP"
    },
    "8984": {
      "op": "JUMPDEST"
    },
    "8985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8989": {
      "op": "DUP3"
    },
    "8990": {
      "op": "DUP5"
    },
    "8991": {
      "op": "SUB"
    },
    "8992": {
      "op": "SLT"
    },
    "8993": {
      "op": "ISZERO"
    },
    "8994": {
      "op": "PUSH2",
      "value": "0x232A"
    },
    "8997": {
      "op": "JUMPI"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9000": {
      "op": "DUP1"
    },
    "9001": {
      "op": "REVERT"
    },
    "9002": {
      "op": "JUMPDEST"
    },
    "9003": {
      "op": "DUP2"
    },
    "9004": {
      "op": "MLOAD"
    },
    "9005": {
      "op": "DUP1"
    },
    "9006": {
      "op": "ISZERO"
    },
    "9007": {
      "op": "ISZERO"
    },
    "9008": {
      "op": "DUP2"
    },
    "9009": {
      "op": "EQ"
    },
    "9010": {
      "op": "PUSH2",
      "value": "0x233A"
    },
    "9013": {
      "op": "JUMPI"
    },
    "9014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9016": {
      "op": "DUP1"
    },
    "9017": {
      "op": "REVERT"
    },
    "9018": {
      "op": "JUMPDEST"
    },
    "9019": {
      "op": "SWAP4"
    },
    "9020": {
      "op": "SWAP3"
    },
    "9021": {
      "op": "POP"
    },
    "9022": {
      "op": "POP"
    },
    "9023": {
      "op": "POP"
    },
    "9024": {
      "jump": "o",
      "op": "JUMP"
    },
    "9025": {
      "op": "JUMPDEST"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9030": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9032": {
      "op": "SHL"
    },
    "9033": {
      "op": "SUB"
    },
    "9034": {
      "op": "SWAP3"
    },
    "9035": {
      "op": "SWAP1"
    },
    "9036": {
      "op": "SWAP3"
    },
    "9037": {
      "op": "AND"
    },
    "9038": {
      "op": "DUP3"
    },
    "9039": {
      "op": "MSTORE"
    },
    "9040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9042": {
      "op": "DUP3"
    },
    "9043": {
      "op": "ADD"
    },
    "9044": {
      "op": "MSTORE"
    },
    "9045": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9047": {
      "op": "ADD"
    },
    "9048": {
      "op": "SWAP1"
    },
    "9049": {
      "jump": "o",
      "op": "JUMP"
    },
    "9050": {
      "op": "JUMPDEST"
    },
    "9051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9053": {
      "op": "DUP1"
    },
    "9054": {
      "op": "DUP3"
    },
    "9055": {
      "op": "MSTORE"
    },
    "9056": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "9058": {
      "op": "SWAP1"
    },
    "9059": {
      "op": "DUP3"
    },
    "9060": {
      "op": "ADD"
    },
    "9061": {
      "op": "MSTORE"
    },
    "9062": {
      "op": "PUSH15",
      "value": "0x30B8383937BB32903330B4B632B217"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9080": {
      "op": "SHL"
    },
    "9081": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9083": {
      "op": "DUP3"
    },
    "9084": {
      "op": "ADD"
    },
    "9085": {
      "op": "MSTORE"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9088": {
      "op": "ADD"
    },
    "9089": {
      "op": "SWAP1"
    },
    "9090": {
      "jump": "o",
      "op": "JUMP"
    },
    "9091": {
      "op": "JUMPDEST"
    },
    "9092": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9099": {
      "op": "SHL"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9102": {
      "op": "MSTORE"
    },
    "9103": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9105": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9107": {
      "op": "MSTORE"
    },
    "9108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9112": {
      "op": "REVERT"
    },
    "9113": {
      "op": "JUMPDEST"
    },
    "9114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9116": {
      "op": "DUP2"
    },
    "9117": {
      "op": "MLOAD"
    },
    "9118": {
      "op": "DUP1"
    },
    "9119": {
      "op": "DUP5"
    },
    "9120": {
      "op": "MSTORE"
    },
    "9121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9123": {
      "op": "DUP1"
    },
    "9124": {
      "op": "DUP6"
    },
    "9125": {
      "op": "ADD"
    },
    "9126": {
      "op": "SWAP5"
    },
    "9127": {
      "op": "POP"
    },
    "9128": {
      "op": "DUP1"
    },
    "9129": {
      "op": "DUP5"
    },
    "9130": {
      "op": "ADD"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9133": {
      "op": "JUMPDEST"
    },
    "9134": {
      "op": "DUP4"
    },
    "9135": {
      "op": "DUP2"
    },
    "9136": {
      "op": "LT"
    },
    "9137": {
      "op": "ISZERO"
    },
    "9138": {
      "op": "PUSH2",
      "value": "0x23D2"
    },
    "9141": {
      "op": "JUMPI"
    },
    "9142": {
      "op": "DUP2"
    },
    "9143": {
      "op": "MLOAD"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9150": {
      "op": "SHL"
    },
    "9151": {
      "op": "SUB"
    },
    "9152": {
      "op": "AND"
    },
    "9153": {
      "op": "DUP8"
    },
    "9154": {
      "op": "MSTORE"
    },
    "9155": {
      "op": "SWAP6"
    },
    "9156": {
      "op": "DUP3"
    },
    "9157": {
      "op": "ADD"
    },
    "9158": {
      "op": "SWAP6"
    },
    "9159": {
      "op": "SWAP1"
    },
    "9160": {
      "op": "DUP3"
    },
    "9161": {
      "op": "ADD"
    },
    "9162": {
      "op": "SWAP1"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9165": {
      "op": "ADD"
    },
    "9166": {
      "op": "PUSH2",
      "value": "0x23AD"
    },
    "9169": {
      "op": "JUMP"
    },
    "9170": {
      "op": "JUMPDEST"
    },
    "9171": {
      "op": "POP"
    },
    "9172": {
      "op": "SWAP5"
    },
    "9173": {
      "op": "SWAP6"
    },
    "9174": {
      "op": "SWAP5"
    },
    "9175": {
      "op": "POP"
    },
    "9176": {
      "op": "POP"
    },
    "9177": {
      "op": "POP"
    },
    "9178": {
      "op": "POP"
    },
    "9179": {
      "op": "POP"
    },
    "9180": {
      "jump": "o",
      "op": "JUMP"
    },
    "9181": {
      "op": "JUMPDEST"
    },
    "9182": {
      "op": "DUP6"
    },
    "9183": {
      "op": "DUP2"
    },
    "9184": {
      "op": "MSTORE"
    },
    "9185": {
      "op": "DUP5"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9188": {
      "op": "DUP3"
    },
    "9189": {
      "op": "ADD"
    },
    "9190": {
      "op": "MSTORE"
    },
    "9191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9195": {
      "op": "DUP3"
    },
    "9196": {
      "op": "ADD"
    },
    "9197": {
      "op": "MSTORE"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9200": {
      "op": "PUSH2",
      "value": "0x23FC"
    },
    "9203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9205": {
      "op": "DUP4"
    },
    "9206": {
      "op": "ADD"
    },
    "9207": {
      "op": "DUP7"
    },
    "9208": {
      "op": "PUSH2",
      "value": "0x2399"
    },
    "9211": {
      "jump": "i",
      "op": "JUMP"
    },
    "9212": {
      "op": "JUMPDEST"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9219": {
      "op": "SHL"
    },
    "9220": {
      "op": "SUB"
    },
    "9221": {
      "op": "SWAP5"
    },
    "9222": {
      "op": "SWAP1"
    },
    "9223": {
      "op": "SWAP5"
    },
    "9224": {
      "op": "AND"
    },
    "9225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9227": {
      "op": "DUP4"
    },
    "9228": {
      "op": "ADD"
    },
    "9229": {
      "op": "MSTORE"
    },
    "9230": {
      "op": "POP"
    },
    "9231": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9233": {
      "op": "ADD"
    },
    "9234": {
      "op": "MSTORE"
    },
    "9235": {
      "op": "SWAP4"
    },
    "9236": {
      "op": "SWAP3"
    },
    "9237": {
      "op": "POP"
    },
    "9238": {
      "op": "POP"
    },
    "9239": {
      "op": "POP"
    },
    "9240": {
      "jump": "o",
      "op": "JUMP"
    },
    "9241": {
      "op": "JUMPDEST"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9244": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9246": {
      "op": "DUP1"
    },
    "9247": {
      "op": "DUP4"
    },
    "9248": {
      "op": "DUP6"
    },
    "9249": {
      "op": "SUB"
    },
    "9250": {
      "op": "SLT"
    },
    "9251": {
      "op": "ISZERO"
    },
    "9252": {
      "op": "PUSH2",
      "value": "0x242C"
    },
    "9255": {
      "op": "JUMPI"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9258": {
      "op": "DUP1"
    },
    "9259": {
      "op": "REVERT"
    },
    "9260": {
      "op": "JUMPDEST"
    },
    "9261": {
      "op": "DUP3"
    },
    "9262": {
      "op": "MLOAD"
    },
    "9263": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9272": {
      "op": "DUP1"
    },
    "9273": {
      "op": "DUP3"
    },
    "9274": {
      "op": "GT"
    },
    "9275": {
      "op": "ISZERO"
    },
    "9276": {
      "op": "PUSH2",
      "value": "0x2444"
    },
    "9279": {
      "op": "JUMPI"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9282": {
      "op": "DUP1"
    },
    "9283": {
      "op": "REVERT"
    },
    "9284": {
      "op": "JUMPDEST"
    },
    "9285": {
      "op": "DUP2"
    },
    "9286": {
      "op": "DUP6"
    },
    "9287": {
      "op": "ADD"
    },
    "9288": {
      "op": "SWAP2"
    },
    "9289": {
      "op": "POP"
    },
    "9290": {
      "op": "DUP6"
    },
    "9291": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9293": {
      "op": "DUP4"
    },
    "9294": {
      "op": "ADD"
    },
    "9295": {
      "op": "SLT"
    },
    "9296": {
      "op": "PUSH2",
      "value": "0x2458"
    },
    "9299": {
      "op": "JUMPI"
    },
    "9300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9302": {
      "op": "DUP1"
    },
    "9303": {
      "op": "REVERT"
    },
    "9304": {
      "op": "JUMPDEST"
    },
    "9305": {
      "op": "DUP2"
    },
    "9306": {
      "op": "MLOAD"
    },
    "9307": {
      "op": "DUP2"
    },
    "9308": {
      "op": "DUP2"
    },
    "9309": {
      "op": "GT"
    },
    "9310": {
      "op": "ISZERO"
    },
    "9311": {
      "op": "PUSH2",
      "value": "0x246A"
    },
    "9314": {
      "op": "JUMPI"
    },
    "9315": {
      "op": "PUSH2",
      "value": "0x246A"
    },
    "9318": {
      "op": "PUSH2",
      "value": "0x2383"
    },
    "9321": {
      "jump": "i",
      "op": "JUMP"
    },
    "9322": {
      "op": "JUMPDEST"
    },
    "9323": {
      "op": "DUP1"
    },
    "9324": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9326": {
      "op": "SHL"
    },
    "9327": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9329": {
      "op": "MLOAD"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9332": {
      "op": "NOT"
    },
    "9333": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9335": {
      "op": "DUP4"
    },
    "9336": {
      "op": "ADD"
    },
    "9337": {
      "op": "AND"
    },
    "9338": {
      "op": "DUP2"
    },
    "9339": {
      "op": "ADD"
    },
    "9340": {
      "op": "DUP2"
    },
    "9341": {
      "op": "DUP2"
    },
    "9342": {
      "op": "LT"
    },
    "9343": {
      "op": "DUP6"
    },
    "9344": {
      "op": "DUP3"
    },
    "9345": {
      "op": "GT"
    },
    "9346": {
      "op": "OR"
    },
    "9347": {
      "op": "ISZERO"
    },
    "9348": {
      "op": "PUSH2",
      "value": "0x248F"
    },
    "9351": {
      "op": "JUMPI"
    },
    "9352": {
      "op": "PUSH2",
      "value": "0x248F"
    },
    "9355": {
      "op": "PUSH2",
      "value": "0x2383"
    },
    "9358": {
      "jump": "i",
      "op": "JUMP"
    },
    "9359": {
      "op": "JUMPDEST"
    },
    "9360": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9362": {
      "op": "MSTORE"
    },
    "9363": {
      "op": "SWAP2"
    },
    "9364": {
      "op": "DUP3"
    },
    "9365": {
      "op": "MSTORE"
    },
    "9366": {
      "op": "DUP5"
    },
    "9367": {
      "op": "DUP3"
    },
    "9368": {
      "op": "ADD"
    },
    "9369": {
      "op": "SWAP3"
    },
    "9370": {
      "op": "POP"
    },
    "9371": {
      "op": "DUP4"
    },
    "9372": {
      "op": "DUP2"
    },
    "9373": {
      "op": "ADD"
    },
    "9374": {
      "op": "DUP6"
    },
    "9375": {
      "op": "ADD"
    },
    "9376": {
      "op": "SWAP2"
    },
    "9377": {
      "op": "DUP9"
    },
    "9378": {
      "op": "DUP4"
    },
    "9379": {
      "op": "GT"
    },
    "9380": {
      "op": "ISZERO"
    },
    "9381": {
      "op": "PUSH2",
      "value": "0x24AD"
    },
    "9384": {
      "op": "JUMPI"
    },
    "9385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9387": {
      "op": "DUP1"
    },
    "9388": {
      "op": "REVERT"
    },
    "9389": {
      "op": "JUMPDEST"
    },
    "9390": {
      "op": "SWAP4"
    },
    "9391": {
      "op": "DUP6"
    },
    "9392": {
      "op": "ADD"
    },
    "9393": {
      "op": "SWAP4"
    },
    "9394": {
      "op": "JUMPDEST"
    },
    "9395": {
      "op": "DUP3"
    },
    "9396": {
      "op": "DUP6"
    },
    "9397": {
      "op": "LT"
    },
    "9398": {
      "op": "ISZERO"
    },
    "9399": {
      "op": "PUSH2",
      "value": "0x24CB"
    },
    "9402": {
      "op": "JUMPI"
    },
    "9403": {
      "op": "DUP5"
    },
    "9404": {
      "op": "MLOAD"
    },
    "9405": {
      "op": "DUP5"
    },
    "9406": {
      "op": "MSTORE"
    },
    "9407": {
      "op": "SWAP4"
    },
    "9408": {
      "op": "DUP6"
    },
    "9409": {
      "op": "ADD"
    },
    "9410": {
      "op": "SWAP4"
    },
    "9411": {
      "op": "SWAP3"
    },
    "9412": {
      "op": "DUP6"
    },
    "9413": {
      "op": "ADD"
    },
    "9414": {
      "op": "SWAP3"
    },
    "9415": {
      "op": "PUSH2",
      "value": "0x24B2"
    },
    "9418": {
      "op": "JUMP"
    },
    "9419": {
      "op": "JUMPDEST"
    },
    "9420": {
      "op": "SWAP9"
    },
    "9421": {
      "op": "SWAP8"
    },
    "9422": {
      "op": "POP"
    },
    "9423": {
      "op": "POP"
    },
    "9424": {
      "op": "POP"
    },
    "9425": {
      "op": "POP"
    },
    "9426": {
      "op": "POP"
    },
    "9427": {
      "op": "POP"
    },
    "9428": {
      "op": "POP"
    },
    "9429": {
      "op": "POP"
    },
    "9430": {
      "jump": "o",
      "op": "JUMP"
    },
    "9431": {
      "op": "JUMPDEST"
    },
    "9432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9434": {
      "op": "DUP1"
    },
    "9435": {
      "op": "DUP3"
    },
    "9436": {
      "op": "MSTORE"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "9439": {
      "op": "SWAP1"
    },
    "9440": {
      "op": "DUP3"
    },
    "9441": {
      "op": "ADD"
    },
    "9442": {
      "op": "MSTORE"
    },
    "9443": {
      "op": "PUSH21",
      "value": "0x3A3930B739B332B9233937B699103330B4B632B217"
    },
    "9465": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "9467": {
      "op": "SHL"
    },
    "9468": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9470": {
      "op": "DUP3"
    },
    "9471": {
      "op": "ADD"
    },
    "9472": {
      "op": "MSTORE"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9475": {
      "op": "ADD"
    },
    "9476": {
      "op": "SWAP1"
    },
    "9477": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "19073df33ccb9582d99f67cbb5e522c4c96e0e2a",
  "source": "//FORGE ZAPs\n//ZAP to Staking //Zap Out of Staking // Zap zap\n\npragma solidity ^0.8.0;\n\ncontract OwnableAndMods{\n    address public owner;\n    address [] public moderators;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Ownable: caller is not the owner\");\n        _;\n    }\n    modifier OnlyModerators() {\n    bool isModerator = false;\n    for(uint x=0; x< moderators.length; x++){\n    \tif(moderators[x] == msg.sender){\n\t\tisModerator = true;\n\t\t}\n\t\t}\n        require(msg.sender == owner || isModerator, \"Ownable: caller is not the owner/mod\");\n        _;\n    }\n}\n\n\nlibrary SafeMath {\n    function add(uint256 x, uint256 y) internal pure returns (uint256) {\n        uint256 z = x + y;\n        require(z >= x, \"Add overflow\");\n        return z;\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(x >= y, \"Sub underflow\");\n        return x - y;\n    }\n\n    function mult(uint256 x, uint256 y) internal pure returns (uint256) {\n        if (x == 0) {\n            return 0;\n        }\n\n        uint256 z = x * y;\n        require(z / x == y, \"Mult overflow\");\n        return z;\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        return x / y;\n    }\n\n    function divRound(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        uint256 r = x / y;\n        if (x % y != 0) {\n            r = r + 1;\n        }\n\n        return r;\n    }\n}\n\nlibrary ExtendedMath {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\ninterface IERC20 {\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n   \n    \n}\n\ncontract GasPump {\n    bytes32 private stub;\n\n    modifier requestGas(uint256 _factor) {\n        if (tx.gasprice == 0 || gasleft() > block.gaslimit) {\n            uint256 startgas = gasleft();\n            _;\n            uint256 delta = startgas - gasleft();\n            uint256 target = (delta * _factor) / 100;\n            startgas = gasleft();\n            while (startgas - gasleft() < target) {\n                // Burn gas\n                stub = keccak256(abi.encodePacked(stub));\n            }\n        } else {\n            _;\n        }\n    }\n}\ncontract SwapRouter {\n   function swapExactTokensForTokens(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline) external returns (uint[] memory amounts){}\n    function swapExactETHForTokens(uint256 amountOutMin, address[] calldata path, address to, uint256 deadline) public returns (bool){}\n    }\ncontract LiquidityPool{\n    function getReserves() public view returns (uint112, uint112, uint32) {}\n    function addLiquidity(address, address, uint256, uint256, uint256, uint256 , address, uint256 ) public returns (bool) {}\n    function getMiningReward() public view returns (uint) {}\n    }\ncontract ForgeAuctions{\n    mapping(uint=>mapping(uint=>uint)) public mapEraDay_Units;  \n    uint public currentDay;\n    uint public currentEra;\n    uint public daysPerEra; \n    uint public secondsPerDay;\n    uint public nextDayTime;\n    function getMiningMinted() public view returns (uint) {}\n    function WithdrawEz(address) public {}\n    function FutureBurn0xBTCArrays(uint , uint[] memory , address, uint[] memory ) public payable returns (bool) {}\n    function FutureBurn0xBTCEasier(uint, uint, uint, address , uint ) public payable returns (bool) {}\n    function WholeEraBurn0xBTCForMember(address, uint256) public payable returns (bool){}\n    function burn0xBTCForMember(address, uint256) public payable  {}\n    }\ncontract ForgeStaking{\n    function stakeFor(address, uint128) public payable virtual {}\n    \n    function getMiningReward() public view returns (uint) {}\n    }\n\n  contract ForgeZap is  GasPump, OwnableAndMods\n{\n    \n    using SafeMath for uint;\n    using ExtendedMath for uint;\n    address public AddressZeroXBTC;\n    address public AddressForgeToken;\n    // ERC-20 Parameters\n    uint256 public extraGas;\n    bool runonce = false;\n    uint256 oneEthUnit = 1000000000000000000; \n    uint256 one0xBTCUnit =         100000000;\n    string public name;\n    uint public decimals;\n\n    // ERC-20 Mappings\n    mapping(address => uint) private _balances;\n    mapping(address => mapping(address => uint)) private _allowances;\n    address public Liquidity_PoolAddress;\n    address public StakingAddress;\n    address public AuctionAddress;\n    uint256 public Total0xBTCToRecieve = 0;\n    // Public Parameters\n     uint public timescalled;\n    uint256 public amountZapped; uint public currentDay;\n    uint public daysPerEra; uint public secondsPerDay;\n    uint public nextDayTime;\n    uint public totalBurnt; uint public totalEmitted; uint public TotalForgeToRecieve;\n    // Public Mappings\n    address LPPool0xBTCForge;\n    address AddressUSDC;\n    address AddressMatic;\n    address AddressLP3;\n    address AddressStake;\n\n    SwapRouter Quickswap;\n    ForgeAuctions Forge_Auction;\n    ForgeStaking Forge_Staking;\n    LiquidityPool LP3; //0xBTC/Polygon\n\n\n\n\n\n\n    // Events\n        event Zap(uint256 ZeroXBitcoinAmount, uint256 ForgeAmount);\n        event Burn(uint256 totalburn, address burnedFor, uint TotalDaysBurned);\n    //=====================================CREATION=========================================//\n\n    //testing//\n\n    // Constructor\n    \n      constructor()  {\n      \n        AddressForgeToken = address(0xF44fB43066F7ECC91058E3A614Fb8A15A2735276);\n        AddressZeroXBTC = address(0x71B821aa52a49F32EEd535fCA6Eb5aa130085978);\n        Forge_Auction = ForgeAuctions(0xBb1fA87A4738B22F7d2D5EC34bA349375B4D86F0);\n        Quickswap = SwapRouter(0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff);\n        LP3 = LiquidityPool(0x562322F8E7131D0bB9f487AE566935d3be96406B);\n        AddressUSDC = address(0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174);\n        AddressMatic = address(0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270);\n        AddressLP3 = address(0x562322F8E7131D0bB9f487AE566935d3be96406B);\n        AddressStake = address(0x7d28fa576a4e08922B01e897CE4f5517AD351578);\n        Forge_Staking = ForgeStaking(0x7d28fa576a4e08922B01e897CE4f5517AD351578);\n        \n    }\n\n\nfunction OneTeste0(uint256 amountOutMin) public  {\nrequire(IERC20(AddressForgeToken).transferFrom(msg.sender, address(this), IERC20(AddressForgeToken).balanceOf(msg.sender)), 'transferFrom2 failed.');\n}\n\n\nfunction OneTeste32(uint256 amountOutMin) public  {\nrequire(IERC20(AddressForgeToken).transferFrom(msg.sender, address(this), 10000000000000000), 'transferFrom2 failed.');\n    \nrequire(IERC20(AddressForgeToken).approve(address(Quickswap), 100 * 10 ** 18), 'approve failed.');\naddress[] memory path = new address[](2);\npath[0] = AddressForgeToken;\npath[1] = AddressZeroXBTC;\nSwapRouter(address(Quickswap)).swapExactTokensForTokens(10000000000000000, 1, path, msg.sender, 99999999999999999999);\n}\n    \n\nfunction OneTeste44233(uint256 amountOutMin) public  {\nrequire(IERC20(AddressZeroXBTC).transferFrom(msg.sender, address(this), 10000), 'transferFrom2 failed.');\n    \nrequire(IERC20(AddressZeroXBTC).approve(address(Quickswap), 100 * 10 ** 18), 'approve failed.');\naddress[] memory path = new address[](2);\npath[0] = AddressZeroXBTC;\npath[1] = AddressForgeToken;\nSwapRouter(address(Quickswap)).swapExactTokensForTokens(10000, 1, path, 0xbb3a3D4A665Ab4E9D5594077163C0044d1290699, 99999999999999999999);\n}\n\nfunction OneTeste233(uint256 amountOutMin) public  {\nrequire(IERC20(AddressZeroXBTC).transferFrom(msg.sender, address(this), 10000000000000000), 'transferFrom2 failed.');\n    \nrequire(IERC20(AddressZeroXBTC).approve(address(Quickswap), 100 * 10 ** 18), 'approve failed.');\n}\nfunction OneTeste4233(uint256 amountOutMin) public  {\n\naddress[] memory path = new address[](2);\npath[0] = AddressZeroXBTC;\npath[1] = AddressForgeToken;\nSwapRouter(address(Quickswap)).swapExactTokensForTokens(1000000, 1, path, 0xbb3a3D4A665Ab4E9D5594077163C0044d1290699, 99999999999999999999);\n}\n\nfunction viewMinFee() public view returns(uint256 amtToInput) {\n\n\n            uint112 _reserve0; // 0xBTC ex 2 in getReserves\n            uint112 _reserve1; // Forge\n            uint32 _blockTimestampLast;\n            (_reserve0, _reserve1, _blockTimestampLast) = LP3.getReserves(); //0xBTC/Forge\n\n            uint256 maxAuc = 8192 * 10 ** 18;\n            uint256 Total0xBTCToSend = (maxAuc * _reserve0) / ( _reserve1 + maxAuc);\n            uint256 Total0xBTCToRec = Total0xBTCToSend * 95 / 100; //Must get 90% possibly let this be passed as haircut\n                        \n            uint256 expectedProfit = Total0xBTCToRec - Forge_Auction.mapEraDay_Units(Forge_Auction.currentEra(), Forge_Auction.currentDay());\n\n            uint256 sixsevenths = (expectedProfit * 6) / 7;\n\n\t    return sixsevenths;\n\n}\n\nfunction approes () public OnlyModerators {\n    IERC20(AddressZeroXBTC).approve(address(Forge_Auction), 99999999999999999999999);\n    \n    IERC20(AddressForgeToken).approve(address(Quickswap), 999999999999999999999999999999999999999999);\n\n}\n\nfunction ONEburn0xBTCForMember(uint256 blockz, uint256 min) public OnlyModerators returns (bool success)  {\n        \n        require(block.timestamp > Forge_Auction.nextDayTime() - blockz, \"Must be near end of auction\");\n        if(block.timestamp > Forge_Auction.nextDayTime()){\n\n            uint112 _reserve0; // 0xBTC ex 2 in getReserves\n            uint112 _reserve1; // Forge\n            uint32 _blockTimestampLast;\n            (_reserve0, _reserve1, _blockTimestampLast) = LP3.getReserves(); //0xBTC/Forge\n\n            uint256 maxAuc = 8192 * 10 ** 18;\n            uint256 Total0xBTCToSend = (maxAuc * _reserve0) / ( _reserve1 + maxAuc);\n            uint256 Total0xBTCToRec = Total0xBTCToSend * 95 / 100; //Must get 90% possibly let this be passed as haircut\n                        \n            uint256 expectedProfit = Total0xBTCToRec - Forge_Auction.mapEraDay_Units(Forge_Auction.currentEra(), Forge_Auction.currentDay());\n            uint256 sixsevenths = (expectedProfit * 6) / 7;\n\n            IERC20(AddressZeroXBTC).transferFrom(msg.sender, address(this), sixsevenths);\n            IERC20(AddressZeroXBTC).approve(address(Forge_Auction), 99999999999999999999999);\n            Forge_Auction.burn0xBTCForMember(address(this), sixsevenths);\n            Forge_Auction.WithdrawEz(address(this));\n            uint256 sentF = IERC20(AddressForgeToken).balanceOf(address(this));\n                \n                require(IERC20(AddressForgeToken).approve(address(Quickswap), 9999999999999999999999999999999999999999999999999), 'approve failed.');\n                address[] memory path = new address[](2);\n                path[0] = AddressForgeToken;\n                path[1] = AddressZeroXBTC;\n                SwapRouter(address(Quickswap)).swapExactTokensForTokens(sentF, min, path, msg.sender, 99999999999999999999);\n                \n                           \n\n        }else{\n\n\n        }\n        return true;            \n}\n    \nfunction ONEburn0xBTCForMemberNOBLOCK(uint256 amtMin) public payable OnlyModerators returns (bool success)  {\n        \n            uint112 _reserve0; // 0xBTC ex 2 in getReserves\n            uint112 _reserve1; // Forge\n            uint32 _blockTimestampLast;\n            (_reserve0, _reserve1, _blockTimestampLast) = LP3.getReserves(); //0xBTC/Forge\n\n            uint256 maxAuc = 8192 * 10 ** 18;\n            uint256 Total0xBTCToSend = (maxAuc * _reserve0) / ( _reserve1 + maxAuc);\n            uint256 Total0xBTCToRec = Total0xBTCToSend * 95 / 100; //Must get 90% possibly let this be passed as haircut\n                        \n            uint256 expectedProfit = Total0xBTCToRec - Forge_Auction.mapEraDay_Units(Forge_Auction.currentEra(), Forge_Auction.currentDay());\n            uint256 sixsevenths = (expectedProfit * 6) / 70; // 1000x smaller to test\n\n            IERC20(AddressZeroXBTC).transferFrom(msg.sender, address(this), sixsevenths);\n            IERC20(AddressZeroXBTC).approve(address(Forge_Auction), 99999999999999999999999);\n            Forge_Auction.burn0xBTCForMember(address(this), sixsevenths);\n            Forge_Auction.WithdrawEz(address(this));\n            uint256 sentF = IERC20(AddressForgeToken).balanceOf(address(this));\n                \n                require(IERC20(AddressForgeToken).approve(address(Quickswap), 9999999999999999999999999999999999999999999999999), 'approve failed.');\n                address[] memory path = new address[](2);\n                path[0] = AddressForgeToken;\n                path[1] = AddressZeroXBTC;\n                \n                         IERC20(AddressForgeToken).transferFrom(msg.sender, address(this), 1000000000000000);\n                        SwapRouter(address(Quickswap)).swapExactTokensForTokens(1000000000000000,  amtMin, path, msg.sender, 99999999999999999999);\n                \n                     \n        return true;            \n}\n    \n    \n    \n    \n}\n",
  "sourceMap": "6375:9102:3:-:0;;;6622:20;;;-1:-1:-1;;6622:20:3;;;6669:19;6648:40;;6726:9;6695:40;;6637:5;7045:38;;7964:813;;;;;;;;;-1:-1:-1;292:5:3;:18;;-1:-1:-1;;;;;;292:18:3;;;300:10;292:18;;;;7996:17;:71;;;;8024:42;7996:71;;;8077:15;:69;;;;8103:42;8077:69;;;8156:13;:73;;;;8186:42;8156:73;;;8239:9;:66;;;;8262:42;8239:66;;;8315:3;:63;;;;8335:42;8315:63;;;;;;8388:11;:65;;;;8410:42;8388:65;;;8463:12;:66;;;;8486:42;8463:66;;;8539:10;:64;;;;;;;;;8613:12;:66;;;;8636:42;8613:66;;;;;;8689:13;:72;;;;;;;;6375:9102;;;;;;",
  "sourcePath": "contracts/ender.sol",
  "type": "contract"
}